{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/staking-contracts-typescript/projects/staking-contracts-typescript/smart_contracts/injected_rewards_pool_flux_gated/config.algo.ts",
    "/Users/kierannelson/Development/staking-contracts-typescript/projects/staking-contracts-typescript/smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;AAqTG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AA1PH;;;AAAA;AA0PG;;;AAAA;;AAhCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA3EA;;AAAA;AAAA;AAAA;;AAAA;AA/IH;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+IG;;;AAAA;;AA7BA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AA/FH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AA+FG;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAtFH;;;AAAA;AAAA;;AAsFG;;;AAAA;;AA5CA;;AAAA;AAAA;AAAA;;AAAA;AA1CH;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AA0CG;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA1BH;;;AA0BG;;;AAAA;;AAAD;;;AAVA;;AAYE;;AAAA;AARF;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASE;;AAaF;;;AAQgB;;AAlChB;AAAA;;AAAA;AAAA;AAkCS;AAAP;AAE6B;;AAAA;AA9C/B;;AA8CE;AAAA;AAC6B;;AAAA;AA7C/B;AA6CE;AAAA;AA3CF;AA4C4B;;AAA1B;AAxCF;;AAyC0C;;AAAxC;AA3CF;AA4CgC;;AAA9B;AAtCF;;AAuC2B;;AAAzB;AACgC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AApClC;;AAoCE;AAAA;AAlCF;;AAmCE;;AAAA;AAEA;;AAAA;;AACmB;;AADnB;AAAA;;;AAAA;;AAAA;;ADpEsC;;;;ACoEtC;AAAA;;;;AAAA;AAKA;AAG0B;;AACT;;;;;;;;;AAJjB;;;ADxEoC;;;ACwEpC;AAQI;;AAAA;;AAAA;AAAJ;;;AACE;AAG0B;;AACT;;;;;;;;;AAJjB;;;ADjFkC;;;ACiFlC;;;;;;AAWJ;;;AAEgB;;AAxEhB;AAAA;;AAAA;AAAA;AAwES;AAAP;AAxEF;;AAyEE;;AAAA;;AAMF;;;AAEgB;;AAjFhB;AAAA;;AAAA;AAAA;AAiFS;AAAP;AACA;;AAAA;AA1FF;AAAA;AAAA;AAAA;AA2FsD;AAA7C;;AAAA;AAAP;AAEA;;AAAA;;AArFF;AAAA;;AAAA;AAAA;AAqFE;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AA7FF;AAAA;AAAA;AAAA;AAgGgD;AAH9C;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AA3FF;AAAA;AAAA;AAAA;AAiGiC;AAA/B;AAjGF;AAAA;AAAA;AAAA;AAmGwE;ADxGxE;AAAA;AACiB;;AAxBc;;AAwBd;AACV;;AAAA;ACKP;AAAA;AAAA;AAAA;AAkGwE;AAA5B;AAAZ;AAlGhC;AAkGE;AAAA;AAC2D;;AAAnB;AAjG1C;;AAiGE;AAAA;;;;;;AAKc;;AApGhB;AAAA;;AAAA;AAAA;AAoGS;AAAP;AA1GF;AAAA;AAAA;AAAA;AA2GiC;AAAxB;AAAP;AAGA;AAlHF;AAAA;;AAAA;AAAA;AAoH4C;AACjB;;AAEC;;;;AADT;;;;;;;AAJjB;;;AD9HoC;;;AC8HpC;AAlHF;AAAA;;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA0HM;AAAJ;;;AACE;AA3HJ;AAAA;AAAA;AAAA;AA6H8C;AACjB;;AAEC;;;;AADT;;;;;;;AAJjB;;;ADzIkC;;;ACyIlC;;AAYJ;;;;;;;AAEE;;AAAA;AAEA;;AAAA;;AACiB;;AADjB;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AA7IF;AAAA;;AAAA;AAAA;AAgJgD;AAH9C;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AA3HF;AAAA;;AAAA;AAAA;AAmIiB;AAGE;;AAGG;;AAJa;AAFlB;;;;;;;;;;;;;;;;;;;;AAAA;;;;ADjKqB;;;ACiKrB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;;;;AAAA;AAAA;AAQD;AA7IhB;AAAA;;AAAA;AAAA;AA6IwD;AAA/C;AAAP;AA/JsD;AAiKnB;;AAjKmB;AAiKX;AAAA;AAAA;;AAAA;;AAAA;AACvC;;;AACF;;AAAA;;AACiB;;AADjB;AAAA;;;AAAA;;AAAA;;AAEmB;;AAFnB;AAAA;;;AAAA;;AAAA;;AD5KyB;;;;AC4KzB;AAAA;;;;AAAA;AAOwB;;AAAA;;;AA1K4B;AA0KC;;AA1KD;AA0KS;AAAA;AAAM;AAAM;;;AAClD;;AAAA;;;AA3K6B;AA2KA;;AA3KA;AA2KQ;AAAA;AAAM;;AAAW;;;AAnKjF;AAAA;AAAA;AAAA;AAuKiE;AD7KhD;;AAAA;AAxBc;;AAyBxB;AAAA;AAAA;;AC6KmB;;AAAA;AAAA;;;AAAqB;;AAAA;;AAAA;;;;;;;AAI7C;;AAAA;;;AAlLF;AAAA;;AAAA;AAAA;AAmLmC;AAjLnC;AAAA;AAAA;AAAA;AAiLyE;AAAjE;AAAJ;;;AAEE;;AAAA;;AAAA;AAAA;;AAAW;AAAX;;AAjLN;AAAA;AAAA;AAAA;AAkLoE;AAAxB;AAAZ;AAlLhC;AAkLM;AAAA;AAeJ;;AAAA;;AAAW;AAjMb;AAAA;AAAA;AAAA;AAkMgE;AAAxB;;AAAA;AAAZ;AAlM5B;AAkME;AAAA;AAhMF;AAAA;AAAA;AAAA;AAmMgE;ADzM/C;;AAAA;AAxBc;;AAyBxB;AC0MI;AAAA;AACK;AAAA;AAFsB;AA5MkB;AA4MlC;;AA5MkC;AA4MtD;AAAA;AAKI;;AAAA;;;AAnMN;AAAA;;AAAA;AAAA;AAoMgE;AAAS;AAAhC;AAAZ;AApM7B;;AAoMI;AAAA;;AAxBE;AAtLN;AAAA;AAAA;AAAA;AAwLgD;AAChB;;AACP;;;;;;;;;;;;AAJnB;;;ADpMgC;;;ACoMhC;;;;;;;;AAV8D;;;;;;AALsB;;;;;;AADJ;;;;;;;;;;;;;;AA4CtF;;;;;AAtNwD;AAyN3B;;AAzN2B;AAyNnB;AAAA;;AAAnC;AAvNF;AAAA;;AAAA;AAAA;AAwNoC;AAtNpC;AAAA;AAAA;AAAA;AAsN0E;AAAjE;AAAP;AA1NsD;AA4NnB;;AA5NmB;AA4NX;AAAA;AAC7B;AAAA;;;AAAA;AAAM;AAAN;AAAM;AAAA;AAAA;;AAApB;AAAA;AArNF;AAAA;AAAA;AAAA;AAwN2E;AD9N1D;AAxBc;;AAyBxB;AAAA;AAAA;;AC8NoC;;AAAW;AAAA;AAAA;;AAA5B;AAAA;;;AAAqC;;AAAA;;AAAA;;;AAE7D;;AAAA;;;AACE;AAhOJ;AAAA;AAAA;AAAA;AAkO8C;AAChB;;AACP;;;;;;;;;;;;AAJnB;;;AD9OkC;;;AC8OlC;AA5NJ;AAAA;AAAA;AAAA;AAuO2E;AD7O1D;;AAAA;AAxBc;;AAyBxB;AC+OS;AAFsB;;AAAA;AAAA;AAhPkB;AAgPlC;;AAhPkC;AAgPtD;AAAA;;AAfkG;;;;;;AAqBpG;;;;;;AAtPwD;AAyP3B;;AAzP2B;AAyPnB;AAAA;;AAAnC;AAzPsD;AA0PtB;;AA1PsB;AA0Pd;AAAA;AAClC;AAAuB;AAAM;AAA7B;AAAA;;AACN;AAAA;AAEiC;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAC1B;;AAAA;AAAP;AAvPF;AAAA;AAAA;AAAA;AA2PgE;ADjQ/C;AAxBc;;AAyBxB;AAAA;AAAA;;ACiQiC;;AAAW;AAAA;AAAA;;AAAzB;AAAA;;;AAAkC;;AAAA;;AAAA;;;AAE1D;;AAAA;;;AAEE;AApQJ;AAAA;AAAA;AAAA;AAsQ8C;AAChB;;AACP;;;;;;;;;;;;AAJnB;;;ADlRkC;;;ACkRlC;AAYF;AAlRF;AAAA;;AAAA;AAAA;AAoR4C;AAChB;;AACP;;;;;;;;;;;;;;;AAJnB;;;AD9RoC;;;AC8RpC;AA9QF;AAAA;AAAA;AAAA;AAyRgE;AAAxB;;AAAA;AAAZ;AAzR5B;AAyRE;AAAA;AAGM;;AAAA;AAAoB;AAApB;AAAA;;AACN;;;AAnSsD;AAqShC;;AArSgC;AAqSxB;;AAvRhC;AAAA;;AAAA;AAAA;AAwRgE;AAAS;AAAhC;AAAZ;AAxR7B;;AAwRI;AAAA;;AA9RJ;AAAA;AAAA;AAAA;AAiSmE;ADvSlD;;AAAA;AAAA;;AAAA;AAxBc;;AAyBxB;ACwSM;AAAA;AACK;AAAA;AAFsB;AA1SgB;AA0ShC;;AA1SgC;AA0SpD;AAAA;;AAtC0F;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4 1000 1000000000000000"
    },
    "16": {
      "op": "bytecblock \"st\" \"reward_asset_id\" \"total_staked\" \"reward_per_token\" \"admin_address\" \"staked_asset_id\" \"num_stakers\" 0x0000000000000000 \"last_reward_injection_time\" \"flux_tier_required\" \"flux_oracle_app\""
    },
    "180": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "182": {
      "op": "bz main_after_if_else@15",
      "stack_out": []
    },
    "185": {
      "op": "pushbytess 0xd324bea4 0x94202064 0x32db7a6d 0x347007eb 0x2487c32c 0x7a9ee189 0xa5ae6bd1 0x813ce89a 0x3172ca9d // method \"createApplication(address)void\", method \"initApplication(uint64,uint64,pay,uint64,application)void\", method \"updateAdminAddress(account)void\", method \"injectRewards(axfer,uint64,uint64)void\", method \"deleteApplication()void\", method \"stake(axfer,uint64,pay)void\", method \"claimRewards()void\", method \"unstake(uint64)void\", method \"gas()void\"",
      "defined_out": [
        "Method(claimRewards()void)",
        "Method(createApplication(address)void)",
        "Method(deleteApplication()void)",
        "Method(gas()void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(stake(axfer,uint64,pay)void)",
        "Method(unstake(uint64)void)",
        "Method(updateAdminAddress(account)void)"
      ],
      "stack_out": [
        "Method(createApplication(address)void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(updateAdminAddress(account)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(stake(axfer,uint64,pay)void)",
        "Method(claimRewards()void)",
        "Method(unstake(uint64)void)",
        "Method(gas()void)"
      ]
    },
    "232": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claimRewards()void)",
        "Method(createApplication(address)void)",
        "Method(deleteApplication()void)",
        "Method(gas()void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(stake(axfer,uint64,pay)void)",
        "Method(unstake(uint64)void)",
        "Method(updateAdminAddress(account)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(address)void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(updateAdminAddress(account)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(stake(axfer,uint64,pay)void)",
        "Method(claimRewards()void)",
        "Method(unstake(uint64)void)",
        "Method(gas()void)",
        "tmp%2#0"
      ]
    },
    "235": {
      "op": "match main_createApplication_route@3 main_initApplication_route@4 main_updateAdminAddress_route@5 main_injectRewards_route@6 main_deleteApplication_route@7 main_stake_route@8 main_claimRewards_route@9 main_unstake_route@10 main_gas_route@11",
      "stack_out": []
    },
    "255": {
      "block": "main_after_if_else@15",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "256": {
      "op": "return",
      "stack_out": []
    },
    "257": {
      "block": "main_gas_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "259": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "260": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "261": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "263": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "264": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "265": {
      "op": "return",
      "stack_out": []
    },
    "266": {
      "block": "main_unstake_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "268": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "269": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "270": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "272": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "273": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "276": {
      "op": "btoi",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "277": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.unstake",
      "op": "callsub unstake",
      "stack_out": []
    },
    "280": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "281": {
      "op": "return",
      "stack_out": []
    },
    "282": {
      "block": "main_claimRewards_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "284": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "285": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "286": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "288": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "289": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.claimRewards",
      "op": "callsub claimRewards"
    },
    "292": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "293": {
      "op": "return",
      "stack_out": []
    },
    "294": {
      "block": "main_stake_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "296": {
      "op": "!",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "297": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "298": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "300": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "301": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "303": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "2"
      ]
    },
    "305": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "307": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "309": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "310": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "311": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "312": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "315": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0"
      ]
    },
    "316": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "318": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%2#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "tmp%40#0",
        "1"
      ]
    },
    "319": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "gtxn_idx%3#0"
      ]
    },
    "320": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "321": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "323": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "324": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "325": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0",
        "gtxn_idx%3#0"
      ]
    },
    "326": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.stake",
      "op": "callsub stake",
      "stack_out": []
    },
    "329": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "330": {
      "op": "return",
      "stack_out": []
    },
    "331": {
      "block": "main_deleteApplication_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "333": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "DeleteApplication"
      ]
    },
    "335": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "336": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "337": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "339": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "340": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.deleteApplication",
      "op": "callsub deleteApplication"
    },
    "343": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "344": {
      "op": "return",
      "stack_out": []
    },
    "345": {
      "block": "main_injectRewards_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "347": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "348": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "349": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "351": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "352": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "354": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "1"
      ]
    },
    "355": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "356": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "357": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "359": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "axfer"
      ]
    },
    "360": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "361": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "362": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "365": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%28#0"
      ]
    },
    "366": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%4#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%28#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "369": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "370": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.injectRewards",
      "op": "callsub injectRewards",
      "stack_out": []
    },
    "373": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "374": {
      "op": "return",
      "stack_out": []
    },
    "375": {
      "block": "main_updateAdminAddress_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "377": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "378": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "379": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "381": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "382": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "385": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "386": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "388": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.updateAdminAddress",
      "op": "callsub updateAdminAddress",
      "stack_out": []
    },
    "391": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "392": {
      "op": "return",
      "stack_out": []
    },
    "393": {
      "block": "main_initApplication_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "395": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "396": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "397": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "399": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "400": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "403": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "404": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "407": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "408": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "410": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "1"
      ]
    },
    "411": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0"
      ]
    },
    "412": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "413": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "415": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "416": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "417": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0"
      ]
    },
    "418": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "421": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0"
      ]
    },
    "422": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "425": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "426": {
      "op": "txnas Applications",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "428": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initApplication",
      "op": "callsub initApplication",
      "stack_out": []
    },
    "431": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "432": {
      "op": "return",
      "stack_out": []
    },
    "433": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "435": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "436": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "437": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "439": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "440": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "441": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "444": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "447": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "448": {
      "op": "return",
      "stack_out": []
    },
    "449": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.createApplication",
      "params": {
        "adminAddress#0": "bytes"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "452": {
      "op": "bytec 4 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\""
      ],
      "stack_out": [
        "\"admin_address\""
      ]
    },
    "454": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ],
      "stack_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ]
    },
    "456": {
      "op": "app_global_put",
      "stack_out": []
    },
    "457": {
      "op": "pushbytess \"contract_version\" 0x0000000000000fa0 // \"contract_version\", 0x0000000000000fa0",
      "defined_out": [
        "\"contract_version\"",
        "0x0000000000000fa0"
      ],
      "stack_out": [
        "\"contract_version\"",
        "0x0000000000000fa0"
      ]
    },
    "485": {
      "op": "app_global_put",
      "stack_out": []
    },
    "486": {
      "retsub": true,
      "op": "retsub"
    },
    "487": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initApplication",
      "params": {
        "stakedAssetId#0": "uint64",
        "rewardAssetId#0": "uint64",
        "initialBalanceTxn#0": "uint64",
        "fluxTierRequired#0": "uint64",
        "fluxOracleApp#0": "uint64"
      },
      "block": "initApplication",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "490": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "492": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "493": {
      "op": "bytec 4 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "495": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "496": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "497": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "498": {
      "error": "Only admin can init application",
      "op": "assert // Only admin can init application",
      "stack_out": []
    },
    "499": {
      "op": "frame_dig -5",
      "defined_out": [
        "stakedAssetId#0 (copy)"
      ],
      "stack_out": [
        "stakedAssetId#0 (copy)"
      ]
    },
    "501": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "502": {
      "op": "bytec 5 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"staked_asset_id\""
      ]
    },
    "504": {
      "op": "swap",
      "stack_out": [
        "\"staked_asset_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "505": {
      "op": "app_global_put",
      "stack_out": []
    },
    "506": {
      "op": "frame_dig -4",
      "defined_out": [
        "rewardAssetId#0 (copy)"
      ],
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "508": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "509": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "\"reward_asset_id\""
      ]
    },
    "510": {
      "op": "swap",
      "stack_out": [
        "\"reward_asset_id\"",
        "val_as_bytes%1#0"
      ]
    },
    "511": {
      "op": "app_global_put",
      "stack_out": []
    },
    "512": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\""
      ],
      "stack_out": [
        "\"total_staked\""
      ]
    },
    "513": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "\"total_staked\"",
        "0x0000000000000000"
      ],
      "stack_out": [
        "\"total_staked\"",
        "0x0000000000000000"
      ]
    },
    "515": {
      "op": "app_global_put",
      "stack_out": []
    },
    "516": {
      "op": "bytec 8 // \"last_reward_injection_time\"",
      "defined_out": [
        "\"last_reward_injection_time\""
      ],
      "stack_out": [
        "\"last_reward_injection_time\""
      ]
    },
    "518": {
      "op": "bytec 7 // 0x0000000000000000",
      "stack_out": [
        "\"last_reward_injection_time\"",
        "0x0000000000000000"
      ]
    },
    "520": {
      "op": "app_global_put",
      "stack_out": []
    },
    "521": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\""
      ],
      "stack_out": [
        "\"reward_per_token\""
      ]
    },
    "522": {
      "op": "bytec 7 // 0x0000000000000000",
      "stack_out": [
        "\"reward_per_token\"",
        "0x0000000000000000"
      ]
    },
    "524": {
      "op": "app_global_put",
      "stack_out": []
    },
    "525": {
      "op": "bytec 6 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\""
      ],
      "stack_out": [
        "\"num_stakers\""
      ]
    },
    "527": {
      "op": "bytec 7 // 0x0000000000000000",
      "stack_out": [
        "\"num_stakers\"",
        "0x0000000000000000"
      ]
    },
    "529": {
      "op": "app_global_put",
      "stack_out": []
    },
    "530": {
      "op": "frame_dig -2",
      "defined_out": [
        "fluxTierRequired#0 (copy)"
      ],
      "stack_out": [
        "fluxTierRequired#0 (copy)"
      ]
    },
    "532": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "533": {
      "op": "dup",
      "defined_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ]
    },
    "534": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "bitlen%0#0"
      ]
    },
    "535": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "537": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "no_overflow%0#0"
      ]
    },
    "538": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "539": {
      "op": "extract 7 1",
      "defined_out": [
        "uint8%0#0"
      ],
      "stack_out": [
        "uint8%0#0"
      ]
    },
    "542": {
      "op": "bytec 9 // \"flux_tier_required\"",
      "defined_out": [
        "\"flux_tier_required\"",
        "uint8%0#0"
      ],
      "stack_out": [
        "uint8%0#0",
        "\"flux_tier_required\""
      ]
    },
    "544": {
      "op": "swap",
      "stack_out": [
        "\"flux_tier_required\"",
        "uint8%0#0"
      ]
    },
    "545": {
      "op": "app_global_put",
      "stack_out": []
    },
    "546": {
      "op": "bytec 10 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\""
      ],
      "stack_out": [
        "\"flux_oracle_app\""
      ]
    },
    "548": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"flux_oracle_app\"",
        "fluxOracleApp#0 (copy)"
      ],
      "stack_out": [
        "\"flux_oracle_app\"",
        "fluxOracleApp#0 (copy)"
      ]
    },
    "550": {
      "op": "app_global_put",
      "stack_out": []
    },
    "551": {
      "op": "frame_dig -3",
      "defined_out": [
        "initialBalanceTxn#0 (copy)"
      ],
      "stack_out": [
        "initialBalanceTxn#0 (copy)"
      ]
    },
    "553": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "555": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "557": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "558": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "561": {
      "op": "frame_dig -3",
      "stack_out": [
        "initialBalanceTxn#0 (copy)"
      ]
    },
    "563": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "565": {
      "op": "pushint 400000 // 400000",
      "defined_out": [
        "400000",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "400000"
      ]
    },
    "569": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "570": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "573": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "574": {
      "block": "initApplication_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "575": {
      "op": "itxn_begin"
    },
    "576": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "578": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "579": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "581": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "583": {
      "op": "frame_dig -5",
      "defined_out": [
        "stakedAssetId#0 (copy)"
      ],
      "stack_out": [
        "stakedAssetId#0 (copy)"
      ]
    },
    "585": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "587": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "588": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "590": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "591": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "593": {
      "op": "itxn_submit"
    },
    "594": {
      "op": "frame_dig -4",
      "defined_out": [
        "rewardAssetId#0 (copy)"
      ],
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "596": {
      "op": "frame_dig -5",
      "stack_out": [
        "rewardAssetId#0 (copy)",
        "stakedAssetId#0 (copy)"
      ]
    },
    "598": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "599": {
      "op": "bz initApplication_after_if_else@8",
      "stack_out": []
    },
    "602": {
      "op": "itxn_begin"
    },
    "603": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "605": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "606": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "608": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "610": {
      "op": "frame_dig -4",
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "612": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "614": {
      "op": "intc_2 // 4",
      "stack_out": [
        "4"
      ]
    },
    "615": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "617": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "618": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "620": {
      "op": "itxn_submit"
    },
    "621": {
      "block": "initApplication_after_if_else@8",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "622": {
      "block": "initApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "623": {
      "op": "b initApplication_bool_merge@4"
    },
    "626": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.updateAdminAddress",
      "params": {
        "adminAddress#0": "bytes"
      },
      "block": "updateAdminAddress",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "629": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "631": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "632": {
      "op": "bytec 4 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "634": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "635": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "636": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "637": {
      "error": "Only admin can update admin address",
      "op": "assert // Only admin can update admin address",
      "stack_out": []
    },
    "638": {
      "op": "bytec 4 // \"admin_address\"",
      "stack_out": [
        "\"admin_address\""
      ]
    },
    "640": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ],
      "stack_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ]
    },
    "642": {
      "op": "app_global_put",
      "stack_out": []
    },
    "643": {
      "retsub": true,
      "op": "retsub"
    },
    "644": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.injectRewards",
      "params": {
        "rewardTxn#0": "uint64",
        "quantity#0": "uint64",
        "rewardAssetId#0": "uint64"
      },
      "block": "injectRewards",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "647": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "649": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "650": {
      "op": "bytec 4 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "652": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "653": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "654": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "655": {
      "error": "Only admin can inject rewards",
      "op": "assert // Only admin can inject rewards",
      "stack_out": []
    },
    "656": {
      "op": "frame_dig -2",
      "defined_out": [
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "quantity#0 (copy)"
      ]
    },
    "658": {
      "error": "Invalid reward quantity",
      "op": "assert // Invalid reward quantity",
      "stack_out": []
    },
    "659": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "660": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"reward_asset_id\""
      ]
    },
    "661": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "662": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "663": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "664": {
      "op": "frame_dig -1",
      "defined_out": [
        "rewardAssetId#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "rewardAssetId#0 (copy)"
      ]
    },
    "666": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "667": {
      "error": "Wrong reward asset",
      "op": "assert // Wrong reward asset",
      "stack_out": []
    },
    "668": {
      "op": "frame_dig -3",
      "defined_out": [
        "rewardTxn#0 (copy)"
      ],
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "670": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "672": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "673": {
      "op": "bytec 4 // \"admin_address\"",
      "stack_out": [
        "tmp%5#0",
        "0",
        "\"admin_address\""
      ]
    },
    "675": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "676": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0"
      ]
    },
    "677": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "678": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "681": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "683": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "685": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "687": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "688": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "691": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "693": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "695": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "696": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "stack_out": [
        "tmp%10#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "697": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "698": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "699": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "700": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "701": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "704": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "706": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "708": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%13#0",
        "quantity#0 (copy)"
      ]
    },
    "710": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "711": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "714": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "715": {
      "block": "injectRewards_bool_merge@6",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "716": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "717": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_staked\""
      ]
    },
    "718": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "719": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "720": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "721": {
      "error": "No stakers",
      "op": "assert // No stakers",
      "stack_out": []
    },
    "722": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "723": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "0",
        "\"total_staked\""
      ]
    },
    "724": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "725": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%5#0"
      ]
    },
    "726": {
      "op": "btoi",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0"
      ]
    },
    "727": {
      "op": "dup",
      "defined_out": [
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "c#0 (copy)"
      ]
    },
    "728": {
      "error": "mulDivW: division by zero",
      "op": "assert // mulDivW: division by zero",
      "stack_out": [
        "c#0"
      ]
    },
    "729": {
      "op": "frame_dig -2",
      "defined_out": [
        "c#0",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "quantity#0 (copy)"
      ]
    },
    "731": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "c#0",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "quantity#0 (copy)",
        "1000000000000000"
      ]
    },
    "733": {
      "op": "mulw",
      "defined_out": [
        "c#0",
        "hi#0",
        "lo#0"
      ],
      "stack_out": [
        "c#0",
        "hi#0",
        "lo#0"
      ]
    },
    "734": {
      "op": "uncover 2",
      "stack_out": [
        "hi#0",
        "lo#0",
        "c#0"
      ]
    },
    "736": {
      "op": "divw",
      "defined_out": [
        "deltaRPT#0"
      ],
      "stack_out": [
        "deltaRPT#0"
      ]
    },
    "737": {
      "op": "intc_0 // 0",
      "stack_out": [
        "deltaRPT#0",
        "0"
      ]
    },
    "738": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\"",
        "0",
        "deltaRPT#0"
      ],
      "stack_out": [
        "deltaRPT#0",
        "0",
        "\"reward_per_token\""
      ]
    },
    "739": {
      "op": "app_global_get_ex",
      "defined_out": [
        "deltaRPT#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "deltaRPT#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "740": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "deltaRPT#0",
        "maybe_value%6#0"
      ]
    },
    "741": {
      "op": "btoi",
      "defined_out": [
        "deltaRPT#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "deltaRPT#0",
        "tmp%18#0"
      ]
    },
    "742": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "743": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "744": {
      "op": "bytec_3 // \"reward_per_token\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "\"reward_per_token\""
      ]
    },
    "745": {
      "op": "swap",
      "stack_out": [
        "\"reward_per_token\"",
        "val_as_bytes%0#0"
      ]
    },
    "746": {
      "op": "app_global_put",
      "stack_out": []
    },
    "747": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "749": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "750": {
      "op": "bytec 8 // \"last_reward_injection_time\"",
      "defined_out": [
        "\"last_reward_injection_time\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "\"last_reward_injection_time\""
      ]
    },
    "752": {
      "op": "swap",
      "stack_out": [
        "\"last_reward_injection_time\"",
        "val_as_bytes%1#0"
      ]
    },
    "753": {
      "op": "app_global_put",
      "stack_out": []
    },
    "754": {
      "retsub": true,
      "op": "retsub"
    },
    "755": {
      "block": "injectRewards_bool_false@5",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "756": {
      "op": "b injectRewards_bool_merge@6"
    },
    "759": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.deleteApplication",
      "params": {},
      "block": "deleteApplication",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "761": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "762": {
      "op": "bytec 4 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "764": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "765": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "766": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "767": {
      "error": "Only admin can delete application",
      "op": "assert // Only admin can delete application",
      "stack_out": []
    },
    "768": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "769": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_staked\""
      ]
    },
    "770": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "771": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "772": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "773": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "774": {
      "error": "Staked assets still exist",
      "op": "assert // Staked assets still exist",
      "stack_out": []
    },
    "775": {
      "op": "itxn_begin"
    },
    "776": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "777": {
      "op": "bytec 5 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"staked_asset_id\""
      ]
    },
    "779": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "780": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "781": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "782": {
      "op": "global ZeroAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "784": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "786": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "788": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "0"
      ]
    },
    "789": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "791": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "793": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "795": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "796": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "798": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "799": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "801": {
      "op": "itxn_submit"
    },
    "802": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "803": {
      "op": "bytec 5 // \"staked_asset_id\"",
      "stack_out": [
        "0",
        "\"staked_asset_id\""
      ]
    },
    "805": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "806": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "807": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "0"
      ]
    },
    "808": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "809": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "810": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "811": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "812": {
      "op": "bz deleteApplication_after_if_else@4",
      "stack_out": []
    },
    "815": {
      "op": "itxn_begin"
    },
    "816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "817": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "stack_out": [
        "0",
        "\"reward_asset_id\""
      ]
    },
    "818": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "819": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%5#0"
      ]
    },
    "820": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "821": {
      "op": "global ZeroAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "823": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "825": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "827": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "0"
      ]
    },
    "828": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "830": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "832": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "834": {
      "op": "intc_2 // 4",
      "stack_out": [
        "4"
      ]
    },
    "835": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "837": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "838": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "840": {
      "op": "itxn_submit"
    },
    "841": {
      "block": "deleteApplication_after_if_else@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "842": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.stake",
      "params": {
        "stakeTxn#0": "uint64",
        "quantity#0": "uint64",
        "mbrTxn#0": "uint64"
      },
      "block": "stake",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "845": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "accrued#0"
      ]
    },
    "847": {
      "op": "dupn 5",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "849": {
      "op": "frame_dig -2",
      "defined_out": [
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "quantity#0 (copy)"
      ]
    },
    "851": {
      "error": "Invalid quantity",
      "op": "assert // Invalid quantity",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "852": {
      "op": "frame_dig -3",
      "defined_out": [
        "stakeTxn#0 (copy)"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "854": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%1#0"
      ]
    },
    "856": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "858": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%3#0"
      ]
    },
    "859": {
      "op": "bz stake_bool_false@5",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "862": {
      "op": "frame_dig -3",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "864": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%4#0"
      ]
    },
    "866": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "868": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%6#0"
      ]
    },
    "869": {
      "op": "bz stake_bool_false@5",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "872": {
      "op": "frame_dig -3",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "874": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%7#0"
      ]
    },
    "876": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%7#0",
        "0"
      ]
    },
    "877": {
      "op": "bytec 5 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%7#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "879": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "880": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%7#0",
        "maybe_value%0#0"
      ]
    },
    "881": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "882": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%9#0"
      ]
    },
    "883": {
      "op": "bz stake_bool_false@5",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "886": {
      "op": "frame_dig -3",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "888": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%10#0"
      ]
    },
    "890": {
      "op": "frame_dig -2",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%10#0",
        "quantity#0 (copy)"
      ]
    },
    "892": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%11#0"
      ]
    },
    "893": {
      "op": "bz stake_bool_false@5",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "896": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "and_result%0#0"
      ]
    },
    "897": {
      "block": "stake_bool_merge@6",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "898": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0"
      ]
    },
    "899": {
      "op": "bytec 10 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\"",
        "0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0",
        "\"flux_oracle_app\""
      ]
    },
    "901": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "oracle#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "maybe_exists%1#0"
      ]
    },
    "902": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0"
      ]
    },
    "903": {
      "op": "itxn_begin"
    },
    "904": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "906": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0"
      ]
    },
    "908": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "909": {
      "op": "pushbytes 0xd4d7aa5c // method \"getUserTier(address)uint64\"",
      "defined_out": [
        "Method(getUserTier(address)uint64)",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "tmp%13#0",
        "Method(getUserTier(address)uint64)"
      ]
    },
    "915": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "917": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0"
      ]
    },
    "919": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "921": {
      "op": "dig 1",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0 (copy)"
      ]
    },
    "923": {
      "op": "itxn_field Applications",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "925": {
      "op": "itxn_field Sender",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "oracle#0"
      ]
    },
    "927": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "929": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "appl"
      ]
    },
    "931": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "933": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "1000"
      ]
    },
    "934": {
      "op": "itxn_field Fee",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "936": {
      "op": "itxn_submit"
    },
    "937": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "awst_tmp%0#0"
      ]
    },
    "939": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "940": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "943": {
      "op": "swap",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "944": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "result#0",
        "tmp%15#0"
      ]
    },
    "947": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "result#0",
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "953": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "result#0",
        "tmp%16#0"
      ]
    },
    "954": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "result#0"
      ]
    },
    "955": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%17#0"
      ]
    },
    "956": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%17#0",
        "0"
      ]
    },
    "957": {
      "op": "bytec 9 // \"flux_tier_required\"",
      "defined_out": [
        "\"flux_tier_required\"",
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%17#0",
        "0",
        "\"flux_tier_required\""
      ]
    },
    "959": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%17#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "960": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%17#0",
        "maybe_value%2#0"
      ]
    },
    "961": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "962": {
      "op": ">=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%19#0"
      ]
    },
    "963": {
      "error": "Insufficient flux tier",
      "op": "assert // Insufficient flux tier",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "964": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\""
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"st\""
      ]
    },
    "965": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%20#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"st\"",
        "tmp%20#0"
      ]
    },
    "967": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%21#0"
      ]
    },
    "968": {
      "op": "box_len",
      "defined_out": [
        "exists#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%3#0",
        "exists#0"
      ]
    },
    "969": {
      "op": "dup",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%3#0",
        "exists#0",
        "exists#0 (copy)"
      ]
    },
    "970": {
      "op": "cover 2",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "exists#0",
        "maybe_value%3#0",
        "exists#0"
      ]
    },
    "972": {
      "op": "frame_bury 1",
      "defined_out": [
        "exists#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "exists#0",
        "maybe_value%3#0"
      ]
    },
    "974": {
      "op": "pop",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "exists#0"
      ]
    },
    "975": {
      "op": "bnz stake_after_if_else@14",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "978": {
      "op": "frame_dig -1",
      "defined_out": [
        "exists#0",
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "mbrTxn#0 (copy)"
      ]
    },
    "980": {
      "op": "gtxns Sender",
      "defined_out": [
        "exists#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%22#0"
      ]
    },
    "982": {
      "op": "txn Sender",
      "defined_out": [
        "exists#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "984": {
      "op": "==",
      "defined_out": [
        "exists#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%24#0"
      ]
    },
    "985": {
      "op": "bz stake_bool_false@12",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "988": {
      "op": "frame_dig -1",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "mbrTxn#0 (copy)"
      ]
    },
    "990": {
      "op": "gtxns Receiver",
      "defined_out": [
        "exists#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%25#0"
      ]
    },
    "992": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "exists#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "994": {
      "op": "==",
      "defined_out": [
        "exists#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%27#0"
      ]
    },
    "995": {
      "op": "bz stake_bool_false@12",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "998": {
      "op": "frame_dig -1",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "mbrTxn#0 (copy)"
      ]
    },
    "1000": {
      "op": "gtxns Amount",
      "defined_out": [
        "exists#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%28#0"
      ]
    },
    "1002": {
      "op": "pushint 22500 // 22500",
      "defined_out": [
        "22500",
        "exists#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%28#0",
        "22500"
      ]
    },
    "1006": {
      "op": "==",
      "defined_out": [
        "exists#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%29#0"
      ]
    },
    "1007": {
      "op": "bz stake_bool_false@12",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1010": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%1#0",
        "exists#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "and_result%1#0"
      ]
    },
    "1011": {
      "block": "stake_bool_merge@13",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "and_result%1#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1012": {
      "block": "stake_after_if_else@14",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "exists#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "exists#0"
      ]
    },
    "1014": {
      "op": "bz stake_ternary_false@16",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1017": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "exists#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"st\""
      ]
    },
    "1018": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "exists#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"st\"",
        "tmp%30#0"
      ]
    },
    "1020": {
      "op": "concat",
      "defined_out": [
        "exists#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%31#0"
      ]
    },
    "1021": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1022": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%4#0"
      ]
    },
    "1023": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "exists#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "1024": {
      "op": "extract_uint64",
      "defined_out": [
        "exists#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "prevStake#0"
      ]
    },
    "1025": {
      "op": "frame_bury 5",
      "defined_out": [
        "exists#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1027": {
      "block": "stake_ternary_merge@17",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "exists#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "exists#0"
      ]
    },
    "1029": {
      "op": "bz stake_ternary_false@19",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1032": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "exists#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"st\""
      ]
    },
    "1033": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "exists#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"st\"",
        "tmp%33#0"
      ]
    },
    "1035": {
      "op": "concat",
      "defined_out": [
        "exists#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%34#0"
      ]
    },
    "1036": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1037": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%5#0"
      ]
    },
    "1038": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "exists#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%5#0",
        "8"
      ]
    },
    "1040": {
      "op": "extract_uint64",
      "defined_out": [
        "exists#0",
        "prevDebt#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "prevDebt#0"
      ]
    },
    "1041": {
      "op": "frame_bury 4",
      "defined_out": [
        "exists#0",
        "prevDebt#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1043": {
      "block": "stake_ternary_merge@20",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0"
      ]
    },
    "1044": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\"",
        "0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0",
        "\"reward_per_token\""
      ]
    },
    "1045": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1046": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%6#0"
      ]
    },
    "1047": {
      "op": "btoi",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "b#0"
      ]
    },
    "1048": {
      "op": "frame_dig 5",
      "defined_out": [
        "b#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "b#0",
        "prevStake#0"
      ]
    },
    "1050": {
      "op": "mulw",
      "defined_out": [
        "hi#0",
        "lo#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1051": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "hi#0",
        "lo#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1053": {
      "op": "divw",
      "defined_out": [
        "accrued#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "accrued#0"
      ]
    },
    "1054": {
      "op": "dup",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "accrued#0",
        "accrued#0"
      ]
    },
    "1055": {
      "op": "frame_bury 0",
      "defined_out": [
        "accrued#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "accrued#0"
      ]
    },
    "1057": {
      "op": "frame_dig 4",
      "defined_out": [
        "accrued#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "accrued#0",
        "prevDebt#0"
      ]
    },
    "1059": {
      "op": ">",
      "defined_out": [
        "accrued#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%37#0"
      ]
    },
    "1060": {
      "op": "bz stake_ternary_false@22",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1063": {
      "op": "frame_dig 0",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "accrued#0"
      ]
    },
    "1065": {
      "op": "frame_dig 4",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "accrued#0",
        "prevDebt#0"
      ]
    },
    "1067": {
      "op": "-",
      "defined_out": [
        "accrued#0",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0"
      ]
    },
    "1068": {
      "op": "frame_bury 3",
      "defined_out": [
        "accrued#0",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1070": {
      "block": "stake_ternary_merge@23",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1"
      ]
    },
    "1072": {
      "op": "frame_bury 2",
      "defined_out": [
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1074": {
      "op": "frame_dig 3",
      "defined_out": [
        "newStake#1",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0"
      ]
    },
    "1076": {
      "op": "bz stake_after_if_else@29",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1079": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "newStake#1",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0"
      ]
    },
    "1080": {
      "op": "bytec 5 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "newStake#1",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1082": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "newStake#1",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1083": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%7#0"
      ]
    },
    "1084": {
      "op": "btoi",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%39#0"
      ]
    },
    "1085": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%39#0",
        "0"
      ]
    },
    "1086": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "newStake#1",
        "pending#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%39#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1087": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "newStake#1",
        "pending#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%39#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1088": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%39#0",
        "maybe_value%8#0"
      ]
    },
    "1089": {
      "op": "btoi",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1090": {
      "op": "==",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%41#0"
      ]
    },
    "1091": {
      "op": "bz stake_else_body@26",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1094": {
      "op": "frame_dig 5",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "prevStake#0"
      ]
    },
    "1096": {
      "op": "frame_dig 3",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "prevStake#0",
        "pending#0"
      ]
    },
    "1098": {
      "op": "dup",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "pending#0 (copy)",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "prevStake#0",
        "pending#0 (copy)",
        "pending#0 (copy)"
      ]
    },
    "1099": {
      "op": "cover 2",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0",
        "prevStake#0",
        "pending#0 (copy)"
      ]
    },
    "1101": {
      "op": "+",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0",
        "newStake#1"
      ]
    },
    "1102": {
      "op": "frame_bury 2",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0"
      ]
    },
    "1104": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0",
        "0"
      ]
    },
    "1105": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "newStake#1",
        "pending#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1106": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "newStake#1",
        "pending#0",
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1107": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0",
        "maybe_value%9#0"
      ]
    },
    "1108": {
      "op": "btoi",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "prevStake#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0",
        "tmp%42#0"
      ]
    },
    "1109": {
      "op": "+",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "prevStake#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "to_encode%0#0"
      ]
    },
    "1110": {
      "op": "itob",
      "defined_out": [
        "newStake#1",
        "pending#0",
        "prevStake#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "val_as_bytes%0#0"
      ]
    },
    "1111": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "val_as_bytes%0#0",
        "\"total_staked\""
      ]
    },
    "1112": {
      "op": "swap",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"total_staked\"",
        "val_as_bytes%0#0"
      ]
    },
    "1113": {
      "op": "app_global_put",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1114": {
      "block": "stake_after_if_else@29",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1"
      ]
    },
    "1116": {
      "op": "frame_dig -2",
      "defined_out": [
        "newStake#1",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "quantity#0 (copy)"
      ]
    },
    "1118": {
      "op": "+",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1"
      ]
    },
    "1119": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "0"
      ]
    },
    "1120": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "0",
        "\"total_staked\""
      ]
    },
    "1121": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "1122": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "maybe_value%11#0"
      ]
    },
    "1123": {
      "op": "btoi",
      "defined_out": [
        "newStake#1",
        "tmp%43#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "tmp%43#0"
      ]
    },
    "1124": {
      "op": "frame_dig -2",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "tmp%43#0",
        "quantity#0 (copy)"
      ]
    },
    "1126": {
      "op": "+",
      "defined_out": [
        "newStake#1",
        "to_encode%1#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "to_encode%1#0"
      ]
    },
    "1127": {
      "op": "itob",
      "defined_out": [
        "newStake#1",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "val_as_bytes%1#0"
      ]
    },
    "1128": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "val_as_bytes%1#0",
        "\"total_staked\""
      ]
    },
    "1129": {
      "op": "swap",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "\"total_staked\"",
        "val_as_bytes%1#0"
      ]
    },
    "1130": {
      "op": "app_global_put",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1"
      ]
    },
    "1131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "0"
      ]
    },
    "1132": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\"",
        "0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "0",
        "\"reward_per_token\""
      ]
    },
    "1133": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%12#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "1134": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "maybe_value%12#0"
      ]
    },
    "1135": {
      "op": "btoi",
      "defined_out": [
        "b#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "b#0"
      ]
    },
    "1136": {
      "op": "dig 1",
      "defined_out": [
        "b#0",
        "newStake#1",
        "newStake#1 (copy)"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "b#0",
        "newStake#1 (copy)"
      ]
    },
    "1138": {
      "op": "mulw",
      "defined_out": [
        "hi#0",
        "lo#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "hi#0",
        "lo#0"
      ]
    },
    "1139": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "hi#0",
        "lo#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1141": {
      "op": "divw",
      "defined_out": [
        "newDebt#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1",
        "newDebt#0"
      ]
    },
    "1142": {
      "op": "swap",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newDebt#0",
        "newStake#1"
      ]
    },
    "1143": {
      "op": "itob",
      "defined_out": [
        "newDebt#0",
        "newStake#1",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newDebt#0",
        "val_as_bytes%2#0"
      ]
    },
    "1144": {
      "op": "swap",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "val_as_bytes%2#0",
        "newDebt#0"
      ]
    },
    "1145": {
      "op": "itob",
      "defined_out": [
        "newStake#1",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1146": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1147": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%2#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "encoded_tuple_buffer%2#0",
        "\"st\""
      ]
    },
    "1148": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%2#0",
        "newStake#1",
        "tmp%45#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "encoded_tuple_buffer%2#0",
        "\"st\"",
        "tmp%45#0"
      ]
    },
    "1150": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "newStake#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "encoded_tuple_buffer%2#0",
        "tmp%46#0"
      ]
    },
    "1151": {
      "op": "swap",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%46#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1152": {
      "op": "box_put",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1153": {
      "op": "frame_dig 1",
      "defined_out": [
        "exists#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "exists#0"
      ]
    },
    "1155": {
      "op": "bnz stake_after_if_else@31",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1158": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0"
      ]
    },
    "1159": {
      "op": "bytec 6 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0",
        "exists#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1161": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "maybe_exists%13#0",
        "maybe_value%13#0",
        "newStake#1"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "1162": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%13#0"
      ]
    },
    "1163": {
      "op": "btoi",
      "defined_out": [
        "exists#0",
        "newStake#1",
        "tmp%47#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%47#0"
      ]
    },
    "1164": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "exists#0",
        "newStake#1",
        "tmp%47#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "tmp%47#0",
        "1"
      ]
    },
    "1165": {
      "op": "+",
      "defined_out": [
        "exists#0",
        "newStake#1",
        "to_encode%2#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "to_encode%2#0"
      ]
    },
    "1166": {
      "op": "itob",
      "defined_out": [
        "exists#0",
        "newStake#1",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "val_as_bytes%4#0"
      ]
    },
    "1167": {
      "op": "bytec 6 // \"num_stakers\"",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "val_as_bytes%4#0",
        "\"num_stakers\""
      ]
    },
    "1169": {
      "op": "swap",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "\"num_stakers\"",
        "val_as_bytes%4#0"
      ]
    },
    "1170": {
      "op": "app_global_put",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1171": {
      "block": "stake_after_if_else@31",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1172": {
      "block": "stake_else_body@26",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "itxn_begin"
    },
    "1173": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0"
      ]
    },
    "1174": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1175": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "1176": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "maybe_value%10#0"
      ]
    },
    "1177": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1178": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1180": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1182": {
      "op": "frame_dig 3",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "pending#0"
      ]
    },
    "1184": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1186": {
      "op": "itxn_field Sender",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1188": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1190": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1192": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "4"
      ]
    },
    "1193": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1195": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "1000"
      ]
    },
    "1196": {
      "op": "itxn_field Fee",
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1198": {
      "op": "itxn_submit"
    },
    "1199": {
      "op": "frame_dig 5",
      "defined_out": [
        "newStake#1",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "newStake#1"
      ]
    },
    "1201": {
      "op": "frame_bury 2",
      "defined_out": [
        "newStake#1",
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1203": {
      "op": "b stake_after_if_else@29"
    },
    "1206": {
      "block": "stake_ternary_false@22",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "pending#0"
      ]
    },
    "1207": {
      "op": "frame_bury 3",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1209": {
      "op": "b stake_ternary_merge@23"
    },
    "1212": {
      "block": "stake_ternary_false@19",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "prevDebt#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "prevDebt#0"
      ]
    },
    "1213": {
      "op": "frame_bury 4",
      "defined_out": [
        "prevDebt#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1215": {
      "op": "b stake_ternary_merge@20"
    },
    "1218": {
      "block": "stake_ternary_false@16",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "prevStake#0"
      ]
    },
    "1219": {
      "op": "frame_bury 5",
      "defined_out": [
        "prevStake#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ]
    },
    "1221": {
      "op": "b stake_ternary_merge@17"
    },
    "1224": {
      "block": "stake_bool_false@12",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "and_result%1#0"
      ]
    },
    "1225": {
      "op": "b stake_bool_merge@13"
    },
    "1228": {
      "block": "stake_bool_false@5",
      "stack_in": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "accrued#0",
        "exists#0",
        "newStake#1",
        "pending#0",
        "prevDebt#0",
        "prevStake#0",
        "and_result%0#0"
      ]
    },
    "1229": {
      "op": "b stake_bool_merge@6"
    },
    "1232": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.claimRewards",
      "params": {},
      "block": "claimRewards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1235": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "pending#0"
      ]
    },
    "1237": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\""
      ],
      "stack_out": [
        "pending#0",
        "\"st\""
      ]
    },
    "1238": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "pending#0",
        "\"st\"",
        "tmp%0#0"
      ]
    },
    "1240": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%1#0"
      ]
    },
    "1241": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pending#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1242": {
      "op": "bury 1",
      "stack_out": [
        "pending#0",
        "maybe_exists%0#0"
      ]
    },
    "1244": {
      "error": "No stake found for user",
      "op": "assert // No stake found for user",
      "stack_out": [
        "pending#0"
      ]
    },
    "1245": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "0"
      ]
    },
    "1246": {
      "op": "bytec 5 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1248": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "pending#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1249": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "maybe_value%1#0"
      ]
    },
    "1250": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%2#0"
      ]
    },
    "1251": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1252": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%2#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1253": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1254": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "1255": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1256": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%4#0"
      ]
    },
    "1257": {
      "error": "Cannot claim rewards that compound",
      "op": "assert // Cannot claim rewards that compound",
      "stack_out": [
        "pending#0"
      ]
    },
    "1258": {
      "op": "bytec_0 // \"st\"",
      "stack_out": [
        "pending#0",
        "\"st\""
      ]
    },
    "1259": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%5#0"
      ],
      "stack_out": [
        "pending#0",
        "\"st\"",
        "tmp%5#0"
      ]
    },
    "1261": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%6#0"
      ]
    },
    "1262": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "staker#0"
      ],
      "stack_out": [
        "pending#0",
        "staker#0",
        "maybe_exists%3#0"
      ]
    },
    "1263": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "pending#0",
        "staker#0"
      ]
    },
    "1264": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "1265": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "staker#0",
        "tmp%7#0"
      ]
    },
    "1268": {
      "op": "swap",
      "defined_out": [
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "staker#0"
      ]
    },
    "1269": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "1270": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "staker#0",
        "staker#0 (copy)",
        "0"
      ]
    },
    "1271": {
      "op": "extract_uint64",
      "defined_out": [
        "a#1",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "staker#0",
        "a#1"
      ]
    },
    "1272": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "staker#0",
        "a#1",
        "a#1"
      ]
    },
    "1273": {
      "op": "cover 2",
      "defined_out": [
        "a#1",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1"
      ]
    },
    "1275": {
      "op": "dup",
      "defined_out": [
        "a#1",
        "a#1 (copy)",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1",
        "a#1 (copy)"
      ]
    },
    "1276": {
      "error": "No stake",
      "op": "assert // No stake",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1"
      ]
    },
    "1277": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1",
        "0"
      ]
    },
    "1278": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\"",
        "0",
        "a#1",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1",
        "0",
        "\"reward_per_token\""
      ]
    },
    "1279": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#1",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1280": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1",
        "maybe_value%4#0"
      ]
    },
    "1281": {
      "op": "btoi",
      "defined_out": [
        "a#1",
        "b#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "a#1",
        "b#0"
      ]
    },
    "1282": {
      "op": "mulw",
      "defined_out": [
        "a#1",
        "hi#0",
        "lo#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1283": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "a#1",
        "hi#0",
        "lo#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1285": {
      "op": "divw",
      "defined_out": [
        "a#1",
        "accrued#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "staker#0",
        "accrued#0"
      ]
    },
    "1286": {
      "op": "dup"
    },
    "1287": {
      "op": "uncover 2",
      "defined_out": [
        "a#1",
        "accrued#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "accrued#0",
        "staker#0"
      ]
    },
    "1289": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "a#1",
        "accrued#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "accrued#0",
        "staker#0",
        "8"
      ]
    },
    "1291": {
      "op": "extract_uint64",
      "defined_out": [
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1292": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "accrued#0",
        "tmp%14#0",
        "tmp%14#0"
      ]
    },
    "1293": {
      "op": "cover 2",
      "defined_out": [
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1295": {
      "op": ">",
      "defined_out": [
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "1296": {
      "op": "bz claimRewards_ternary_false@2",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1299": {
      "op": "frame_dig 3",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "accrued#0"
      ]
    },
    "1301": {
      "op": "frame_dig 4",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1303": {
      "op": "-",
      "defined_out": [
        "a#1",
        "accrued#0",
        "pending#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "pending#0"
      ]
    },
    "1304": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#1",
        "accrued#0",
        "pending#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1306": {
      "block": "claimRewards_ternary_merge@3",
      "stack_in": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "pending#0"
      ]
    },
    "1308": {
      "op": "bz claimRewards_after_if_else@6",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1311": {
      "op": "itxn_begin"
    },
    "1312": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "0"
      ]
    },
    "1313": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1314": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1315": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "maybe_value%5#0"
      ]
    },
    "1316": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1317": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1319": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1321": {
      "op": "frame_dig 0",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "pending#0"
      ]
    },
    "1323": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1325": {
      "op": "itxn_field Sender",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1327": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1329": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1331": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "4"
      ]
    },
    "1332": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1334": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "1000"
      ]
    },
    "1335": {
      "op": "itxn_field Fee",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1337": {
      "op": "itxn_submit"
    },
    "1338": {
      "block": "claimRewards_after_if_else@6",
      "stack_in": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "0"
      ]
    },
    "1339": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "0",
        "\"reward_per_token\""
      ]
    },
    "1340": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1341": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "maybe_value%6#0"
      ]
    },
    "1342": {
      "op": "btoi",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "b#0"
      ]
    },
    "1343": {
      "op": "frame_dig 2",
      "defined_out": [
        "a#1",
        "b#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "b#0",
        "a#1"
      ]
    },
    "1345": {
      "op": "mulw",
      "defined_out": [
        "a#1",
        "hi#0",
        "lo#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1346": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "a#1",
        "hi#0",
        "lo#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1348": {
      "op": "divw",
      "defined_out": [
        "a#1",
        "newDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "newDebt#0"
      ]
    },
    "1349": {
      "op": "itob",
      "defined_out": [
        "a#1",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "val_as_bytes%0#0"
      ]
    },
    "1350": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#1",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "val_as_bytes%0#0",
        "tmp%7#0"
      ]
    },
    "1352": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ]
    },
    "1353": {
      "op": "concat",
      "defined_out": [
        "a#1",
        "encoded_tuple_buffer%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1354": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "a#1",
        "encoded_tuple_buffer%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0",
        "\"st\""
      ]
    },
    "1355": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "a#1",
        "encoded_tuple_buffer%2#0",
        "tmp%23#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0",
        "\"st\"",
        "tmp%23#0"
      ]
    },
    "1357": {
      "op": "concat",
      "defined_out": [
        "a#1",
        "encoded_tuple_buffer%2#0",
        "tmp%24#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0",
        "tmp%24#0"
      ]
    },
    "1358": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "tmp%24#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1359": {
      "op": "box_put",
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1360": {
      "retsub": true,
      "op": "retsub"
    },
    "1361": {
      "block": "claimRewards_ternary_false@2",
      "stack_in": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0",
        "pending#0"
      ]
    },
    "1362": {
      "op": "frame_bury 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "tmp%7#0",
        "a#1",
        "accrued#0",
        "tmp%14#0"
      ]
    },
    "1364": {
      "op": "b claimRewards_ternary_merge@3"
    },
    "1367": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.unstake",
      "params": {
        "quantity#0": "uint64"
      },
      "block": "unstake",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1370": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "pending#0"
      ]
    },
    "1372": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "remaining#0"
      ]
    },
    "1373": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\""
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "\"st\""
      ]
    },
    "1374": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "\"st\"",
        "tmp%0#0"
      ]
    },
    "1376": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "tmp%1#0"
      ]
    },
    "1377": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1378": {
      "op": "bury 1",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "maybe_exists%0#0"
      ]
    },
    "1380": {
      "error": "No stake found for user",
      "op": "assert // No stake found for user",
      "stack_out": [
        "pending#0",
        "remaining#0"
      ]
    },
    "1381": {
      "op": "bytec_0 // \"st\"",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "\"st\""
      ]
    },
    "1382": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "\"st\"",
        "tmp%2#0"
      ]
    },
    "1384": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "tmp%3#0"
      ]
    },
    "1385": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "rec#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "rec#0",
        "maybe_exists%1#0"
      ]
    },
    "1386": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "rec#0"
      ]
    },
    "1387": {
      "op": "dup",
      "defined_out": [
        "rec#0",
        "rec#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "rec#0",
        "rec#0 (copy)"
      ]
    },
    "1388": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "rec#0",
        "rec#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "rec#0",
        "rec#0 (copy)",
        "0"
      ]
    },
    "1389": {
      "op": "extract_uint64",
      "defined_out": [
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "rec#0",
        "stakeNow#0"
      ]
    },
    "1390": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "rec#0",
        "stakeNow#0",
        "stakeNow#0"
      ]
    },
    "1391": {
      "op": "cover 2",
      "defined_out": [
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0"
      ]
    },
    "1393": {
      "op": "dup",
      "defined_out": [
        "rec#0",
        "stakeNow#0",
        "stakeNow#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "stakeNow#0 (copy)"
      ]
    },
    "1394": {
      "error": "No stake",
      "op": "assert // No stake",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0"
      ]
    },
    "1395": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "quantity#0 (copy)"
      ]
    },
    "1397": {
      "op": "!",
      "defined_out": [
        "rec#0",
        "stakeNow#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "tmp%6#0"
      ]
    },
    "1398": {
      "op": "frame_dig -1",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "tmp%6#0",
        "quantity#0 (copy)"
      ]
    },
    "1400": {
      "op": "dig 2",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "tmp%6#0",
        "quantity#0 (copy)",
        "stakeNow#0 (copy)"
      ]
    },
    "1402": {
      "op": "uncover 2",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "quantity#0 (copy)",
        "stakeNow#0 (copy)",
        "tmp%6#0"
      ]
    },
    "1404": {
      "op": "select",
      "defined_out": [
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "amountToWithdraw#0"
      ]
    },
    "1405": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "rec#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "amountToWithdraw#0"
      ]
    },
    "1406": {
      "op": "cover 3",
      "defined_out": [
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "amountToWithdraw#0"
      ]
    },
    "1408": {
      "op": "dig 1",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "stakeNow#0 (copy)"
      ]
    },
    "1410": {
      "op": "<=",
      "defined_out": [
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "tmp%7#0"
      ]
    },
    "1411": {
      "error": "Unstake amount exceeds balance",
      "op": "assert // Unstake amount exceeds balance",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0"
      ]
    },
    "1412": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "0"
      ]
    },
    "1413": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\"",
        "0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "0",
        "\"reward_per_token\""
      ]
    },
    "1414": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amountToWithdraw#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1415": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "maybe_value%2#0"
      ]
    },
    "1416": {
      "op": "btoi",
      "defined_out": [
        "amountToWithdraw#0",
        "b#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0",
        "b#0"
      ]
    },
    "1417": {
      "op": "mulw",
      "defined_out": [
        "amountToWithdraw#0",
        "hi#0",
        "lo#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1418": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "amountToWithdraw#0",
        "hi#0",
        "lo#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1420": {
      "op": "divw",
      "defined_out": [
        "accrued#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "rec#0",
        "accrued#0"
      ]
    },
    "1421": {
      "op": "dup"
    },
    "1422": {
      "op": "uncover 2",
      "defined_out": [
        "accrued#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "accrued#0",
        "rec#0"
      ]
    },
    "1424": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "accrued#0",
        "amountToWithdraw#0",
        "rec#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "accrued#0",
        "rec#0",
        "8"
      ]
    },
    "1426": {
      "op": "extract_uint64",
      "defined_out": [
        "accrued#0",
        "amountToWithdraw#0",
        "stakeNow#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1427": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "accrued#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "1428": {
      "op": "cover 2",
      "defined_out": [
        "accrued#0",
        "amountToWithdraw#0",
        "stakeNow#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1430": {
      "op": ">",
      "defined_out": [
        "accrued#0",
        "amountToWithdraw#0",
        "stakeNow#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1431": {
      "op": "bz unstake_ternary_false@2",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1434": {
      "op": "frame_dig 4",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "accrued#0"
      ]
    },
    "1436": {
      "op": "frame_dig 5",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1438": {
      "op": "-",
      "defined_out": [
        "accrued#0",
        "amountToWithdraw#0",
        "pending#0",
        "stakeNow#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "pending#0"
      ]
    },
    "1439": {
      "op": "frame_bury 0",
      "defined_out": [
        "accrued#0",
        "amountToWithdraw#0",
        "pending#0",
        "stakeNow#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1441": {
      "block": "unstake_ternary_merge@3",
      "stack_in": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "pending#0"
      ]
    },
    "1443": {
      "op": "bz unstake_after_if_else@6",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1446": {
      "op": "itxn_begin"
    },
    "1447": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0"
      ]
    },
    "1448": {
      "op": "bytec_1 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1449": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1450": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%3#0"
      ]
    },
    "1451": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1452": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1454": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1456": {
      "op": "frame_dig 0",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "pending#0"
      ]
    },
    "1458": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1460": {
      "op": "itxn_field Sender",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1462": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1464": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1466": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "4"
      ]
    },
    "1467": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1469": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "1000"
      ]
    },
    "1470": {
      "op": "itxn_field Fee",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1472": {
      "op": "itxn_submit"
    },
    "1473": {
      "block": "unstake_after_if_else@6",
      "stack_in": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ],
      "op": "itxn_begin"
    },
    "1474": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0"
      ]
    },
    "1475": {
      "op": "bytec 5 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1477": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1478": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%4#0"
      ]
    },
    "1479": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1480": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1482": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1484": {
      "op": "frame_dig 3",
      "defined_out": [
        "amountToWithdraw#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "amountToWithdraw#0"
      ]
    },
    "1486": {
      "op": "dup",
      "defined_out": [
        "amountToWithdraw#0",
        "amountToWithdraw#0 (copy)",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "amountToWithdraw#0 (copy)",
        "amountToWithdraw#0 (copy)"
      ]
    },
    "1487": {
      "op": "cover 4",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "amountToWithdraw#0 (copy)"
      ]
    },
    "1489": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1491": {
      "op": "itxn_field Sender",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1493": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1495": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0"
      ]
    },
    "1497": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "amountToWithdraw#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "4"
      ]
    },
    "1498": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0"
      ]
    },
    "1500": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "amountToWithdraw#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "1000"
      ]
    },
    "1501": {
      "op": "itxn_field Fee",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0"
      ]
    },
    "1503": {
      "op": "itxn_submit"
    },
    "1504": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "0"
      ]
    },
    "1505": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "amountToWithdraw#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1506": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amountToWithdraw#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1507": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "maybe_value%5#0"
      ]
    },
    "1508": {
      "op": "btoi",
      "defined_out": [
        "amountToWithdraw#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "tmp%15#0"
      ]
    },
    "1509": {
      "op": "dig 1",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "tmp%15#0",
        "amountToWithdraw#0 (copy)"
      ]
    },
    "1511": {
      "op": "-",
      "defined_out": [
        "amountToWithdraw#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "to_encode%0#0"
      ]
    },
    "1512": {
      "op": "itob",
      "defined_out": [
        "amountToWithdraw#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "val_as_bytes%0#0"
      ]
    },
    "1513": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "val_as_bytes%0#0",
        "\"total_staked\""
      ]
    },
    "1514": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "\"total_staked\"",
        "val_as_bytes%0#0"
      ]
    },
    "1515": {
      "op": "app_global_put",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0"
      ]
    },
    "1516": {
      "op": "frame_dig 2",
      "defined_out": [
        "amountToWithdraw#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "amountToWithdraw#0",
        "stakeNow#0"
      ]
    },
    "1518": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "stakeNow#0",
        "amountToWithdraw#0"
      ]
    },
    "1519": {
      "op": "-",
      "defined_out": [
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "remaining#0"
      ]
    },
    "1520": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "remaining#0",
        "remaining#0"
      ]
    },
    "1521": {
      "op": "frame_bury 1",
      "defined_out": [
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "remaining#0"
      ]
    },
    "1523": {
      "op": "bnz unstake_else_body@9",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1526": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "\"st\""
      ]
    },
    "1527": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "\"st\"",
        "tmp%17#0"
      ]
    },
    "1529": {
      "op": "concat",
      "defined_out": [
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "tmp%18#0"
      ]
    },
    "1530": {
      "op": "box_del",
      "defined_out": [
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0",
        "{box_del}"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "{box_del}"
      ]
    },
    "1531": {
      "op": "pop",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1532": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0"
      ]
    },
    "1533": {
      "op": "bytec 6 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0",
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1535": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amountToWithdraw#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "remaining#0",
        "stakeNow#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1536": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%6#0"
      ]
    },
    "1537": {
      "op": "btoi",
      "defined_out": [
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "tmp%19#0"
      ]
    },
    "1538": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "tmp%19#0",
        "1"
      ]
    },
    "1539": {
      "op": "-",
      "defined_out": [
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "to_encode%1#0"
      ]
    },
    "1540": {
      "op": "itob",
      "defined_out": [
        "amountToWithdraw#0",
        "remaining#0",
        "stakeNow#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "val_as_bytes%1#0"
      ]
    },
    "1541": {
      "op": "bytec 6 // \"num_stakers\"",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "val_as_bytes%1#0",
        "\"num_stakers\""
      ]
    },
    "1543": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "\"num_stakers\"",
        "val_as_bytes%1#0"
      ]
    },
    "1544": {
      "op": "app_global_put",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1545": {
      "retsub": true,
      "op": "retsub"
    },
    "1546": {
      "block": "unstake_else_body@9",
      "stack_in": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0"
      ]
    },
    "1547": {
      "op": "bytec_3 // \"reward_per_token\"",
      "defined_out": [
        "\"reward_per_token\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "0",
        "\"reward_per_token\""
      ]
    },
    "1548": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1549": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "maybe_value%7#0"
      ]
    },
    "1550": {
      "op": "btoi",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "b#0"
      ]
    },
    "1551": {
      "op": "frame_dig 1",
      "defined_out": [
        "b#0",
        "remaining#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "b#0",
        "remaining#0"
      ]
    },
    "1553": {
      "op": "dup"
    },
    "1554": {
      "op": "uncover 2",
      "defined_out": [
        "b#0",
        "remaining#0",
        "remaining#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "remaining#0",
        "remaining#0 (copy)",
        "b#0"
      ]
    },
    "1556": {
      "op": "mulw",
      "defined_out": [
        "hi#0",
        "lo#0",
        "remaining#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "remaining#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1557": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "hi#0",
        "lo#0",
        "remaining#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "remaining#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1559": {
      "op": "divw",
      "defined_out": [
        "newDebt#0",
        "remaining#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "remaining#0",
        "newDebt#0"
      ]
    },
    "1560": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "newDebt#0",
        "remaining#0"
      ]
    },
    "1561": {
      "op": "itob",
      "defined_out": [
        "newDebt#0",
        "remaining#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "newDebt#0",
        "val_as_bytes%2#0"
      ]
    },
    "1562": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "val_as_bytes%2#0",
        "newDebt#0"
      ]
    },
    "1563": {
      "op": "itob",
      "defined_out": [
        "remaining#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1564": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "remaining#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1565": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%2#0",
        "remaining#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "encoded_tuple_buffer%2#0",
        "\"st\""
      ]
    },
    "1566": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%2#0",
        "remaining#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "encoded_tuple_buffer%2#0",
        "\"st\"",
        "tmp%21#0"
      ]
    },
    "1568": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "remaining#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "encoded_tuple_buffer%2#0",
        "tmp%22#0"
      ]
    },
    "1569": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "tmp%22#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1570": {
      "op": "box_put",
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1571": {
      "retsub": true,
      "op": "retsub"
    },
    "1572": {
      "block": "unstake_ternary_false@2",
      "stack_in": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0",
        "pending#0"
      ]
    },
    "1573": {
      "op": "frame_bury 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "remaining#0",
        "stakeNow#0",
        "amountToWithdraw#0",
        "accrued#0",
        "tmp%10#0"
      ]
    },
    "1575": {
      "op": "b unstake_ternary_merge@3"
    }
  }
}