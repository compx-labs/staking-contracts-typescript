{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/staking-contracts-typescript/projects/staking-contracts-typescript/smart_contracts/injected_rewards_pool_flux_gated/config.algo.ts",
    "/Users/kierannelson/Development/staking-contracts-typescript/projects/staking-contracts-typescript/smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;AA0QG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAnDA;;AAAA;AAAA;AAAA;;AAAA;AAvNH;;;AAAA;AAuNG;;;AAAA;;AA9BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA/CA;;AAAA;AAAA;AAAA;;AAAA;AA1IH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA0IG;;;AAAA;;AA7BA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AA/FH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AA+FG;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAtFH;;;AAAA;AAAA;;AAsFG;;;AAAA;;AA5CA;;AAAA;AAAA;AAAA;;AAAA;AA1CH;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AA0CG;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA1BH;;;AA0BG;;;AAAA;;AAAD;;;AAVA;AAYE;;AAAA;AARF;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASE;;AAaF;;;AAQgB;;AAlChB;AAAA;AAAA;AAAA;AAkCS;AAAP;AAE6B;;AAAA;AA9C/B;;AA8CE;AAAA;AAC6B;;AAAA;AA7C/B;;AA6CE;AAAA;AA3CF;AA4C4B;;AAA1B;AAxCF;;AAyC0C;;AAAxC;AA3CF;AA4CwC;;AAAtC;AAtCF;;AAuC2B;;AAAzB;AACgC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AApClC;;AAoCE;AAAA;AAlCF;;AAmCE;;AAAA;AAEA;;AAAA;;AACmB;;AADnB;AAAA;;;AAAA;;AAAA;;ADpEsC;;;;ACoEtC;AAAA;;;;AAAA;AAKA;AAG0B;;AACT;;;;;;;;;AAJjB;;;ADxEoC;;;ACwEpC;AAQI;;AAAA;;AAAA;AAAJ;;;AACE;AAG0B;;AACT;;;;;;;;;AAJjB;;;ADjFkC;;;ACiFlC;;;;;;AAWJ;;;AAEgB;;AAxEhB;AAAA;AAAA;AAAA;AAwES;AAAP;AAxEF;AAyEE;;AAAA;;AAMF;;;AAEgB;;AAjFhB;AAAA;AAAA;AAAA;AAiFS;AAAP;AAEA;;AAAA;;AAnFF;AAAA;AAAA;AAAA;AAmFE;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAvFF;AAAA;AAAA;AAAA;AA6FwF;AAApC;;AAAA;AAAZ;AA7FxC;AA6FE;AAAA;AAC2D;;AAAnB;AA5F1C;;AA4FE;AAAA;;;;;;AAKc;;AA/FhB;AAAA;AAAA;AAAA;AA+FS;AAAP;AArGF;AAAA;AAAA;AAAA;AAsGiC;AAAxB;AAAP;AAGA;AA7GF;AAAA;;AAAA;AAAA;AA+G4C;AACjB;;AAEC;;;;AADT;;;;;;;AAJjB;;;ADzHoC;;;ACyHpC;AA7GF;AAAA;;AAAA;AAAA;AAEA;AAAA;;AAAA;AAAA;AAqHM;AAAJ;;;AACE;AAtHJ;AAAA;;AAAA;AAAA;AAwH8C;AACjB;;AAEC;;;;AADT;;;;;;;AAJjB;;;ADpIkC;;;ACoIlC;;AAYJ;;;AAEE;;AAAA;AAEA;;AAAA;;AACiB;;AADjB;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AAxIF;AAAA;;AAAA;AAAA;AA2IgD;AAH9C;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAtHF;AAAA;;AAAA;AAAA;AA8HyB;AAAA;;AAAA;;AAAA;AAIR;AAGE;;AAGG;;AAJa;AAFlB;;;;;;;;;;;;;;;;;;;;AAAA;;;;ADhKqB;;;ACgKrB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;;;;AAAA;AAAA;AASD;AA7IhB;AAAA;;AAAA;AAAA;AA6IwD;AAA/C;AAAP;AA/JsD;AAiKlB;;AAjKkB;AAiKV;AAAA;;AAE5C;;;AAnKsD;AAoKH;;AApKG;AAoKK;AAAA;AAAM;AAAM;AAAkB;;AAAA;;AAA1D;AAAA;;AAAA;AAAZ;AApKmC;AAuKb;;AAvKa;AAuKL;AAAA;AAAM;;;AAFjB;AArKgB;AAqKhC;;AArKgC;AAqKpD;AAAA;AA/JJ;AAAA;AAAA;AAAA;AAmKkE;AAAxB;AAAZ;AAnK9B;AAmKI;AAAA;;AAG8B;;AAAA;;AAArB;AAAA;AApKb;AAAA;AAAA;AAAA;AAmKwC;AA3KgB;AA2KhC;;AA3KgC;AA2KpD;AAAA;AA7JJ;AAAA;;AAAA;AAAA;AAkKgE;AAAS;AAAhC;AAAZ;AAlK7B;;AAkKI;AAAA;AA1KJ;AAAA;AAAA;AAAA;AA2KkE;AAAxB;AAAZ;AA3K9B;AA2KI;AAAA;;;;;;AAIJ;;;AArLwD;AAuL3B;;AAvL2B;AAuLnB;AAAA;;AAAnC;AAvLsD;AAyLnB;;AAzLmB;AAyLX;AAAA;AAE7B;AAAA;;;AAAA;AAAM;AAAN;AAAM;AAApB;AAAA;AAnLF;AAAA;AAAA;AAAA;AAsLsE;AAAgC;;AAAhB;;AAAgB;AAApE;AAxLlC;AAAA;AAAA;AAAA;AAyL0F;AD/LzE;;AAtBc;;AAsBd;AACV;;AAAA;AADU;AAtBc;;AAuBxB;AAAA;ACiML;;;AACE;AA/LJ;AAAA;;AAAA;AAAA;AAiM8C;AAChB;;AACP;;;;;;;;;;;;AAJnB;;;AD7MkC;;;AC6MlC;AA3LJ;AAAA;AAAA;AAAA;AAqMsC;;AAAA;AAAA;AA7MkB;AA6MlC;;AA7MkC;AA6MtD;AAAA;;AAMF;;;;;;AAnNwD;AAqN3B;;AArN2B;AAqNnB;AAAA;;AAAnC;AArNsD;AAsNZ;;AAtNY;AAsNJ;AAAA;AAAA;AAAA;;AAAA;AAC7B;AAAM;AAAA;;AAA3B;AAEO;;AAAA;AAAP;AAEA;AAzNF;AAAA;;AAAA;AAAA;AA2N4C;AAChB;;AACP;;AACF;;AAAA;;;;;;;;;;;;;;;;;;;AALjB;;;ADrOoC;;;ACqOpC;AAWkB;;AAAA;;;AA9NpB;AAAA;AAAA;AAAA;AA8NM;AAAJ;;;AA9NF;AAAA;AAAA;AAAA;AAgOwE;AAAuC;;AAAhB;;AAAgB;AAA3E;AAlOpC;AAAA;AAAA;AAAA;AAmOmG;ADzOlF;;AAtBc;;AAsBd;AACV;;AAAA;AADU;AAtBc;;AAuBxB;AAAA;AAAA;;AC2OH;;;AACE;AAzON;AAAA;;AAAA;AAAA;AA2OgD;AAChB;;AACP;;;;;;;;;;;;AAJnB;;;ADvPgC;;;ACuPhC;AAvON;AAAA;AAAA;AAAA;AAoPgE;AAAA;;AAAU;;AAAA;;;;;AAAlC;;AAAA;AAAA;AAAZ;AApP5B;AAoPE;AAAA;AACA;;AAAA;;;AA3PsD;AA4PhC;;AA5PgC;AA4PxB;;AA9OhC;AAAA;;AAAA;AAAA;AA+OgE;AAAS;AAAhC;AAAZ;AA/O7B;;AA+OI;AAAA;;AAGqB;;AAAA;;AAAA;AAAZ;AAxPb;AAAA;AAAA;AAAA;AAuPwC;AA/PgB;AA+PhC;;AA/PgC;AA+PpD;AAAA;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4 1000 1000000000000000"
    },
    "16": {
      "op": "bytecblock \"st\" \"total_staked\" \"current_asa_reward_index\" \"admin_address\" \"staked_asset_id\" \"reward_asset_id\" \"num_stakers\" 0x0000000000000000 \"last_reward_injection_time\" \"flux_tier_required\" \"flux_oracle_app\""
    },
    "188": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "190": {
      "op": "bz main_after_if_else@15",
      "stack_out": []
    },
    "193": {
      "op": "pushbytess 0xd324bea4 0x94202064 0x32db7a6d 0x347007eb 0x2487c32c 0xf4eb4a03 0xa5ae6bd1 0x813ce89a 0x3172ca9d // method \"createApplication(address)void\", method \"initApplication(uint64,uint64,pay,uint64,application)void\", method \"updateAdminAddress(account)void\", method \"injectRewards(axfer,uint64,uint64)void\", method \"deleteApplication()void\", method \"stake(axfer,uint64)void\", method \"claimRewards()void\", method \"unstake(uint64)void\", method \"gas()void\"",
      "defined_out": [
        "Method(claimRewards()void)",
        "Method(createApplication(address)void)",
        "Method(deleteApplication()void)",
        "Method(gas()void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(stake(axfer,uint64)void)",
        "Method(unstake(uint64)void)",
        "Method(updateAdminAddress(account)void)"
      ],
      "stack_out": [
        "Method(createApplication(address)void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(updateAdminAddress(account)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(stake(axfer,uint64)void)",
        "Method(claimRewards()void)",
        "Method(unstake(uint64)void)",
        "Method(gas()void)"
      ]
    },
    "240": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claimRewards()void)",
        "Method(createApplication(address)void)",
        "Method(deleteApplication()void)",
        "Method(gas()void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(stake(axfer,uint64)void)",
        "Method(unstake(uint64)void)",
        "Method(updateAdminAddress(account)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(address)void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(updateAdminAddress(account)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(stake(axfer,uint64)void)",
        "Method(claimRewards()void)",
        "Method(unstake(uint64)void)",
        "Method(gas()void)",
        "tmp%2#0"
      ]
    },
    "243": {
      "op": "match main_createApplication_route@3 main_initApplication_route@4 main_updateAdminAddress_route@5 main_injectRewards_route@6 main_deleteApplication_route@7 main_stake_route@8 main_claimRewards_route@9 main_unstake_route@10 main_gas_route@11",
      "stack_out": []
    },
    "263": {
      "block": "main_after_if_else@15",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "264": {
      "op": "return",
      "stack_out": []
    },
    "265": {
      "block": "main_gas_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "267": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "268": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "269": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "271": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "272": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "273": {
      "op": "return",
      "stack_out": []
    },
    "274": {
      "block": "main_unstake_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "276": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "277": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "278": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "280": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "281": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "284": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "285": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.unstake",
      "op": "callsub unstake",
      "stack_out": []
    },
    "288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "289": {
      "op": "return",
      "stack_out": []
    },
    "290": {
      "block": "main_claimRewards_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "292": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "293": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "294": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "296": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "297": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.claimRewards",
      "op": "callsub claimRewards"
    },
    "300": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "301": {
      "op": "return",
      "stack_out": []
    },
    "302": {
      "block": "main_stake_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "304": {
      "op": "!",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "305": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "306": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "308": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "309": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "311": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "1"
      ]
    },
    "312": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "313": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "314": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "316": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "317": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "318": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "319": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "322": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%39#0"
      ]
    },
    "323": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.stake",
      "op": "callsub stake",
      "stack_out": []
    },
    "326": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "327": {
      "op": "return",
      "stack_out": []
    },
    "328": {
      "block": "main_deleteApplication_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "330": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "DeleteApplication"
      ]
    },
    "332": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "333": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "334": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "336": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "337": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.deleteApplication",
      "op": "callsub deleteApplication"
    },
    "340": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "341": {
      "op": "return",
      "stack_out": []
    },
    "342": {
      "block": "main_injectRewards_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "344": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "345": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "346": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "348": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "349": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "351": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "1"
      ]
    },
    "352": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "353": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "354": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "356": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "axfer"
      ]
    },
    "357": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "358": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "359": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "362": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%28#0"
      ]
    },
    "363": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%4#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%28#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "366": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "367": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.injectRewards",
      "op": "callsub injectRewards",
      "stack_out": []
    },
    "370": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "371": {
      "op": "return",
      "stack_out": []
    },
    "372": {
      "block": "main_updateAdminAddress_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "374": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "375": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "376": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "378": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "379": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "382": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "383": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "385": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.updateAdminAddress",
      "op": "callsub updateAdminAddress",
      "stack_out": []
    },
    "388": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "389": {
      "op": "return",
      "stack_out": []
    },
    "390": {
      "block": "main_initApplication_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "392": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "393": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "394": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "396": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "397": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "400": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "401": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "404": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "405": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "407": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "1"
      ]
    },
    "408": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0"
      ]
    },
    "409": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "410": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "412": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "413": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "414": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0"
      ]
    },
    "415": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "418": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0"
      ]
    },
    "419": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "422": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "423": {
      "op": "txnas Applications",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "425": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initApplication",
      "op": "callsub initApplication",
      "stack_out": []
    },
    "428": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "429": {
      "op": "return",
      "stack_out": []
    },
    "430": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "432": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "433": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "434": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "436": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "437": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "438": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "441": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "444": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "445": {
      "op": "return",
      "stack_out": []
    },
    "446": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.createApplication",
      "params": {
        "adminAddress#0": "bytes"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "449": {
      "op": "bytec_3 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\""
      ],
      "stack_out": [
        "\"admin_address\""
      ]
    },
    "450": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ],
      "stack_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ]
    },
    "452": {
      "op": "app_global_put",
      "stack_out": []
    },
    "453": {
      "op": "pushbytess \"contract_version\" 0x0000000000000fa0 // \"contract_version\", 0x0000000000000fa0",
      "defined_out": [
        "\"contract_version\"",
        "0x0000000000000fa0"
      ],
      "stack_out": [
        "\"contract_version\"",
        "0x0000000000000fa0"
      ]
    },
    "481": {
      "op": "app_global_put",
      "stack_out": []
    },
    "482": {
      "retsub": true,
      "op": "retsub"
    },
    "483": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initApplication",
      "params": {
        "stakedAssetId#0": "uint64",
        "rewardAssetId#0": "uint64",
        "initialBalanceTxn#0": "uint64",
        "fluxTierRequired#0": "uint64",
        "fluxOracleApp#0": "uint64"
      },
      "block": "initApplication",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "486": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "488": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "489": {
      "op": "bytec_3 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "490": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "491": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "492": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "493": {
      "error": "Only admin can init application",
      "op": "assert // Only admin can init application",
      "stack_out": []
    },
    "494": {
      "op": "frame_dig -5",
      "defined_out": [
        "stakedAssetId#0 (copy)"
      ],
      "stack_out": [
        "stakedAssetId#0 (copy)"
      ]
    },
    "496": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "497": {
      "op": "bytec 4 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"staked_asset_id\""
      ]
    },
    "499": {
      "op": "swap",
      "stack_out": [
        "\"staked_asset_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "500": {
      "op": "app_global_put",
      "stack_out": []
    },
    "501": {
      "op": "frame_dig -4",
      "defined_out": [
        "rewardAssetId#0 (copy)"
      ],
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "503": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "504": {
      "op": "bytec 5 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "\"reward_asset_id\""
      ]
    },
    "506": {
      "op": "swap",
      "stack_out": [
        "\"reward_asset_id\"",
        "val_as_bytes%1#0"
      ]
    },
    "507": {
      "op": "app_global_put",
      "stack_out": []
    },
    "508": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\""
      ],
      "stack_out": [
        "\"total_staked\""
      ]
    },
    "509": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "\"total_staked\"",
        "0x0000000000000000"
      ],
      "stack_out": [
        "\"total_staked\"",
        "0x0000000000000000"
      ]
    },
    "511": {
      "op": "app_global_put",
      "stack_out": []
    },
    "512": {
      "op": "bytec 8 // \"last_reward_injection_time\"",
      "defined_out": [
        "\"last_reward_injection_time\""
      ],
      "stack_out": [
        "\"last_reward_injection_time\""
      ]
    },
    "514": {
      "op": "bytec 7 // 0x0000000000000000",
      "stack_out": [
        "\"last_reward_injection_time\"",
        "0x0000000000000000"
      ]
    },
    "516": {
      "op": "app_global_put",
      "stack_out": []
    },
    "517": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "defined_out": [
        "\"current_asa_reward_index\""
      ],
      "stack_out": [
        "\"current_asa_reward_index\""
      ]
    },
    "518": {
      "op": "bytec 7 // 0x0000000000000000",
      "stack_out": [
        "\"current_asa_reward_index\"",
        "0x0000000000000000"
      ]
    },
    "520": {
      "op": "app_global_put",
      "stack_out": []
    },
    "521": {
      "op": "bytec 6 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\""
      ],
      "stack_out": [
        "\"num_stakers\""
      ]
    },
    "523": {
      "op": "bytec 7 // 0x0000000000000000",
      "stack_out": [
        "\"num_stakers\"",
        "0x0000000000000000"
      ]
    },
    "525": {
      "op": "app_global_put",
      "stack_out": []
    },
    "526": {
      "op": "frame_dig -2",
      "defined_out": [
        "fluxTierRequired#0 (copy)"
      ],
      "stack_out": [
        "fluxTierRequired#0 (copy)"
      ]
    },
    "528": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "529": {
      "op": "dup",
      "defined_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ]
    },
    "530": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "bitlen%0#0"
      ]
    },
    "531": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "533": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "no_overflow%0#0"
      ]
    },
    "534": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "535": {
      "op": "extract 7 1",
      "defined_out": [
        "uint8%0#0"
      ],
      "stack_out": [
        "uint8%0#0"
      ]
    },
    "538": {
      "op": "bytec 9 // \"flux_tier_required\"",
      "defined_out": [
        "\"flux_tier_required\"",
        "uint8%0#0"
      ],
      "stack_out": [
        "uint8%0#0",
        "\"flux_tier_required\""
      ]
    },
    "540": {
      "op": "swap",
      "stack_out": [
        "\"flux_tier_required\"",
        "uint8%0#0"
      ]
    },
    "541": {
      "op": "app_global_put",
      "stack_out": []
    },
    "542": {
      "op": "bytec 10 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\""
      ],
      "stack_out": [
        "\"flux_oracle_app\""
      ]
    },
    "544": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"flux_oracle_app\"",
        "fluxOracleApp#0 (copy)"
      ],
      "stack_out": [
        "\"flux_oracle_app\"",
        "fluxOracleApp#0 (copy)"
      ]
    },
    "546": {
      "op": "app_global_put",
      "stack_out": []
    },
    "547": {
      "op": "frame_dig -3",
      "defined_out": [
        "initialBalanceTxn#0 (copy)"
      ],
      "stack_out": [
        "initialBalanceTxn#0 (copy)"
      ]
    },
    "549": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "551": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "553": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "554": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "557": {
      "op": "frame_dig -3",
      "stack_out": [
        "initialBalanceTxn#0 (copy)"
      ]
    },
    "559": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "561": {
      "op": "pushint 400000 // 400000",
      "defined_out": [
        "400000",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "400000"
      ]
    },
    "565": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "566": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "569": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "570": {
      "block": "initApplication_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "571": {
      "op": "itxn_begin"
    },
    "572": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "574": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "575": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "577": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "579": {
      "op": "frame_dig -5",
      "defined_out": [
        "stakedAssetId#0 (copy)"
      ],
      "stack_out": [
        "stakedAssetId#0 (copy)"
      ]
    },
    "581": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "583": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "584": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "586": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "587": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "589": {
      "op": "itxn_submit"
    },
    "590": {
      "op": "frame_dig -4",
      "defined_out": [
        "rewardAssetId#0 (copy)"
      ],
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "592": {
      "op": "frame_dig -5",
      "stack_out": [
        "rewardAssetId#0 (copy)",
        "stakedAssetId#0 (copy)"
      ]
    },
    "594": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "595": {
      "op": "bz initApplication_after_if_else@8",
      "stack_out": []
    },
    "598": {
      "op": "itxn_begin"
    },
    "599": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "601": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "602": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "604": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "606": {
      "op": "frame_dig -4",
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "608": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "610": {
      "op": "intc_2 // 4",
      "stack_out": [
        "4"
      ]
    },
    "611": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "613": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "614": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "616": {
      "op": "itxn_submit"
    },
    "617": {
      "block": "initApplication_after_if_else@8",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "618": {
      "block": "initApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "619": {
      "op": "b initApplication_bool_merge@4"
    },
    "622": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.updateAdminAddress",
      "params": {
        "adminAddress#0": "bytes"
      },
      "block": "updateAdminAddress",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "625": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "627": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "628": {
      "op": "bytec_3 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "629": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "630": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "631": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "632": {
      "error": "Only admin can update admin address",
      "op": "assert // Only admin can update admin address",
      "stack_out": []
    },
    "633": {
      "op": "bytec_3 // \"admin_address\"",
      "stack_out": [
        "\"admin_address\""
      ]
    },
    "634": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ],
      "stack_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ]
    },
    "636": {
      "op": "app_global_put",
      "stack_out": []
    },
    "637": {
      "retsub": true,
      "op": "retsub"
    },
    "638": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.injectRewards",
      "params": {
        "rewardTxn#0": "uint64",
        "quantity#0": "uint64",
        "rewardAssetId#0": "uint64"
      },
      "block": "injectRewards",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "641": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "643": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "644": {
      "op": "bytec_3 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "645": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "646": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "647": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "648": {
      "error": "Only admin can inject rewards",
      "op": "assert // Only admin can inject rewards",
      "stack_out": []
    },
    "649": {
      "op": "frame_dig -3",
      "defined_out": [
        "rewardTxn#0 (copy)"
      ],
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "651": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "653": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "654": {
      "op": "bytec_3 // \"admin_address\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_address\""
      ]
    },
    "655": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "656": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "657": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "658": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "661": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "663": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "665": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "667": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "668": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "671": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "673": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "675": {
      "op": "frame_dig -1",
      "defined_out": [
        "rewardAssetId#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "rewardAssetId#0 (copy)"
      ]
    },
    "677": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "678": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "681": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "683": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "685": {
      "op": "frame_dig -2",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "quantity#0 (copy)"
      ]
    },
    "687": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "688": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "691": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "692": {
      "block": "injectRewards_bool_merge@6",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "693": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "694": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "defined_out": [
        "\"current_asa_reward_index\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"current_asa_reward_index\""
      ]
    },
    "695": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "696": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "697": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "698": {
      "op": "frame_dig -2",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "quantity#0 (copy)"
      ]
    },
    "700": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "701": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "702": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "\"current_asa_reward_index\""
      ]
    },
    "703": {
      "op": "swap",
      "stack_out": [
        "\"current_asa_reward_index\"",
        "val_as_bytes%0#0"
      ]
    },
    "704": {
      "op": "app_global_put",
      "stack_out": []
    },
    "705": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "707": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "708": {
      "op": "bytec 8 // \"last_reward_injection_time\"",
      "defined_out": [
        "\"last_reward_injection_time\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "\"last_reward_injection_time\""
      ]
    },
    "710": {
      "op": "swap",
      "stack_out": [
        "\"last_reward_injection_time\"",
        "val_as_bytes%1#0"
      ]
    },
    "711": {
      "op": "app_global_put",
      "stack_out": []
    },
    "712": {
      "retsub": true,
      "op": "retsub"
    },
    "713": {
      "block": "injectRewards_bool_false@5",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "714": {
      "op": "b injectRewards_bool_merge@6"
    },
    "717": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.deleteApplication",
      "params": {},
      "block": "deleteApplication",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "719": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "720": {
      "op": "bytec_3 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "721": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "722": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "723": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "724": {
      "error": "Only admin can delete application",
      "op": "assert // Only admin can delete application",
      "stack_out": []
    },
    "725": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "726": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_staked\""
      ]
    },
    "727": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "728": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "729": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "730": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "731": {
      "error": "Staked assets still exist",
      "op": "assert // Staked assets still exist",
      "stack_out": []
    },
    "732": {
      "op": "itxn_begin"
    },
    "733": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "734": {
      "op": "bytec 4 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"staked_asset_id\""
      ]
    },
    "736": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "737": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "738": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "739": {
      "op": "global ZeroAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "741": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "743": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "745": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "0"
      ]
    },
    "746": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "748": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "750": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "752": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "753": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "755": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "756": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "758": {
      "op": "itxn_submit"
    },
    "759": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "760": {
      "op": "bytec 4 // \"staked_asset_id\"",
      "stack_out": [
        "0",
        "\"staked_asset_id\""
      ]
    },
    "762": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "763": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "764": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "0"
      ]
    },
    "765": {
      "op": "bytec 5 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "767": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "768": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "769": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "770": {
      "op": "bz deleteApplication_after_if_else@4",
      "stack_out": []
    },
    "773": {
      "op": "itxn_begin"
    },
    "774": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "775": {
      "op": "bytec 5 // \"reward_asset_id\"",
      "stack_out": [
        "0",
        "\"reward_asset_id\""
      ]
    },
    "777": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "778": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%5#0"
      ]
    },
    "779": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "780": {
      "op": "global ZeroAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "782": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "784": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "786": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "0"
      ]
    },
    "787": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "789": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "791": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "793": {
      "op": "intc_2 // 4",
      "stack_out": [
        "4"
      ]
    },
    "794": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "796": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "797": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "799": {
      "op": "itxn_submit"
    },
    "800": {
      "block": "deleteApplication_after_if_else@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "801": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.stake",
      "params": {
        "stakeTxn#0": "uint64",
        "quantity#0": "uint64"
      },
      "block": "stake",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "804": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "quantity#0 (copy)"
      ]
    },
    "806": {
      "error": "Invalid quantity",
      "op": "assert // Invalid quantity",
      "stack_out": []
    },
    "807": {
      "op": "frame_dig -2",
      "defined_out": [
        "stakeTxn#0 (copy)"
      ],
      "stack_out": [
        "stakeTxn#0 (copy)"
      ]
    },
    "809": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "811": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "813": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "814": {
      "op": "bz stake_bool_false@5",
      "stack_out": []
    },
    "817": {
      "op": "frame_dig -2",
      "stack_out": [
        "stakeTxn#0 (copy)"
      ]
    },
    "819": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "821": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "823": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "824": {
      "op": "bz stake_bool_false@5",
      "stack_out": []
    },
    "827": {
      "op": "frame_dig -2",
      "stack_out": [
        "stakeTxn#0 (copy)"
      ]
    },
    "829": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "831": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "832": {
      "op": "bytec 4 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "834": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "835": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0"
      ]
    },
    "836": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "837": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "838": {
      "op": "bz stake_bool_false@5",
      "stack_out": []
    },
    "841": {
      "op": "frame_dig -2",
      "stack_out": [
        "stakeTxn#0 (copy)"
      ]
    },
    "843": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "845": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%10#0",
        "quantity#0 (copy)"
      ]
    },
    "847": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "848": {
      "op": "bz stake_bool_false@5",
      "stack_out": []
    },
    "851": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "852": {
      "block": "stake_bool_merge@6",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "853": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "854": {
      "op": "bytec 10 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"flux_oracle_app\""
      ]
    },
    "856": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "maybe_exists%1#0"
      ]
    },
    "857": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "oracle#0"
      ]
    },
    "858": {
      "op": "dup",
      "defined_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "859": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "address#0",
        "check%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "check%0#0"
      ]
    },
    "861": {
      "op": "bury 1",
      "stack_out": [
        "oracle#0",
        "check%0#0"
      ]
    },
    "863": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "oracle#0"
      ]
    },
    "864": {
      "op": "itxn_begin"
    },
    "865": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "867": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0"
      ]
    },
    "869": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "870": {
      "op": "pushbytes 0xd4d7aa5c // method \"getUserTier(address)uint64\"",
      "defined_out": [
        "Method(getUserTier(address)uint64)",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "tmp%13#0",
        "Method(getUserTier(address)uint64)"
      ]
    },
    "876": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "878": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0"
      ]
    },
    "880": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "882": {
      "op": "dig 1",
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0 (copy)"
      ]
    },
    "884": {
      "op": "itxn_field Applications",
      "stack_out": [
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "886": {
      "op": "itxn_field Sender",
      "stack_out": [
        "oracle#0"
      ]
    },
    "888": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "890": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "892": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "894": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "895": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "897": {
      "op": "itxn_submit"
    },
    "898": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "900": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "901": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "904": {
      "op": "swap",
      "stack_out": [
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "905": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%15#0"
      ]
    },
    "908": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "914": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%16#0"
      ]
    },
    "915": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "result#0"
      ]
    },
    "916": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "917": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "918": {
      "op": "bytec 9 // \"flux_tier_required\"",
      "defined_out": [
        "\"flux_tier_required\"",
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0",
        "\"flux_tier_required\""
      ]
    },
    "920": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "921": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%17#0",
        "maybe_value%2#0"
      ]
    },
    "922": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "923": {
      "op": ">=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "924": {
      "error": "Insufficient flux tier",
      "op": "assert // Insufficient flux tier",
      "stack_out": []
    },
    "925": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\""
      ],
      "stack_out": [
        "\"st\""
      ]
    },
    "926": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%20#0"
      ],
      "stack_out": [
        "\"st\"",
        "tmp%20#0"
      ]
    },
    "928": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "929": {
      "op": "box_len",
      "defined_out": [
        "hasLoan#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "hasLoan#0"
      ]
    },
    "930": {
      "op": "bury 1",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "932": {
      "op": "bz stake_else_body@9",
      "stack_out": []
    },
    "935": {
      "op": "bytec_0 // \"st\"",
      "stack_out": [
        "\"st\""
      ]
    },
    "936": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%22#0"
      ],
      "stack_out": [
        "\"st\"",
        "tmp%22#0"
      ]
    },
    "938": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "939": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "940": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "941": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%4#0",
        "0"
      ]
    },
    "942": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "943": {
      "op": "frame_dig -2",
      "defined_out": [
        "stakeTxn#0 (copy)",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "945": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "947": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%25#0"
      ]
    },
    "948": {
      "op": "dig 1",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%25#0",
        "tmp%26#0 (copy)"
      ]
    },
    "950": {
      "op": "+",
      "defined_out": [
        "tmp%26#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "to_encode%0#0"
      ]
    },
    "951": {
      "op": "itob",
      "defined_out": [
        "newStake#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "newStake#0"
      ]
    },
    "952": {
      "op": "bytec_0 // \"st\"",
      "stack_out": [
        "tmp%26#0",
        "newStake#0",
        "\"st\""
      ]
    },
    "953": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "newStake#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "newStake#0",
        "\"st\"",
        "tmp%27#0"
      ]
    },
    "955": {
      "op": "concat",
      "defined_out": [
        "newStake#0",
        "tmp%26#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "newStake#0",
        "tmp%28#0"
      ]
    },
    "956": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "newStake#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "newStake#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "957": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%26#0",
        "newStake#0",
        "maybe_value%5#0"
      ]
    },
    "958": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "newStake#0",
        "tmp%26#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "newStake#0",
        "tmp%29#0"
      ]
    },
    "961": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "962": {
      "op": "bytec_0 // \"st\"",
      "stack_out": [
        "tmp%26#0",
        "encoded_tuple_buffer%2#0",
        "\"st\""
      ]
    },
    "963": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%2#0",
        "tmp%26#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "encoded_tuple_buffer%2#0",
        "\"st\"",
        "tmp%30#0"
      ]
    },
    "965": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "encoded_tuple_buffer%2#0",
        "tmp%31#0"
      ]
    },
    "966": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "967": {
      "op": "box_put",
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "968": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "0"
      ]
    },
    "969": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "0",
        "\"total_staked\""
      ]
    },
    "970": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "971": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "maybe_value%6#0"
      ]
    },
    "972": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%32#0"
      ]
    },
    "973": {
      "op": "+",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "974": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "975": {
      "op": "bytec_1 // \"total_staked\"",
      "stack_out": [
        "val_as_bytes%1#0",
        "\"total_staked\""
      ]
    },
    "976": {
      "op": "swap",
      "stack_out": [
        "\"total_staked\"",
        "val_as_bytes%1#0"
      ]
    },
    "977": {
      "op": "app_global_put",
      "stack_out": []
    },
    "978": {
      "retsub": true,
      "op": "retsub"
    },
    "979": {
      "block": "stake_else_body@9",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "stakeTxn#0 (copy)"
      ],
      "stack_out": [
        "stakeTxn#0 (copy)"
      ]
    },
    "981": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "983": {
      "op": "dup",
      "defined_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "984": {
      "op": "itob",
      "defined_out": [
        "to_encode%2#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "985": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "to_encode%2#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "986": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "defined_out": [
        "\"current_asa_reward_index\"",
        "0",
        "to_encode%2#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "val_as_bytes%2#0",
        "0",
        "\"current_asa_reward_index\""
      ]
    },
    "987": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "to_encode%2#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "val_as_bytes%2#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "988": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "to_encode%2#0",
        "val_as_bytes%2#0",
        "maybe_value%7#0"
      ]
    },
    "989": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "990": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%5#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "encoded_tuple_buffer%5#0",
        "\"st\""
      ]
    },
    "991": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%5#0",
        "tmp%34#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "encoded_tuple_buffer%5#0",
        "\"st\"",
        "tmp%34#0"
      ]
    },
    "993": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%35#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "encoded_tuple_buffer%5#0",
        "tmp%35#0"
      ]
    },
    "994": {
      "op": "swap",
      "stack_out": [
        "to_encode%2#0",
        "tmp%35#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "995": {
      "op": "box_put",
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "996": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%2#0",
        "0"
      ]
    },
    "997": {
      "op": "bytec 6 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "999": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1000": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "to_encode%2#0",
        "maybe_value%8#0"
      ]
    },
    "1001": {
      "op": "btoi",
      "defined_out": [
        "tmp%36#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "tmp%36#0"
      ]
    },
    "1002": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%36#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "tmp%36#0",
        "1"
      ]
    },
    "1003": {
      "op": "+",
      "defined_out": [
        "to_encode%2#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "to_encode%3#0"
      ]
    },
    "1004": {
      "op": "itob",
      "defined_out": [
        "to_encode%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1005": {
      "op": "bytec 6 // \"num_stakers\"",
      "stack_out": [
        "to_encode%2#0",
        "val_as_bytes%3#0",
        "\"num_stakers\""
      ]
    },
    "1007": {
      "op": "swap",
      "stack_out": [
        "to_encode%2#0",
        "\"num_stakers\"",
        "val_as_bytes%3#0"
      ]
    },
    "1008": {
      "op": "app_global_put",
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "1009": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%2#0",
        "0"
      ]
    },
    "1010": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1011": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1012": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "to_encode%2#0",
        "maybe_value%9#0"
      ]
    },
    "1013": {
      "op": "btoi",
      "defined_out": [
        "tmp%37#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "tmp%37#0"
      ]
    },
    "1014": {
      "op": "+",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "1015": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "1016": {
      "op": "bytec_1 // \"total_staked\"",
      "stack_out": [
        "val_as_bytes%4#0",
        "\"total_staked\""
      ]
    },
    "1017": {
      "op": "swap",
      "stack_out": [
        "\"total_staked\"",
        "val_as_bytes%4#0"
      ]
    },
    "1018": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1019": {
      "retsub": true,
      "op": "retsub"
    },
    "1020": {
      "block": "stake_bool_false@5",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1021": {
      "op": "b stake_bool_merge@6"
    },
    "1024": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.claimRewards",
      "params": {},
      "block": "claimRewards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1027": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\""
      ],
      "stack_out": [
        "\"st\""
      ]
    },
    "1028": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"st\"",
        "tmp%0#0"
      ]
    },
    "1030": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1031": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1032": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1034": {
      "error": "No stake found for user",
      "op": "assert // No stake found for user",
      "stack_out": []
    },
    "1035": {
      "op": "bytec_0 // \"st\"",
      "stack_out": [
        "\"st\""
      ]
    },
    "1036": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "\"st\"",
        "tmp%2#0"
      ]
    },
    "1038": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1039": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "staker#0"
      ],
      "stack_out": [
        "staker#0",
        "maybe_exists%1#0"
      ]
    },
    "1040": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "staker#0"
      ]
    },
    "1041": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "1042": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "staker#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%4#0"
      ]
    },
    "1045": {
      "op": "swap",
      "defined_out": [
        "staker#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "staker#0"
      ]
    },
    "1046": {
      "op": "dup",
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "1047": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "staker#0 (copy)",
        "0"
      ]
    },
    "1048": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "staker#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0"
      ]
    },
    "1049": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "staker#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "1050": {
      "error": "No stake",
      "op": "assert // No stake",
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0"
      ]
    },
    "1051": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0",
        "0"
      ]
    },
    "1052": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "defined_out": [
        "\"current_asa_reward_index\"",
        "0",
        "a#0",
        "staker#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0",
        "0",
        "\"current_asa_reward_index\""
      ]
    },
    "1053": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "staker#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1054": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0",
        "maybe_value%2#0"
      ]
    },
    "1055": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "staker#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "staker#0",
        "a#0",
        "tmp%7#0"
      ]
    },
    "1056": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "tmp%7#0",
        "staker#0"
      ]
    },
    "1058": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "a#0",
        "staker#0",
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "tmp%7#0",
        "staker#0",
        "8"
      ]
    },
    "1060": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "tmp%4#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1061": {
      "op": "-",
      "defined_out": [
        "a#0",
        "rewardIndexDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "rewardIndexDiff#0"
      ]
    },
    "1062": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "rewardIndexDiff#0",
        "0"
      ]
    },
    "1063": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "a#0",
        "rewardIndexDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "rewardIndexDiff#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1064": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "rewardIndexDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "rewardIndexDiff#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1065": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "rewardIndexDiff#0",
        "maybe_value%3#0"
      ]
    },
    "1066": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "c#0",
        "rewardIndexDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "a#0",
        "rewardIndexDiff#0",
        "c#0"
      ]
    },
    "1067": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "rewardIndexDiff#0",
        "c#0",
        "a#0"
      ]
    },
    "1069": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "a#0",
        "c#0",
        "rewardIndexDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "rewardIndexDiff#0",
        "c#0",
        "a#0",
        "1000000000000000"
      ]
    },
    "1071": {
      "op": "mulw",
      "defined_out": [
        "c#0",
        "hi#0",
        "lo#0",
        "rewardIndexDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "rewardIndexDiff#0",
        "c#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1072": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "rewardIndexDiff#0",
        "hi#0",
        "lo#0",
        "c#0"
      ]
    },
    "1074": {
      "op": "divw",
      "defined_out": [
        "rewardIndexDiff#0",
        "shareOfTotalStake#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "rewardIndexDiff#0",
        "shareOfTotalStake#0"
      ]
    },
    "1075": {
      "op": "mulw",
      "stack_out": [
        "tmp%4#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1076": {
      "op": "intc 4 // 1000000000000000",
      "stack_out": [
        "tmp%4#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1078": {
      "op": "divw",
      "defined_out": [
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0"
      ]
    },
    "1079": {
      "op": "dup",
      "defined_out": [
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "shareOfRewards#0"
      ]
    },
    "1080": {
      "op": "bz claimRewards_after_if_else@3",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0"
      ]
    },
    "1083": {
      "op": "itxn_begin"
    },
    "1084": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "0"
      ]
    },
    "1085": {
      "op": "bytec 5 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1087": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1088": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "maybe_value%4#0"
      ]
    },
    "1089": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1090": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1092": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1094": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "shareOfRewards#0"
      ]
    },
    "1096": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1098": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1100": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1102": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0"
      ]
    },
    "1104": {
      "op": "intc_2 // 4",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "4"
      ]
    },
    "1105": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0"
      ]
    },
    "1107": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "shareOfRewards#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "1000"
      ]
    },
    "1108": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0"
      ]
    },
    "1110": {
      "op": "itxn_submit"
    },
    "1111": {
      "block": "claimRewards_after_if_else@3",
      "stack_in": [
        "tmp%4#0",
        "shareOfRewards#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "0"
      ]
    },
    "1112": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "defined_out": [
        "\"current_asa_reward_index\"",
        "0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "0",
        "\"current_asa_reward_index\""
      ]
    },
    "1113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1114": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "maybe_value%5#0"
      ]
    },
    "1115": {
      "op": "frame_dig 0",
      "defined_out": [
        "maybe_value%5#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "maybe_value%5#0",
        "tmp%4#0"
      ]
    },
    "1117": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "tmp%4#0",
        "maybe_value%5#0"
      ]
    },
    "1118": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1119": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "encoded_tuple_buffer%2#0",
        "\"st\""
      ]
    },
    "1120": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "encoded_tuple_buffer%2#0",
        "tmp%15#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "encoded_tuple_buffer%2#0",
        "\"st\"",
        "tmp%15#0"
      ]
    },
    "1122": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%16#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "encoded_tuple_buffer%2#0",
        "tmp%16#0"
      ]
    },
    "1123": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0",
        "tmp%16#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1124": {
      "op": "box_put",
      "stack_out": [
        "tmp%4#0",
        "shareOfRewards#0"
      ]
    },
    "1125": {
      "retsub": true,
      "op": "retsub"
    },
    "1126": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.unstake",
      "params": {
        "quantity#0": "uint64"
      },
      "block": "unstake",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1129": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "shareOfRewards#0"
      ]
    },
    "1131": {
      "op": "dup",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0"
      ]
    },
    "1132": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\""
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "\"st\""
      ]
    },
    "1133": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "\"st\"",
        "tmp%0#0"
      ]
    },
    "1135": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "tmp%1#0"
      ]
    },
    "1136": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1137": {
      "op": "bury 1",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "maybe_exists%0#0"
      ]
    },
    "1139": {
      "error": "No stake found for user",
      "op": "assert // No stake found for user",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0"
      ]
    },
    "1140": {
      "op": "bytec_0 // \"st\"",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "\"st\""
      ]
    },
    "1141": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "\"st\"",
        "tmp%2#0"
      ]
    },
    "1143": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "tmp%3#0"
      ]
    },
    "1144": {
      "op": "box_get",
      "defined_out": [
        "currentRecord#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "1145": {
      "op": "swap",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "maybe_exists%1#0",
        "currentRecord#0"
      ]
    },
    "1146": {
      "op": "dup",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "maybe_exists%1#0",
        "currentRecord#0",
        "currentRecord#0 (copy)"
      ]
    },
    "1147": {
      "op": "uncover 2",
      "defined_out": [
        "currentRecord#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "currentRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "1149": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "currentRecord#0"
      ]
    },
    "1150": {
      "op": "intc_0 // 0",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "currentRecord#0",
        "0"
      ]
    },
    "1151": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "currentRecord#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0"
      ]
    },
    "1152": {
      "op": "dupn 2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "currentRecord#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "1154": {
      "error": "No stake",
      "op": "assert // No stake",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "a#0"
      ]
    },
    "1155": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "a#0",
        "quantity#0 (copy)"
      ]
    },
    "1157": {
      "op": ">=",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "tmp%9#0"
      ]
    },
    "1158": {
      "op": "assert",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0"
      ]
    },
    "1159": {
      "op": "itxn_begin"
    },
    "1160": {
      "op": "intc_0 // 0",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "0"
      ]
    },
    "1161": {
      "op": "bytec 4 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "a#0",
        "currentRecord#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1163": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1164": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "maybe_value%2#0"
      ]
    },
    "1165": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1166": {
      "op": "txn Sender"
    },
    "1168": {
      "op": "global CurrentApplicationAddress"
    },
    "1170": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "quantity#0 (copy)"
      ]
    },
    "1172": {
      "op": "bnz unstake_ternary_false@2",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1175": {
      "op": "frame_dig 3",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "ternary_result%0#2"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "ternary_result%0#2"
      ]
    },
    "1177": {
      "block": "unstake_ternary_merge@3",
      "stack_in": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "ternary_result%0#2"
      ],
      "op": "itxn_field AssetAmount",
      "defined_out": [],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1179": {
      "op": "frame_dig 6",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1181": {
      "op": "itxn_field Sender",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1183": {
      "op": "frame_dig 5",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1185": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1187": {
      "op": "frame_dig 4",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1189": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1191": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "4"
      ]
    },
    "1192": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1194": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "1000"
      ]
    },
    "1195": {
      "op": "itxn_field Fee",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1197": {
      "op": "itxn_submit"
    },
    "1198": {
      "op": "frame_dig 2",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "currentRecord#0"
      ]
    },
    "1200": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0"
      ]
    },
    "1203": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "1204": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "defined_out": [
        "\"current_asa_reward_index\"",
        "0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "0",
        "\"current_asa_reward_index\""
      ]
    },
    "1205": {
      "op": "app_global_get_ex",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1206": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%12#0",
        "maybe_value%3#0"
      ]
    },
    "1207": {
      "op": "!=",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%13#0"
      ]
    },
    "1208": {
      "op": "bz unstake_after_if_else@9",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1211": {
      "op": "intc_0 // 0",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "1212": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"current_asa_reward_index\""
      ]
    },
    "1213": {
      "op": "app_global_get_ex",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1214": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%4#0"
      ]
    },
    "1215": {
      "op": "btoi",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%14#0"
      ]
    },
    "1216": {
      "op": "frame_dig 2",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%14#0",
        "currentRecord#0"
      ]
    },
    "1218": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%14#0",
        "currentRecord#0",
        "8"
      ]
    },
    "1220": {
      "op": "extract_uint64",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "1221": {
      "op": "-",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rewardIndexDiff#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0"
      ]
    },
    "1222": {
      "op": "intc_0 // 0",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "0"
      ]
    },
    "1223": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rewardIndexDiff#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1224": {
      "op": "app_global_get_ex",
      "defined_out": [
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "rewardIndexDiff#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1225": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "maybe_value%5#0"
      ]
    },
    "1226": {
      "op": "btoi",
      "defined_out": [
        "c#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rewardIndexDiff#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "c#0"
      ]
    },
    "1227": {
      "op": "frame_dig 3",
      "defined_out": [
        "a#0",
        "c#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rewardIndexDiff#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "c#0",
        "a#0"
      ]
    },
    "1229": {
      "op": "intc 4 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "a#0",
        "c#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rewardIndexDiff#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "c#0",
        "a#0",
        "1000000000000000"
      ]
    },
    "1231": {
      "op": "mulw",
      "defined_out": [
        "a#0",
        "c#0",
        "currentRecord#0",
        "hi#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "lo#0",
        "rewardIndexDiff#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "c#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1232": {
      "op": "uncover 2",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "hi#0",
        "lo#0",
        "c#0"
      ]
    },
    "1234": {
      "op": "divw",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rewardIndexDiff#0",
        "shareOfTotalStake#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "rewardIndexDiff#0",
        "shareOfTotalStake#0"
      ]
    },
    "1235": {
      "op": "mulw",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1236": {
      "op": "intc 4 // 1000000000000000",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1238": {
      "op": "divw",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "shareOfRewards#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "shareOfRewards#0"
      ]
    },
    "1239": {
      "op": "dup",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "shareOfRewards#0",
        "shareOfRewards#0"
      ]
    },
    "1240": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "shareOfRewards#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "shareOfRewards#0"
      ]
    },
    "1242": {
      "op": "bz unstake_after_if_else@9",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1245": {
      "op": "itxn_begin"
    },
    "1246": {
      "op": "intc_0 // 0",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "1247": {
      "op": "bytec 5 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "shareOfRewards#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1249": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "shareOfRewards#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1250": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%6#0"
      ]
    },
    "1251": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "shareOfRewards#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1252": {
      "op": "txn Sender",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "shareOfRewards#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1254": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "a#0",
        "currentRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "shareOfRewards#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1256": {
      "op": "frame_dig 0",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "shareOfRewards#0"
      ]
    },
    "1258": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1260": {
      "op": "itxn_field Sender",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1262": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1264": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1266": {
      "op": "intc_2 // 4",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "4"
      ]
    },
    "1267": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1269": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "1000"
      ]
    },
    "1270": {
      "op": "itxn_field Fee",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1272": {
      "op": "itxn_submit"
    },
    "1273": {
      "block": "unstake_after_if_else@9",
      "stack_in": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "1274": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1275": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1276": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%7#0"
      ]
    },
    "1277": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%21#0"
      ]
    },
    "1278": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1280": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "quantity#0 (copy)"
      ]
    },
    "1282": {
      "op": "bnz unstake_ternary_false@11",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1285": {
      "op": "frame_dig 3",
      "defined_out": [
        "ternary_result%1#2",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "ternary_result%1#2"
      ]
    },
    "1287": {
      "block": "unstake_ternary_merge@12",
      "stack_in": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "ternary_result%1#2"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "ternary_result%1#2",
        "tmp%21#0"
      ]
    },
    "1289": {
      "op": "swap",
      "defined_out": [
        "ternary_result%1#2",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%21#0",
        "ternary_result%1#2"
      ]
    },
    "1290": {
      "op": "-",
      "defined_out": [
        "tmp%21#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "to_encode%0#0"
      ]
    },
    "1291": {
      "op": "itob",
      "defined_out": [
        "tmp%21#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1292": {
      "op": "bytec_1 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "tmp%21#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%0#0",
        "\"total_staked\""
      ]
    },
    "1293": {
      "op": "swap",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "\"total_staked\"",
        "val_as_bytes%0#0"
      ]
    },
    "1294": {
      "op": "app_global_put",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1295": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "quantity#0 (copy)"
      ]
    },
    "1297": {
      "op": "bnz unstake_else_body@14",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1300": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "\"st\""
      ]
    },
    "1301": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "tmp%21#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "\"st\"",
        "tmp%25#0"
      ]
    },
    "1303": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%26#0"
      ]
    },
    "1304": {
      "op": "box_del",
      "defined_out": [
        "tmp%21#0",
        "{box_del}"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "{box_del}"
      ]
    },
    "1305": {
      "op": "pop",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1306": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "1307": {
      "op": "bytec 6 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1309": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1310": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%8#0"
      ]
    },
    "1311": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%27#0"
      ]
    },
    "1312": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%21#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%27#0",
        "1"
      ]
    },
    "1313": {
      "op": "-",
      "defined_out": [
        "tmp%21#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "to_encode%1#0"
      ]
    },
    "1314": {
      "op": "itob",
      "defined_out": [
        "tmp%21#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1315": {
      "op": "bytec 6 // \"num_stakers\"",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%1#0",
        "\"num_stakers\""
      ]
    },
    "1317": {
      "op": "swap",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "\"num_stakers\"",
        "val_as_bytes%1#0"
      ]
    },
    "1318": {
      "op": "app_global_put",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1319": {
      "retsub": true,
      "op": "retsub"
    },
    "1320": {
      "block": "unstake_else_body@14",
      "stack_in": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "a#0"
      ]
    },
    "1322": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "a#0",
        "quantity#0 (copy)"
      ]
    },
    "1324": {
      "op": "-",
      "defined_out": [
        "a#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "to_encode%2#0"
      ]
    },
    "1325": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%2#0"
      ]
    },
    "1326": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "1327": {
      "op": "bytec_2 // \"current_asa_reward_index\"",
      "defined_out": [
        "\"current_asa_reward_index\"",
        "0",
        "a#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%2#0",
        "0",
        "\"current_asa_reward_index\""
      ]
    },
    "1328": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%2#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1329": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%2#0",
        "maybe_value%9#0"
      ]
    },
    "1330": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1331": {
      "op": "bytec_0 // \"st\"",
      "defined_out": [
        "\"st\"",
        "a#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "encoded_tuple_buffer%2#0",
        "\"st\""
      ]
    },
    "1332": {
      "op": "txn Sender",
      "defined_out": [
        "\"st\"",
        "a#0",
        "encoded_tuple_buffer%2#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "encoded_tuple_buffer%2#0",
        "\"st\"",
        "tmp%30#0"
      ]
    },
    "1334": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "encoded_tuple_buffer%2#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "encoded_tuple_buffer%2#0",
        "tmp%31#0"
      ]
    },
    "1335": {
      "op": "swap",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1336": {
      "op": "box_put",
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1337": {
      "retsub": true,
      "op": "retsub"
    },
    "1338": {
      "block": "unstake_ternary_false@11",
      "stack_in": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "ternary_result%1#2"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "ternary_result%1#2"
      ]
    },
    "1340": {
      "op": "b unstake_ternary_merge@12"
    },
    "1343": {
      "block": "unstake_ternary_false@2",
      "stack_in": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "ternary_result%0#2"
      ],
      "stack_out": [
        "shareOfRewards#0",
        "tmp%21#0",
        "currentRecord#0",
        "a#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "ternary_result%0#2"
      ]
    },
    "1345": {
      "op": "b unstake_ternary_merge@3"
    }
  }
}