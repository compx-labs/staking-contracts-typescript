{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/staking-contracts-typescript/projects/staking-contracts-typescript/smart_contracts/injected_rewards_pool_flux_gated/config.algo.ts",
    "/Users/kierannelson/Development/staking-contracts-typescript/projects/staking-contracts-typescript/smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiCA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA8dE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAzGC;;AAAA;AAAA;AAAA;;AAAA;AArXH;;;AAAA;AAqXG;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA3EA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAnFA;;AAAA;AAAA;AAAA;;AAAA;AAlMH;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAkMG;;;AAAA;;AArCA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AA/IH;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AA+IG;;;AAAA;;AAvBA;;AAAA;AAAA;AAAA;;AAAA;AAxHH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwHG;;;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AA1FH;;;AAAA;AAAA;;AA0FG;;;AAAA;;AA5CA;;AAAA;AAAA;AAAA;;AAAA;AA9CH;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AA8CG;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA9BH;;;AA8BG;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAD;;;AAZA;;AAcE;;AAAA;AARF;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASE;;AAaF;;;AAQgB;;AApChB;AAAA;;AAAA;AAAA;AAoCS;AAAP;AAE6B;;AAAA;AAlD/B;;AAkDE;AAAA;AAC6B;;AAAA;AAjD/B;;AAiDE;AAAA;AA/CF;AAgD4B;;AAA1B;AA5CF;;AA6C0C;;AAAxC;AA/CF;AAgDoC;;AAAlC;AAtCF;AAuC2B;;AAAzB;AACgC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AApClC;;AAoCE;AAAA;AAlCF;;AAmCE;;AAAA;AAEA;;AAAA;;AACmB;;AADnB;AAAA;;;AAAA;;AAAA;;ADnFsC;;;;;ACmFtC;AAAA;;;;AAAA;AAKA;AAG0B;;AACT;;;;;;;;;AAJjB;;;;ADvFoC;;;;ACuFpC;AAQI;;AAAA;;AAAA;AAAJ;;;AACE;AAG0B;;AACT;;;;;;;;;AAJjB;;;;ADhGkC;;;;ACgGlC;;;;;;AAWJ;;;AAEgB;;AA1EhB;AAAA;;AAAA;AAAA;AA0ES;AAAP;AA1EF;;AA2EE;;AAAA;;AAUF;;;AAEiC;AAjGjC;AAAA;;AAAA;AAAA;AAkGiC;AAA/B;;;AD/HqC;;ACgInC;;AD/H8C;;ACkI9C;;AAAA;AAVK;;AAUL;AAVK;;AAUL;AAKF;AAAA;AAKF;;;;;AApHkD;AAsH3B;AAAA;;AAAd;AAAP;AACc;;AAzGhB;AAAA;;AAAA;AAAA;AAyGS;AAAP;AAE+B;AArHjC;AAAA;;AAAA;AAAA;AAsHiC;AAA/B;;;ADnJqC;;ACoJnC;;ADnJ8C;;ACsJ9C;;AAAA;AA9BK;;AA8BL;AA9BK;;AA8BL;AADI;;AAON;;AAAA;;AAA2C;;AAA3C;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AApIgD;AAqIhD;;;;AAAA;;AAC6B;;AAAA;AAtH/B;;;;;;;;;;;;;;;;;AAsHE;AAAA;;;;;;AAKF;;;AAEgB;;AA/HhB;AAAA;;AAAA;AAAA;AA+HS;AAAP;AAEA;;AAAA;;AAjIF;AAAA;;AAAA;AAAA;AAiIE;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAvIF;AAAA;AAAA;AAAA;AA6IgF;AAAhC;;AAAA;AAAZ;AA7IpC;AA6IE;AAAA;AAC2D;;AAAnB;AA5I1C;;AA4IE;AAAA;;;;;;AAKc;;AA7IhB;AAAA;;AAAA;AAAA;AA6IS;AAAP;AArJF;AAAA;AAAA;AAAA;AAsJiC;AAAxB;AAAP;AA5JgD;AA8JnC;;AAGb;AA/JF;AAAA;;AAAA;AAAA;AAiK4C;AACjB;;AAEC;;;;AADT;;;;;;;AAJjB;;;;ADtLoC;;;;ACsLpC;AA/JF;AAAA;;AAAA;AAAA;AAEA;AAAA;;AAAA;AAAA;AAuKM;AAAJ;;;AACE;AAxKJ;AAAA;;AAAA;AAAA;AA0K8C;AACjB;;AAEC;;;;AADT;;;;;;;AAJjB;;;;ADjMkC;;;;ACiMlC;;AAkBJ;;;;;;;;AAGE;;AAAA;AAzKF;AAAA;;AAAA;AAAA;AA4KyB;AAAA;;AAAA;;AAAA;AAIR;AAGE;;AAGG;;AAJa;AAFlB;;;;;;;;;;;;;;;;;;;;AAAA;;;;AD7NqB;;;;AC6NrB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AASD;AA3LhB;AAAA;;AAAA;AAAA;AA2LwD;AAA/C;AAAP;AAEW;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAEF;;AAAA;;AACiB;;AADjB;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AApNF;AAAA;;AAAA;AAAA;AAuNgD;AAH9C;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAM8B;AAA1B;;AACO;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAEmB;AAAZ;;AAhOuC;AAgOP;AAAA;;AAAA;AAAjB;;AAAuB;;AAAvB;AAAA;AAAA;;AAAxB;;;AACE;;AAAA;;;AAjO8C;AAmO7B;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAsB;;;AAAoC;;AAA1D;AAAJ;;;AAEa;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAtO0C;AAyOhB;AAAA;AAAb;;AAAA;AAAA;AACyB;AAAN;;AAAM;AAAkB;;AAAA;;AAAA;AAAA;;AAA/B;AAAZ;AAAf;;AAAA;;AAEW;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AA7O0C;AA+O/B;AAAA;AAAb;;AAAA;AAAA;;AAAA;;AAAA;AA/O4C;AA+O5C;AAAA;AAzON;AAAA;AAAA;AAAA;AA0OoE;AAAxB;;AAAA;AAAZ;AA1OhC;AA0OM;AAAA;AACiB;AAAjB;;AAyBS;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AA3CmD;;AAAK;AAAL;AAAA;;;;;AAhOP;AAkPtB;AAAA;AAAb;;AAAA;AAAA;AAAsB;;;AAAoC;;AAA1D;AAAJ;;;AAEM;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AA/OR;AAAA;AAAA;AAAA;AAiPoE;AAAkB;;AAAA;;AAAA;AAAA;;AAA1C;AAAZ;AAjPhC;AAiPM;AAAA;AACW;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAGiC;;AAC1B;;AAAA;AAFe;AAGH;;AAHG;AA3PoB;AA2P/B;AAAA;AAAb;;AAAA;AAAA;;AAAA;;AAAA;AA3P4C;AA2P5C;AAAA;AAKW;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AA/OR;AAAA;AAAA;AAAA;AAiPkE;AAAS;AAAhC;AAAZ;AAjP/B;AAiPM;AAAA;AACiB;AAAjB;;;;;AAlPN;AAAA;AAAA;AAAA;AAqPoC;ADjSM;;;ACiS7B;AAAP;;;;AAOJ;;AAAA;;;;;;AAGF;;;;;;;;;AAzQA;AAAA;AAAA;AAAA;AA2QsC;AAAS;;AAAzC;AAjQN;AAAA;AAAA;AAAA;AAiQ0E;AAApE;AAAJ;;;AA3QF;AAAA;AAAA;AAAA;AAAA;;AAAA;AA8QyB;AAAZ;;AApQb;AAAA;AAAA;AAAA;AAoQuD;AAA3B;;AAAA;AAAxB;;;AACa;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAxR0C;AA2R3B;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAsB;;AAAM;AAAhC;;;AA3R4C;AA4Rd;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAGkB;;AAAM;AAAA;AAAA;;AAzR/C;AAAA;AAAA;AAAA;AAyR0F;AD1SzE;AAvBc;;AAuBd;AACV;;AAAA;AAAA;;AC2SY;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAGuB;;AAAA;AAAA;AAAA;;AAAzB;;;ADhTS;;AAAA;;AAAA;AAvBc;;AAwBxB;;;;ACkTG;;;AACe;;;;;;;;AAjSzB;AAAA;AAAA;AAAA;AAoS8C;AAAhC;AAAJ;;;AApSV;AAAA;AAAA;AAAA;AAqS0F;AAAhC;;AAAA;AAAZ;AArS9C;AAqSY;AAAA;AAzSZ;AAAA;;AAAA;AAAA;AAFA;AAAA;;AAAA;AAAA;AA6SgB;AAAJ;;;AAE6B;;AAAA;;AAAA;AAAA;;AAAA;AAAZ;AAAf;;AAAA;AAAA;;AAAA;;AA3Sd;AAAA;AAAA;AAAA;AA4S4E;AAAxB;AAAZ;AA5SxC;AA4Sc;AAAA;AAlToC;AAqU3B;AAAA;AAAb;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AArUwC;AAqUxC;AAAA;AA/CqD;;AAAK;AAAL;AAAA;;;;;AA8Be;;AAAA;AAAlB;;AAAkB;AAAzB;;AAAA;AAAZ;AAA3B;;AAAA;;;;;AAhTd;AAAA;;AAAA;AAAA;AAFA;AAAA;;AAAA;AAAA;AAsTgB;AAAJ;;;AAhTZ;AAAA;AAAA;AAAA;AAkTgF;AAA5D;;AAAA;AAAA;;AAAe;AACM;;AAAA;AAAZ;AAAf;;AAAA;AAAA;;AAAA;;AArTd;AAAA;AAAA;AAAA;AAuTwC;AArTxC;AAAA;AAAA;AAAA;AAqT+F;AAA7C;;AAAA;AAAA;AAAlC;AADwB;AAtTxC;AAsTc;AAAA;AApTd;AA0T8C;;AAAlC;;;;AAFkE;;AAAA;AAAlB;;AAAkB;AAAzB;;AAAA;AAAZ;AAA3B;;AAAA;;;;;AASwC;;AAAnB;AA7TnC;;;;;;;;;;;;;;;;;;;AA6TI;AAAA;;AAIJ;;;;;AACuB;AA5TvB;AAAA;AAAA;AAAA;AA4TqD;AAA3B;;AAAA;AAAxB;;;AACa;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAhV4C;AAkV7B;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAsB;;;AAAtB;;AAAA;AAAJ;;;AAlV8C;AAmVxB;AAAA;AAAb;;AAAA;AAAA;AAAP;;AAAA;AALuD;;AAAK;AAAL;AAAA;;;;;AAQpD;;AAAP;;AAAA;AAMF;;;AAEwD;;AAAvC;;;AAAT;;AAEK;;AAAkB;AAAA;AAAA;;;AAA7B;;;AACE;AA7VJ;AAAA;;AAAA;AAAA;AA+V8C;AAChB;;AACP;;;;;;;;;;;;AAJnB;;;;ADtXkC;;;;ACsXlC;AASA;;AAA2B;;AAA3B;;;;;;;;AAES;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAEoB;;AAAA;AAAA;;;AAAtB;AAAA;;;AAAA;;AAEF;;;;;;;;;;AAEuB;AAjWvB;AAAA;AAAA;AAAA;AAiWqD;AAA3B;;AAAA;AAAxB;;;AACa;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AArX4C;AAuXlB;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACJ;;;AAAoC;;AAA3C;AAAJ;;;AACmB;;AAAN;;AAAM;AAAA;AAAA;;AAAjB;;;AACS;;AAAA;;AAAA;AAAP;AAxXR;AAAA;;AAAA;AAAA;AAyXuC;AAA/B;;;AACE;AAEY;;AAAA;;;;;AACS;;AACF;;;;;;;;AAJnB;;;AAKS;;;AALT;AAqByB;;AAAA;AAAlB;;AAAkB;AAAA;AAAA;;;;;AAA7B;;;AACE;AA9YR;AAAA;;AAAA;AAAA;AAgZkD;AAChB;;AACP;;;;;;;;;;;;AAJnB;;;;ADva8B;;;;ACua9B;AASA;;AAA2B;;AAA3B;;;;;;;;AArZR;AAAA;AAAA;AAAA;AAyZoE;AAAA;;AAAU;;AAAA;;;AAA8B;;AAAN;;AAAM;AAAhE;;AAAA;AAAA;AAAZ;AAzZhC;AAyZM;AAAA;AAEW;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAGF;;AAAA;;;AAMwB;;AAAA;;;AALA;;AAKtB;;;AAAA;;AAzZR;AAAA;AAAA;AAAA;AA2ZoF;AAAS;AAAhC;AA7aX;AA6aK;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAsD;;;AAArE;;;AAAb;;AA3Zd;AAAA;AAAA;AAAA;AA4Z8F;AAAS;AAAhC;AA9arB;AA8ae;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AAAsD;;;AAAA;;AAkBnF;AAAZ;;AA9aX;AAAA;AAAA;AAAA;AA8aqD;AAA3B;;AAAA;AAAxB;;;AAhcgD;AAic7B;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;AAAsB;;;AAAtB;;AAAA;AAAJ;;;;;;;AAlBe;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AAEF;;AAAA;;AAAA;;;AAAA;AAEA;;AAAA;;AAAA;;;AAAA;AAlaR;AAAA;AAAA;AAAA;AAmaoE;AAAS;AAAhC;AAAZ;AAnajC;AAmaQ;AAAA;AAKoB;;AAAA;AAAA;;;AAAtB;AAAA;;;AAAA;AAvEuD;;AAAK;AAAL;AAAA;;;;;AA6EA;;AAAK;AAAL;AAAA;;;;;AAKpD;;;AAvBuB;;;AASgB;;AAAA;AAAN;;AAAM;AAAb;;AAAA;AAAZ;AAAf;;AAC2B;;AAA3B;;AAAA;;;;;;;;;;;;;;;AAnDE;AAnYV;AAAA;;AAAA;AAAA;AAqYoD;AAAA;;AAChB;;AAAA;;AACP;;AAAA;;AACF;;AAAA;;;;;;;;;;;;;;;;;;;AALjB;;;;AD1Z4B;;;;AC0Z5B;;;;;;;;;;AAmEV;;;;;AACuB;AAvbvB;AAAA;AAAA;AAAA;AAubqD;AAA3B;;AAAA;AAAxB;;;AACa;;AAAe;AAAtB;AAAJ;;;AACsB;;AAAe;;AAAtB;AAAb;AAAA;;;AA3c4C;AA6c7B;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAsB;;;AAAtB;;AAAA;AAAJ;;;AA7c8C;AA8c/B;AAAA;AAAb;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA9c4C;AA8c5C;AAAA;AACA;;AAAA;;AAAA;AA/c4C;AAgdtB;AAAA;AAAb;;AAAA;AAAA;AAAsB;;;AAAoC;;AAA1D;AAAJ;;;AAhduC;AAid/B;AAAA;AAAb;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAjd4C;AAid5C;AAAA;AACA;;AAAA;;AAAA;AATuD;;AAAK;AAAL;AAAA;;;;;;;;;;AAa7D;;;AAtdkD;AAudnC;AAAA;AAAb;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAvdgD;AAudhD;AAAA;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 48 300 700 1000 650 100000 9605300 53300 1000000000000000"
    },
    "32": {
      "op": "bytecblock \"stakers\" \"num_stakers\" \"total_staked\" \"injected_asa_rewards\" \"reward_asset_id\" 0x0000000000000000 \"admin_address\" \"staked_asset_id\" 0x151f7c75 0x068101 \"last_reward_injection_time\" \"flux_tier_required\" \"flux_oracle_app\" base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)"
    },
    "263": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "265": {
      "op": "bz main_after_if_else@18",
      "stack_out": []
    },
    "268": {
      "op": "pushbytess 0xd324bea4 0x94202064 0x32db7a6d 0x4c436726 0x47cfcc04 0x347007eb 0x2487c32c 0xf4eb4a03 0xea4bca57 0xa5ae6bd1 0x813ce89a 0x3172ca9d // method \"createApplication(address)void\", method \"initApplication(uint64,uint64,pay,uint64,application)void\", method \"updateAdminAddress(account)void\", method \"getMBRForPoolCreation()(uint64)\", method \"initStorage(pay)void\", method \"injectRewards(axfer,uint64,uint64)void\", method \"deleteApplication()void\", method \"stake(axfer,uint64)void\", method \"accrueRewards()void\", method \"claimRewards()void\", method \"unstake(uint64)void\", method \"gas()void\"",
      "defined_out": [
        "Method(accrueRewards()void)",
        "Method(claimRewards()void)",
        "Method(createApplication(address)void)",
        "Method(deleteApplication()void)",
        "Method(gas()void)",
        "Method(getMBRForPoolCreation()(uint64))",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(initStorage(pay)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(stake(axfer,uint64)void)",
        "Method(unstake(uint64)void)",
        "Method(updateAdminAddress(account)void)"
      ],
      "stack_out": [
        "Method(createApplication(address)void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(updateAdminAddress(account)void)",
        "Method(getMBRForPoolCreation()(uint64))",
        "Method(initStorage(pay)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(stake(axfer,uint64)void)",
        "Method(accrueRewards()void)",
        "Method(claimRewards()void)",
        "Method(unstake(uint64)void)",
        "Method(gas()void)"
      ]
    },
    "330": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(accrueRewards()void)",
        "Method(claimRewards()void)",
        "Method(createApplication(address)void)",
        "Method(deleteApplication()void)",
        "Method(gas()void)",
        "Method(getMBRForPoolCreation()(uint64))",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(initStorage(pay)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(stake(axfer,uint64)void)",
        "Method(unstake(uint64)void)",
        "Method(updateAdminAddress(account)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(address)void)",
        "Method(initApplication(uint64,uint64,pay,uint64,application)void)",
        "Method(updateAdminAddress(account)void)",
        "Method(getMBRForPoolCreation()(uint64))",
        "Method(initStorage(pay)void)",
        "Method(injectRewards(axfer,uint64,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(stake(axfer,uint64)void)",
        "Method(accrueRewards()void)",
        "Method(claimRewards()void)",
        "Method(unstake(uint64)void)",
        "Method(gas()void)",
        "tmp%2#0"
      ]
    },
    "333": {
      "op": "match main_createApplication_route@3 main_initApplication_route@4 main_updateAdminAddress_route@5 main_getMBRForPoolCreation_route@6 main_initStorage_route@7 main_injectRewards_route@8 main_deleteApplication_route@9 main_stake_route@10 main_accrueRewards_route@11 main_claimRewards_route@12 main_unstake_route@13 main_gas_route@14",
      "stack_out": []
    },
    "359": {
      "block": "main_after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "360": {
      "op": "return",
      "stack_out": []
    },
    "361": {
      "block": "main_gas_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "363": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "364": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "365": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "367": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "368": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "369": {
      "op": "return",
      "stack_out": []
    },
    "370": {
      "block": "main_unstake_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "372": {
      "op": "!",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "373": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "374": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "376": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "377": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "380": {
      "op": "btoi",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "381": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.unstake",
      "op": "callsub unstake",
      "stack_out": []
    },
    "384": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "385": {
      "op": "return",
      "stack_out": []
    },
    "386": {
      "block": "main_claimRewards_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "388": {
      "op": "!",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "389": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "390": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "392": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "393": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.claimRewards",
      "op": "callsub claimRewards"
    },
    "396": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "397": {
      "op": "return",
      "stack_out": []
    },
    "398": {
      "block": "main_accrueRewards_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "400": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "401": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "402": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "404": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "405": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.accrueRewards",
      "op": "callsub accrueRewards"
    },
    "408": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "409": {
      "op": "return",
      "stack_out": []
    },
    "410": {
      "block": "main_stake_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "412": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "413": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "414": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "416": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "417": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "419": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "1"
      ]
    },
    "420": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "421": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "422": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "424": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "426": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "427": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "428": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "431": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%49#0"
      ]
    },
    "432": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.stake",
      "op": "callsub stake",
      "stack_out": []
    },
    "435": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "436": {
      "op": "return",
      "stack_out": []
    },
    "437": {
      "block": "main_deleteApplication_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "439": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "DeleteApplication"
      ]
    },
    "441": {
      "op": "==",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "442": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "443": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "445": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "446": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.deleteApplication",
      "op": "callsub deleteApplication"
    },
    "449": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "450": {
      "op": "return",
      "stack_out": []
    },
    "451": {
      "block": "main_injectRewards_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "453": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "454": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "455": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "457": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "458": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "460": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "1"
      ]
    },
    "461": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "462": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "463": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "465": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "467": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "468": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "469": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "472": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%38#0"
      ]
    },
    "473": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%4#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%38#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "476": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "477": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.injectRewards",
      "op": "callsub injectRewards",
      "stack_out": []
    },
    "480": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "481": {
      "op": "return",
      "stack_out": []
    },
    "482": {
      "block": "main_initStorage_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "484": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "485": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "486": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "488": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "489": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "491": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "1"
      ]
    },
    "492": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "493": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "494": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "496": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "497": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "498": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "499": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initStorage",
      "op": "callsub initStorage",
      "stack_out": []
    },
    "502": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "503": {
      "op": "return",
      "stack_out": []
    },
    "504": {
      "block": "main_getMBRForPoolCreation_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "506": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "507": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "508": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "510": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "511": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.getMBRForPoolCreation",
      "op": "callsub getMBRForPoolCreation",
      "defined_out": [
        "elements_to_encode%0#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0"
      ]
    },
    "514": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "515": {
      "op": "bytec 8 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "517": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "518": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "519": {
      "op": "log",
      "stack_out": []
    },
    "520": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "521": {
      "op": "return",
      "stack_out": []
    },
    "522": {
      "block": "main_updateAdminAddress_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "524": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "525": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "526": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "528": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "529": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "532": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "533": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "535": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.updateAdminAddress",
      "op": "callsub updateAdminAddress",
      "stack_out": []
    },
    "538": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "539": {
      "op": "return",
      "stack_out": []
    },
    "540": {
      "block": "main_initApplication_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "542": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "543": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "544": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "546": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "547": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "550": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "551": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "554": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "555": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "557": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "1"
      ]
    },
    "558": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0"
      ]
    },
    "559": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "560": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "562": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "563": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "564": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0"
      ]
    },
    "565": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "568": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0"
      ]
    },
    "569": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "572": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "573": {
      "op": "txnas Applications",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "575": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initApplication",
      "op": "callsub initApplication",
      "stack_out": []
    },
    "578": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "579": {
      "op": "return",
      "stack_out": []
    },
    "580": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "582": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "583": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "584": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "586": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "587": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "588": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "591": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "594": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "595": {
      "op": "return",
      "stack_out": []
    },
    "596": {
      "subroutine": "_puya_lib.util.ensure_budget",
      "params": {
        "required_budget#0": "uint64",
        "fee_source#0": "uint64"
      },
      "block": "ensure_budget",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "599": {
      "op": "frame_dig -2",
      "defined_out": [
        "required_budget#0 (copy)"
      ],
      "stack_out": [
        "required_budget#0 (copy)"
      ]
    },
    "601": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "required_budget#0 (copy)"
      ],
      "stack_out": [
        "required_budget#0 (copy)",
        "10"
      ]
    },
    "603": {
      "op": "+",
      "defined_out": [
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "604": {
      "block": "ensure_budget_while_top@1",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "required_budget_with_buffer#0"
      ]
    },
    "606": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "required_budget_with_buffer#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "required_budget_with_buffer#0",
        "tmp%0#0"
      ]
    },
    "608": {
      "op": ">",
      "defined_out": [
        "required_budget_with_buffer#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%1#0"
      ]
    },
    "609": {
      "op": "bz ensure_budget_after_while@7",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "612": {
      "op": "itxn_begin"
    },
    "613": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "appl"
      ]
    },
    "615": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "617": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "DeleteApplication"
      ]
    },
    "619": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "621": {
      "op": "bytec 9 // 0x068101",
      "defined_out": [
        "0x068101",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0x068101"
      ]
    },
    "623": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "625": {
      "op": "bytec 9 // 0x068101",
      "stack_out": [
        "required_budget_with_buffer#0",
        "0x068101"
      ]
    },
    "627": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "629": {
      "op": "frame_dig -1",
      "defined_out": [
        "fee_source#0 (copy)",
        "required_budget_with_buffer#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "fee_source#0 (copy)"
      ]
    },
    "631": {
      "op": "switch ensure_budget_switch_case_0@3 ensure_budget_switch_case_1@4",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "637": {
      "block": "ensure_budget_switch_case_next@6",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "itxn_submit"
    },
    "638": {
      "op": "b ensure_budget_while_top@1"
    },
    "641": {
      "block": "ensure_budget_switch_case_1@4",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%2#0"
      ]
    },
    "643": {
      "op": "itxn_field Fee",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "645": {
      "op": "b ensure_budget_switch_case_next@6"
    },
    "648": {
      "block": "ensure_budget_switch_case_0@3",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0"
      ]
    },
    "649": {
      "op": "itxn_field Fee",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "651": {
      "op": "b ensure_budget_switch_case_next@6"
    },
    "654": {
      "block": "ensure_budget_after_while@7",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "655": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.createApplication",
      "params": {
        "adminAddress#0": "bytes"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "658": {
      "op": "bytec 6 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\""
      ],
      "stack_out": [
        "\"admin_address\""
      ]
    },
    "660": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ],
      "stack_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ]
    },
    "662": {
      "op": "app_global_put",
      "stack_out": []
    },
    "663": {
      "op": "pushbytess \"contract_version\" 0x0000000000000bc2 // \"contract_version\", 0x0000000000000bc2",
      "defined_out": [
        "\"contract_version\"",
        "0x0000000000000bc2"
      ],
      "stack_out": [
        "\"contract_version\"",
        "0x0000000000000bc2"
      ]
    },
    "691": {
      "op": "app_global_put",
      "stack_out": []
    },
    "692": {
      "retsub": true,
      "op": "retsub"
    },
    "693": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initApplication",
      "params": {
        "stakedAssetId#0": "uint64",
        "rewardAssetId#0": "uint64",
        "initialBalanceTxn#0": "uint64",
        "fluxTierRequired#0": "uint64",
        "fluxOracleApp#0": "uint64"
      },
      "block": "initApplication",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "696": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "698": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "699": {
      "op": "bytec 6 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "701": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "702": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "703": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "704": {
      "error": "Only admin can init application",
      "op": "assert // Only admin can init application",
      "stack_out": []
    },
    "705": {
      "op": "frame_dig -5",
      "defined_out": [
        "stakedAssetId#0 (copy)"
      ],
      "stack_out": [
        "stakedAssetId#0 (copy)"
      ]
    },
    "707": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "708": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"staked_asset_id\""
      ]
    },
    "710": {
      "op": "swap",
      "stack_out": [
        "\"staked_asset_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "711": {
      "op": "app_global_put",
      "stack_out": []
    },
    "712": {
      "op": "frame_dig -4",
      "defined_out": [
        "rewardAssetId#0 (copy)"
      ],
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "714": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "715": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "\"reward_asset_id\""
      ]
    },
    "717": {
      "op": "swap",
      "stack_out": [
        "\"reward_asset_id\"",
        "val_as_bytes%1#0"
      ]
    },
    "718": {
      "op": "app_global_put",
      "stack_out": []
    },
    "719": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\""
      ],
      "stack_out": [
        "\"total_staked\""
      ]
    },
    "720": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "\"total_staked\"",
        "0x0000000000000000"
      ],
      "stack_out": [
        "\"total_staked\"",
        "0x0000000000000000"
      ]
    },
    "722": {
      "op": "app_global_put",
      "stack_out": []
    },
    "723": {
      "op": "bytec 10 // \"last_reward_injection_time\"",
      "defined_out": [
        "\"last_reward_injection_time\""
      ],
      "stack_out": [
        "\"last_reward_injection_time\""
      ]
    },
    "725": {
      "op": "bytec 5 // 0x0000000000000000",
      "stack_out": [
        "\"last_reward_injection_time\"",
        "0x0000000000000000"
      ]
    },
    "727": {
      "op": "app_global_put",
      "stack_out": []
    },
    "728": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "defined_out": [
        "\"injected_asa_rewards\""
      ],
      "stack_out": [
        "\"injected_asa_rewards\""
      ]
    },
    "729": {
      "op": "bytec 5 // 0x0000000000000000",
      "stack_out": [
        "\"injected_asa_rewards\"",
        "0x0000000000000000"
      ]
    },
    "731": {
      "op": "app_global_put",
      "stack_out": []
    },
    "732": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\""
      ],
      "stack_out": [
        "\"num_stakers\""
      ]
    },
    "733": {
      "op": "bytec 5 // 0x0000000000000000",
      "stack_out": [
        "\"num_stakers\"",
        "0x0000000000000000"
      ]
    },
    "735": {
      "op": "app_global_put",
      "stack_out": []
    },
    "736": {
      "op": "frame_dig -2",
      "defined_out": [
        "fluxTierRequired#0 (copy)"
      ],
      "stack_out": [
        "fluxTierRequired#0 (copy)"
      ]
    },
    "738": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "739": {
      "op": "dup",
      "defined_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%2#0 (copy)"
      ]
    },
    "740": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "bitlen%0#0"
      ]
    },
    "741": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "743": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "no_overflow%0#0"
      ]
    },
    "744": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "745": {
      "op": "extract 7 1",
      "defined_out": [
        "uint8%0#0"
      ],
      "stack_out": [
        "uint8%0#0"
      ]
    },
    "748": {
      "op": "bytec 11 // \"flux_tier_required\"",
      "defined_out": [
        "\"flux_tier_required\"",
        "uint8%0#0"
      ],
      "stack_out": [
        "uint8%0#0",
        "\"flux_tier_required\""
      ]
    },
    "750": {
      "op": "swap",
      "stack_out": [
        "\"flux_tier_required\"",
        "uint8%0#0"
      ]
    },
    "751": {
      "op": "app_global_put",
      "stack_out": []
    },
    "752": {
      "op": "bytec 12 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\""
      ],
      "stack_out": [
        "\"flux_oracle_app\""
      ]
    },
    "754": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"flux_oracle_app\"",
        "fluxOracleApp#0 (copy)"
      ],
      "stack_out": [
        "\"flux_oracle_app\"",
        "fluxOracleApp#0 (copy)"
      ]
    },
    "756": {
      "op": "app_global_put",
      "stack_out": []
    },
    "757": {
      "op": "frame_dig -3",
      "defined_out": [
        "initialBalanceTxn#0 (copy)"
      ],
      "stack_out": [
        "initialBalanceTxn#0 (copy)"
      ]
    },
    "759": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "761": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "763": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "764": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "767": {
      "op": "frame_dig -3",
      "stack_out": [
        "initialBalanceTxn#0 (copy)"
      ]
    },
    "769": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "771": {
      "op": "pushint 10000000 // 10000000",
      "defined_out": [
        "10000000",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "10000000"
      ]
    },
    "776": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "777": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "780": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "781": {
      "block": "initApplication_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "782": {
      "op": "itxn_begin"
    },
    "783": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "785": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "786": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "788": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "790": {
      "op": "frame_dig -5",
      "defined_out": [
        "stakedAssetId#0 (copy)"
      ],
      "stack_out": [
        "stakedAssetId#0 (copy)"
      ]
    },
    "792": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "794": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "796": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "798": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "800": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "802": {
      "op": "itxn_submit"
    },
    "803": {
      "op": "frame_dig -4",
      "defined_out": [
        "rewardAssetId#0 (copy)"
      ],
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "805": {
      "op": "frame_dig -5",
      "stack_out": [
        "rewardAssetId#0 (copy)",
        "stakedAssetId#0 (copy)"
      ]
    },
    "807": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "808": {
      "op": "bz initApplication_after_if_else@8",
      "stack_out": []
    },
    "811": {
      "op": "itxn_begin"
    },
    "812": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "814": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "815": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "817": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "819": {
      "op": "frame_dig -4",
      "stack_out": [
        "rewardAssetId#0 (copy)"
      ]
    },
    "821": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "823": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "4"
      ]
    },
    "825": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "827": {
      "op": "intc 5 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "829": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "831": {
      "op": "itxn_submit"
    },
    "832": {
      "block": "initApplication_after_if_else@8",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "833": {
      "block": "initApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "834": {
      "op": "b initApplication_bool_merge@4"
    },
    "837": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.updateAdminAddress",
      "params": {
        "adminAddress#0": "bytes"
      },
      "block": "updateAdminAddress",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "840": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "842": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "843": {
      "op": "bytec 6 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "845": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "846": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "847": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "848": {
      "error": "Only admin can update admin address",
      "op": "assert // Only admin can update admin address",
      "stack_out": []
    },
    "849": {
      "op": "bytec 6 // \"admin_address\"",
      "stack_out": [
        "\"admin_address\""
      ]
    },
    "851": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ],
      "stack_out": [
        "\"admin_address\"",
        "adminAddress#0 (copy)"
      ]
    },
    "853": {
      "op": "app_global_put",
      "stack_out": []
    },
    "854": {
      "retsub": true,
      "op": "retsub"
    },
    "855": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.getMBRForPoolCreation",
      "params": {},
      "block": "getMBRForPoolCreation",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "858": {
      "op": "intc_0 // 0"
    },
    "859": {
      "op": "dup"
    },
    "860": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "nonAlgoRewardMBR#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "862": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "nonAlgoRewardMBR#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "863": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "maybe_value%0#0"
      ]
    },
    "864": {
      "op": "btoi",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "tmp%0#0"
      ]
    },
    "865": {
      "op": "bz getMBRForPoolCreation_after_if_else@2",
      "stack_out": [
        "nonAlgoRewardMBR#0"
      ]
    },
    "868": {
      "op": "intc 7 // 100000",
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "870": {
      "op": "frame_bury 0",
      "stack_out": [
        "nonAlgoRewardMBR#0"
      ]
    },
    "872": {
      "block": "getMBRForPoolCreation_after_if_else@2",
      "stack_in": [
        "nonAlgoRewardMBR#0"
      ],
      "op": "intc 7 // 100000",
      "defined_out": [
        "100000"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "100000"
      ]
    },
    "874": {
      "op": "frame_dig 0",
      "defined_out": [
        "100000",
        "nonAlgoRewardMBR#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "100000",
        "nonAlgoRewardMBR#0"
      ]
    },
    "876": {
      "op": "+",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "tmp%2#0"
      ]
    },
    "877": {
      "op": "intc 8 // 9605300",
      "defined_out": [
        "9605300",
        "nonAlgoRewardMBR#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "tmp%2#0",
        "9605300"
      ]
    },
    "879": {
      "op": "+",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "tmp%4#0"
      ]
    },
    "880": {
      "op": "intc 9 // 53300",
      "defined_out": [
        "53300",
        "nonAlgoRewardMBR#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "tmp%4#0",
        "53300"
      ]
    },
    "882": {
      "op": "+",
      "defined_out": [
        "mbr#0",
        "nonAlgoRewardMBR#0"
      ],
      "stack_out": [
        "nonAlgoRewardMBR#0",
        "mbr#0"
      ]
    },
    "883": {
      "op": "swap"
    },
    "884": {
      "retsub": true,
      "op": "retsub"
    },
    "885": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.initStorage",
      "params": {
        "mbrPayment#0": "uint64"
      },
      "block": "initStorage",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "888": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "poolMBR#0"
      ]
    },
    "890": {
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "poolMBR#0",
        "\"stakers\""
      ]
    },
    "891": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "892": {
      "op": "bury 1",
      "stack_out": [
        "poolMBR#0",
        "maybe_exists%0#0"
      ]
    },
    "894": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "tmp%0#0"
      ]
    },
    "895": {
      "error": "staking pool already initialized",
      "op": "assert // staking pool already initialized",
      "stack_out": [
        "poolMBR#0"
      ]
    },
    "896": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "tmp%1#0"
      ]
    },
    "898": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "tmp%1#0",
        "0"
      ]
    },
    "899": {
      "op": "bytec 6 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "tmp%1#0",
        "0",
        "\"admin_address\""
      ]
    },
    "901": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "902": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "poolMBR#0",
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "903": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "tmp%2#0"
      ]
    },
    "904": {
      "error": "Only admin can init storage",
      "op": "assert // Only admin can init storage",
      "stack_out": [
        "poolMBR#0"
      ]
    },
    "905": {
      "op": "intc_0 // 0"
    },
    "906": {
      "op": "dup"
    },
    "907": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "nonAlgoRewardMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "909": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "nonAlgoRewardMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "910": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "maybe_value%2#0"
      ]
    },
    "911": {
      "op": "btoi",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%3#0"
      ]
    },
    "912": {
      "op": "bz initStorage_after_if_else@2",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "915": {
      "op": "intc 7 // 100000",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "917": {
      "op": "frame_bury 1",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "919": {
      "block": "initStorage_after_if_else@2",
      "stack_in": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ],
      "op": "intc 7 // 100000",
      "defined_out": [
        "100000"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "100000"
      ]
    },
    "921": {
      "op": "frame_dig 1",
      "defined_out": [
        "100000",
        "nonAlgoRewardMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "100000",
        "nonAlgoRewardMBR#0"
      ]
    },
    "923": {
      "op": "+",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%5#0"
      ]
    },
    "924": {
      "op": "intc 8 // 9605300",
      "defined_out": [
        "9605300",
        "nonAlgoRewardMBR#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%5#0",
        "9605300"
      ]
    },
    "926": {
      "op": "+",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%7#0"
      ]
    },
    "927": {
      "op": "intc 9 // 53300",
      "defined_out": [
        "53300",
        "nonAlgoRewardMBR#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%7#0",
        "53300"
      ]
    },
    "929": {
      "op": "+",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "poolMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "poolMBR#0"
      ]
    },
    "930": {
      "op": "frame_bury 0",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "poolMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "932": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrPayment#0 (copy)",
        "nonAlgoRewardMBR#0",
        "poolMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "mbrPayment#0 (copy)"
      ]
    },
    "934": {
      "op": "gtxns Receiver",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "poolMBR#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%9#0"
      ]
    },
    "936": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "poolMBR#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "938": {
      "op": "==",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "poolMBR#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%11#0"
      ]
    },
    "939": {
      "op": "bz initStorage_bool_false@5",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "942": {
      "op": "frame_dig -1",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "mbrPayment#0 (copy)"
      ]
    },
    "944": {
      "op": "gtxns Amount",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "poolMBR#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%12#0"
      ]
    },
    "946": {
      "op": "frame_dig 0",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%12#0",
        "poolMBR#0"
      ]
    },
    "948": {
      "op": "==",
      "defined_out": [
        "nonAlgoRewardMBR#0",
        "poolMBR#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "tmp%13#0"
      ]
    },
    "949": {
      "op": "bz initStorage_bool_false@5",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "952": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "nonAlgoRewardMBR#0",
        "poolMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "and_result%0#0"
      ]
    },
    "953": {
      "block": "initStorage_bool_merge@6",
      "stack_in": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "954": {
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "\"stakers\""
      ]
    },
    "955": {
      "op": "pushint 31200 // 31200",
      "defined_out": [
        "\"stakers\"",
        "31200"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "\"stakers\"",
        "31200"
      ]
    },
    "959": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "{box_create}"
      ]
    },
    "960": {
      "op": "pop",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "961": {
      "op": "frame_dig 0",
      "defined_out": [
        "poolMBR#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "poolMBR#0"
      ]
    },
    "963": {
      "op": "itob",
      "defined_out": [
        "poolMBR#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "val_as_bytes%0#0"
      ]
    },
    "964": {
      "op": "pushbytes \"minimum_balance\"",
      "defined_out": [
        "\"minimum_balance\"",
        "poolMBR#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "val_as_bytes%0#0",
        "\"minimum_balance\""
      ]
    },
    "981": {
      "op": "swap",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "\"minimum_balance\"",
        "val_as_bytes%0#0"
      ]
    },
    "982": {
      "op": "app_global_put",
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ]
    },
    "983": {
      "retsub": true,
      "op": "retsub"
    },
    "984": {
      "block": "initStorage_bool_false@5",
      "stack_in": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "poolMBR#0",
        "nonAlgoRewardMBR#0",
        "and_result%0#0"
      ]
    },
    "985": {
      "op": "b initStorage_bool_merge@6"
    },
    "988": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.injectRewards",
      "params": {
        "rewardTxn#0": "uint64",
        "quantity#0": "uint64",
        "rewardAssetId#0": "uint64"
      },
      "block": "injectRewards",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "991": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "993": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "994": {
      "op": "bytec 6 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "996": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "997": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "998": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "999": {
      "error": "Only admin can inject rewards",
      "op": "assert // Only admin can inject rewards",
      "stack_out": []
    },
    "1000": {
      "op": "frame_dig -3",
      "defined_out": [
        "rewardTxn#0 (copy)"
      ],
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "1002": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1004": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1005": {
      "op": "bytec 6 // \"admin_address\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_address\""
      ]
    },
    "1007": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1008": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1009": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1010": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "1013": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "1015": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1017": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1019": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1020": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "1023": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "1025": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1027": {
      "op": "frame_dig -1",
      "defined_out": [
        "rewardAssetId#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "rewardAssetId#0 (copy)"
      ]
    },
    "1029": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1030": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "1033": {
      "op": "frame_dig -3",
      "stack_out": [
        "rewardTxn#0 (copy)"
      ]
    },
    "1035": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1037": {
      "op": "frame_dig -2",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "quantity#0 (copy)"
      ]
    },
    "1039": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1040": {
      "op": "bz injectRewards_bool_false@5",
      "stack_out": []
    },
    "1043": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1044": {
      "block": "injectRewards_bool_merge@6",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1045": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1046": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "defined_out": [
        "\"injected_asa_rewards\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"injected_asa_rewards\""
      ]
    },
    "1047": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1048": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1049": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1050": {
      "op": "frame_dig -2",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "quantity#0 (copy)"
      ]
    },
    "1052": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1053": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1054": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "\"injected_asa_rewards\""
      ]
    },
    "1055": {
      "op": "swap",
      "stack_out": [
        "\"injected_asa_rewards\"",
        "val_as_bytes%0#0"
      ]
    },
    "1056": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1057": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "1059": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "1060": {
      "op": "bytec 10 // \"last_reward_injection_time\"",
      "defined_out": [
        "\"last_reward_injection_time\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "\"last_reward_injection_time\""
      ]
    },
    "1062": {
      "op": "swap",
      "stack_out": [
        "\"last_reward_injection_time\"",
        "val_as_bytes%1#0"
      ]
    },
    "1063": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1064": {
      "retsub": true,
      "op": "retsub"
    },
    "1065": {
      "block": "injectRewards_bool_false@5",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1066": {
      "op": "b injectRewards_bool_merge@6"
    },
    "1069": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.deleteApplication",
      "params": {},
      "block": "deleteApplication",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1071": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1072": {
      "op": "bytec 6 // \"admin_address\"",
      "defined_out": [
        "\"admin_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_address\""
      ]
    },
    "1074": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1075": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1076": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1077": {
      "error": "Only admin can delete application",
      "op": "assert // Only admin can delete application",
      "stack_out": []
    },
    "1078": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1079": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_staked\""
      ]
    },
    "1080": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1081": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1082": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1083": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1084": {
      "error": "Staked assets still exist",
      "op": "assert // Staked assets still exist",
      "stack_out": []
    },
    "1085": {
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "\"stakers\""
      ]
    },
    "1086": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1087": {
      "op": "pop",
      "stack_out": []
    },
    "1088": {
      "op": "itxn_begin"
    },
    "1089": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1090": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1092": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1093": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1094": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1095": {
      "op": "global ZeroAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "1097": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1099": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "1101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "0"
      ]
    },
    "1102": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "1104": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1106": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "1108": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1110": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1112": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "1114": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1116": {
      "op": "itxn_submit"
    },
    "1117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1118": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "stack_out": [
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1121": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "0"
      ]
    },
    "1123": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1125": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1126": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "1127": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1128": {
      "op": "bz deleteApplication_after_if_else@4",
      "stack_out": []
    },
    "1131": {
      "op": "itxn_begin"
    },
    "1132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1133": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "stack_out": [
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1135": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1136": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%5#0"
      ]
    },
    "1137": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1138": {
      "op": "global ZeroAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "1140": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1142": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "1144": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0",
        "0"
      ]
    },
    "1145": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "1147": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "1149": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "1151": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "4"
      ]
    },
    "1153": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1155": {
      "op": "intc 5 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "1157": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1159": {
      "op": "itxn_submit"
    },
    "1160": {
      "block": "deleteApplication_after_if_else@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1161": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.stake",
      "params": {
        "stakeTxn#0": "uint64",
        "quantity#0": "uint64"
      },
      "block": "stake",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0"
      ]
    },
    "1165": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "staker#0",
        "actionComplete#0"
      ]
    },
    "1167": {
      "op": "dupn 5",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1169": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "quantity#0 (copy)"
      ]
    },
    "1171": {
      "error": "Invalid quantity",
      "op": "assert // Invalid quantity",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1172": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0"
      ]
    },
    "1173": {
      "op": "bytec 12 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\"",
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0",
        "\"flux_oracle_app\""
      ]
    },
    "1175": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "maybe_exists%0#0"
      ]
    },
    "1176": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0"
      ]
    },
    "1177": {
      "op": "dup",
      "defined_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1178": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "address#0",
        "check%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "address#0",
        "check%0#0"
      ]
    },
    "1180": {
      "op": "bury 1",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "check%0#0"
      ]
    },
    "1182": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0"
      ]
    },
    "1183": {
      "op": "itxn_begin"
    },
    "1184": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1186": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%1#0"
      ]
    },
    "1188": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1189": {
      "op": "pushbytes 0xd4d7aa5c // method \"getUserTier(address)uint64\"",
      "defined_out": [
        "Method(getUserTier(address)uint64)",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%1#0",
        "tmp%2#0",
        "Method(getUserTier(address)uint64)"
      ]
    },
    "1195": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1197": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%1#0"
      ]
    },
    "1199": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1201": {
      "op": "dig 1",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "oracle#0 (copy)"
      ]
    },
    "1203": {
      "op": "itxn_field Applications",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1205": {
      "op": "itxn_field Sender",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "oracle#0"
      ]
    },
    "1207": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1209": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "appl"
      ]
    },
    "1211": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1213": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "1000"
      ]
    },
    "1215": {
      "op": "itxn_field Fee",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1217": {
      "op": "itxn_submit"
    },
    "1218": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "awst_tmp%0#0"
      ]
    },
    "1220": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1221": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "1224": {
      "op": "swap",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "1225": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "result#0",
        "tmp%4#0"
      ]
    },
    "1228": {
      "op": "bytec 8 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "result#0",
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "1230": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "result#0",
        "tmp%5#0"
      ]
    },
    "1231": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "result#0"
      ]
    },
    "1232": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%6#0"
      ]
    },
    "1233": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%6#0",
        "0"
      ]
    },
    "1234": {
      "op": "bytec 11 // \"flux_tier_required\"",
      "defined_out": [
        "\"flux_tier_required\"",
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%6#0",
        "0",
        "\"flux_tier_required\""
      ]
    },
    "1236": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%6#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1237": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%6#0",
        "maybe_value%1#0"
      ]
    },
    "1238": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1239": {
      "op": ">=",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%8#0"
      ]
    },
    "1240": {
      "error": "Insufficient flux tier",
      "op": "assert // Insufficient flux tier",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1241": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%9#0"
      ]
    },
    "1243": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "tmp%9#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%9#0",
        "300"
      ]
    },
    "1244": {
      "op": "<",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%10#0"
      ]
    },
    "1245": {
      "op": "bz stake_after_if_else@3",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1248": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%11#0"
      ]
    },
    "1250": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "tmp%11#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%11#0",
        "700"
      ]
    },
    "1252": {
      "op": "+",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%12#0"
      ]
    },
    "1253": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%12#0",
        "0"
      ]
    },
    "1254": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1257": {
      "block": "stake_after_if_else@3",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "stakeTxn#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "1259": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%13#0"
      ]
    },
    "1261": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1263": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%15#0"
      ]
    },
    "1264": {
      "op": "bz stake_bool_false@8",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1267": {
      "op": "frame_dig -2",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "1269": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%16#0"
      ]
    },
    "1271": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1273": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%18#0"
      ]
    },
    "1274": {
      "op": "bz stake_bool_false@8",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1277": {
      "op": "frame_dig -2",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "1279": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%19#0"
      ]
    },
    "1281": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%19#0",
        "0"
      ]
    },
    "1282": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%19#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1284": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%19#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1285": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%19#0",
        "maybe_value%2#0"
      ]
    },
    "1286": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1287": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%21#0"
      ]
    },
    "1288": {
      "op": "bz stake_bool_false@8",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1291": {
      "op": "frame_dig -2",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "1293": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%22#0"
      ]
    },
    "1295": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "tmp%22#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%22#0",
        "quantity#0 (copy)"
      ]
    },
    "1297": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%23#0"
      ]
    },
    "1298": {
      "op": "bz stake_bool_false@8",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1301": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "and_result%0#0"
      ]
    },
    "1302": {
      "block": "stake_bool_merge@9",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1303": {
      "op": "intc_0 // 0",
      "defined_out": [
        "actionComplete#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "actionComplete#0"
      ]
    },
    "1304": {
      "op": "frame_bury 1",
      "defined_out": [
        "actionComplete#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1306": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "actionComplete#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%24#0"
      ]
    },
    "1308": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "actionComplete#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%24#0",
        "300"
      ]
    },
    "1309": {
      "op": "<",
      "defined_out": [
        "actionComplete#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%25#0"
      ]
    },
    "1310": {
      "op": "bz stake_after_if_else@11",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1313": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "actionComplete#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%26#0"
      ]
    },
    "1315": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "actionComplete#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%26#0",
        "700"
      ]
    },
    "1317": {
      "op": "+",
      "defined_out": [
        "actionComplete#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%27#0"
      ]
    },
    "1318": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%27#0",
        "0"
      ]
    },
    "1319": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1322": {
      "block": "stake_after_if_else@11",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "i#0"
      ]
    },
    "1323": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1325": {
      "block": "stake_while_top@12",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"stakers\""
      ]
    },
    "1326": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1327": {
      "op": "bury 1",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_exists%3#0"
      ]
    },
    "1329": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1330": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "i#0"
      ]
    },
    "1332": {
      "op": "intc 6 // 650",
      "defined_out": [
        "650",
        "i#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "i#0",
        "650"
      ]
    },
    "1334": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%28#0"
      ]
    },
    "1335": {
      "op": "dup",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%28#0",
        "tmp%28#0"
      ]
    },
    "1336": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%28#0"
      ]
    },
    "1338": {
      "op": "bz stake_block@35",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1341": {
      "op": "frame_dig 1",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "actionComplete#0"
      ]
    },
    "1343": {
      "op": "bnz stake_block@35",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1346": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"stakers\""
      ]
    },
    "1347": {
      "op": "box_get",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1348": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0"
      ]
    },
    "1349": {
      "op": "frame_dig 2",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0",
        "i#0"
      ]
    },
    "1351": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "actionComplete#0",
        "i#0",
        "maybe_value%4#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0",
        "i#0",
        "48"
      ]
    },
    "1352": {
      "op": "*",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "maybe_value%4#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0",
        "item_offset%0#0"
      ]
    },
    "1353": {
      "op": "dup",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0",
        "item_offset%0#0",
        "item_offset%0#0"
      ]
    },
    "1354": {
      "op": "frame_bury 3",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "maybe_value%4#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0",
        "item_offset%0#0"
      ]
    },
    "1356": {
      "op": "intc_2 // 48",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%4#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "1357": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%29#0"
      ]
    },
    "1358": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%30#0"
      ]
    },
    "1361": {
      "op": "txn Sender",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "1363": {
      "op": "==",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%32#0"
      ]
    },
    "1364": {
      "op": "bz stake_else_body@21",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1367": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%33#0"
      ]
    },
    "1369": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%33#0",
        "300"
      ]
    },
    "1370": {
      "op": "<",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%34#0"
      ]
    },
    "1371": {
      "op": "bz stake_after_if_else@18",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1374": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%35#0"
      ]
    },
    "1376": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%35#0",
        "700"
      ]
    },
    "1378": {
      "op": "+",
      "defined_out": [
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%36#0"
      ]
    },
    "1379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%36#0",
        "0"
      ]
    },
    "1380": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1383": {
      "block": "stake_after_if_else@18",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"stakers\""
      ]
    },
    "1384": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1385": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%5#0"
      ]
    },
    "1386": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%5#0",
        "item_offset%0#0"
      ]
    },
    "1388": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "item_offset%0#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%5#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "1389": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0"
      ]
    },
    "1390": {
      "op": "dup",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "1391": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "item_offset%0#0",
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "staker#0 (copy)",
        "32"
      ]
    },
    "1393": {
      "op": "extract_uint64",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "tmp%39#0"
      ]
    },
    "1394": {
      "op": "frame_dig -2",
      "defined_out": [
        "item_offset%0#0",
        "stakeTxn#0 (copy)",
        "staker#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "tmp%39#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "1396": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1398": {
      "op": "dup",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%40#0"
      ]
    },
    "1399": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1401": {
      "op": "+",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "to_encode%0#0"
      ]
    },
    "1402": {
      "op": "itob",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0",
        "val_as_bytes%0#0"
      ]
    },
    "1403": {
      "op": "replace2 32",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "staker#0"
      ]
    },
    "1405": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1407": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%41#0"
      ]
    },
    "1409": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%41#0",
        "300"
      ]
    },
    "1410": {
      "op": "<",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%42#0"
      ]
    },
    "1411": {
      "op": "bz stake_after_if_else@20",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1414": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%43#0"
      ]
    },
    "1416": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%43#0",
        "700"
      ]
    },
    "1418": {
      "op": "+",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%40#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%44#0"
      ]
    },
    "1419": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%44#0",
        "0"
      ]
    },
    "1420": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1423": {
      "block": "stake_after_if_else@20",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"stakers\""
      ]
    },
    "1424": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1425": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%6#0"
      ]
    },
    "1426": {
      "op": "frame_dig 4",
      "defined_out": [
        "maybe_value%6#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%6#0",
        "tmp%28#0"
      ]
    },
    "1428": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%6#0"
      ]
    },
    "1429": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%6#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%6#0",
        "item_offset%0#0"
      ]
    },
    "1431": {
      "op": "frame_dig 0",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%6#0",
        "staker#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%6#0",
        "item_offset%0#0",
        "staker#0"
      ]
    },
    "1433": {
      "op": "replace3",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0",
        "updated_target%0#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "updated_target%0#0"
      ]
    },
    "1434": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "updated_target%0#0",
        "\"stakers\""
      ]
    },
    "1435": {
      "op": "swap",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"stakers\"",
        "updated_target%0#0"
      ]
    },
    "1436": {
      "op": "box_put",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1437": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0"
      ]
    },
    "1438": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1439": {
      "op": "app_global_get_ex",
      "defined_out": [
        "item_offset%0#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "staker#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1440": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%7#0"
      ]
    },
    "1441": {
      "op": "btoi",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%45#0"
      ]
    },
    "1442": {
      "op": "frame_dig 5",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%45#0",
        "tmp%40#0"
      ]
    },
    "1444": {
      "op": "+",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0",
        "tmp%40#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "to_encode%1#0"
      ]
    },
    "1445": {
      "op": "itob",
      "defined_out": [
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0",
        "tmp%40#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "val_as_bytes%1#0"
      ]
    },
    "1446": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "val_as_bytes%1#0",
        "\"total_staked\""
      ]
    },
    "1447": {
      "op": "swap",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"total_staked\"",
        "val_as_bytes%1#0"
      ]
    },
    "1448": {
      "op": "app_global_put",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1449": {
      "op": "intc_1 // 1",
      "defined_out": [
        "actionComplete#0",
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "actionComplete#0"
      ]
    },
    "1450": {
      "op": "frame_bury 1",
      "defined_out": [
        "actionComplete#0",
        "item_offset%0#0",
        "staker#0",
        "tmp%28#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1452": {
      "block": "stake_after_if_else@31",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%69#0"
      ]
    },
    "1454": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "tmp%69#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%69#0",
        "300"
      ]
    },
    "1455": {
      "op": "<",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%70#0"
      ]
    },
    "1456": {
      "op": "bz stake_after_if_else@33",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1459": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%71#0"
      ]
    },
    "1461": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "tmp%71#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%71#0",
        "700"
      ]
    },
    "1463": {
      "op": "+",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%72#0"
      ]
    },
    "1464": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%72#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%72#0",
        "0"
      ]
    },
    "1465": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1468": {
      "block": "stake_after_if_else@33",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "i#0"
      ]
    },
    "1470": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "i#0",
        "1"
      ]
    },
    "1471": {
      "op": "+",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "i#0"
      ]
    },
    "1472": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1474": {
      "op": "b stake_while_top@12"
    },
    "1477": {
      "block": "stake_else_body@21",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"stakers\""
      ]
    },
    "1478": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1479": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%8#0"
      ]
    },
    "1480": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%8#0",
        "item_offset%0#0"
      ]
    },
    "1482": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "item_offset%0#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%8#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "1483": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%47#0"
      ]
    },
    "1484": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%48#0"
      ]
    },
    "1487": {
      "op": "global ZeroAddress",
      "defined_out": [
        "item_offset%0#0",
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "1489": {
      "op": "==",
      "defined_out": [
        "item_offset%0#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%50#0"
      ]
    },
    "1490": {
      "op": "bz stake_else_body@29",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1493": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "item_offset%0#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%51#0"
      ]
    },
    "1495": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "item_offset%0#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%51#0",
        "300"
      ]
    },
    "1496": {
      "op": "<",
      "defined_out": [
        "item_offset%0#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%52#0"
      ]
    },
    "1497": {
      "op": "bz stake_after_if_else@24",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1500": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "item_offset%0#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%53#0"
      ]
    },
    "1502": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "item_offset%0#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%53#0",
        "700"
      ]
    },
    "1504": {
      "op": "+",
      "defined_out": [
        "item_offset%0#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%54#0"
      ]
    },
    "1505": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item_offset%0#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%54#0",
        "0"
      ]
    },
    "1506": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1509": {
      "block": "stake_after_if_else@24",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0"
      ]
    },
    "1510": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1511": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1512": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%9#0"
      ]
    },
    "1513": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%55#0"
      ]
    },
    "1514": {
      "op": "frame_dig -2",
      "defined_out": [
        "stakeTxn#0 (copy)",
        "tmp%55#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%55#0",
        "stakeTxn#0 (copy)"
      ]
    },
    "1516": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "1518": {
      "op": "dup",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%56#0"
      ]
    },
    "1519": {
      "op": "frame_bury 6",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "1521": {
      "op": "+",
      "defined_out": [
        "tmp%56#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "to_encode%2#0"
      ]
    },
    "1522": {
      "op": "itob",
      "defined_out": [
        "tmp%56#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "val_as_bytes%2#0"
      ]
    },
    "1523": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "val_as_bytes%2#0",
        "\"total_staked\""
      ]
    },
    "1524": {
      "op": "swap",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"total_staked\"",
        "val_as_bytes%2#0"
      ]
    },
    "1525": {
      "op": "app_global_put",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1526": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%56#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%57#0"
      ]
    },
    "1528": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "tmp%56#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%57#0",
        "300"
      ]
    },
    "1529": {
      "op": "<",
      "defined_out": [
        "tmp%56#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%58#0"
      ]
    },
    "1530": {
      "op": "bz stake_after_if_else@26",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1533": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%56#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%59#0"
      ]
    },
    "1535": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "tmp%56#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%59#0",
        "700"
      ]
    },
    "1537": {
      "op": "+",
      "defined_out": [
        "tmp%56#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%60#0"
      ]
    },
    "1538": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%60#0",
        "0"
      ]
    },
    "1539": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1542": {
      "block": "stake_after_if_else@26",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%61#0"
      ]
    },
    "1544": {
      "op": "frame_dig 6",
      "defined_out": [
        "tmp%56#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%61#0",
        "tmp%56#0"
      ]
    },
    "1546": {
      "op": "itob",
      "defined_out": [
        "tmp%56#0",
        "tmp%61#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%61#0",
        "val_as_bytes%3#0"
      ]
    },
    "1547": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1548": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%2#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "1550": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1551": {
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\"",
        "encoded_tuple_buffer%3#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%3#0",
        "\"stakers\""
      ]
    },
    "1552": {
      "op": "box_get",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "1553": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%10#0"
      ]
    },
    "1554": {
      "op": "frame_dig 4",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%10#0",
        "tmp%28#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%10#0",
        "tmp%28#0"
      ]
    },
    "1556": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%10#0"
      ]
    },
    "1557": {
      "op": "frame_dig 3",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "item_offset%0#0",
        "maybe_value%10#0",
        "tmp%28#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%10#0",
        "item_offset%0#0"
      ]
    },
    "1559": {
      "op": "uncover 2",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%10#0",
        "item_offset%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1561": {
      "op": "replace3",
      "defined_out": [
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "updated_target%1#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "updated_target%1#0"
      ]
    },
    "1562": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "updated_target%1#0",
        "\"stakers\""
      ]
    },
    "1563": {
      "op": "swap",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"stakers\"",
        "updated_target%1#0"
      ]
    },
    "1564": {
      "op": "box_put",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1565": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%62#0"
      ]
    },
    "1567": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%62#0",
        "300"
      ]
    },
    "1568": {
      "op": "<",
      "defined_out": [
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%63#0"
      ]
    },
    "1569": {
      "op": "bz stake_after_if_else@28",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1572": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%64#0"
      ]
    },
    "1574": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%64#0",
        "700"
      ]
    },
    "1576": {
      "op": "+",
      "defined_out": [
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%65#0"
      ]
    },
    "1577": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%56#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%65#0",
        "0"
      ]
    },
    "1578": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1581": {
      "block": "stake_after_if_else@28",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0"
      ]
    },
    "1582": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1583": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%11#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "1584": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%11#0"
      ]
    },
    "1585": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%66#0"
      ]
    },
    "1586": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%66#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%66#0",
        "1"
      ]
    },
    "1587": {
      "op": "+",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "to_encode%4#0"
      ]
    },
    "1588": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "val_as_bytes%4#0"
      ]
    },
    "1589": {
      "op": "bytec_1 // \"num_stakers\"",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "val_as_bytes%4#0",
        "\"num_stakers\""
      ]
    },
    "1590": {
      "op": "swap",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "\"num_stakers\"",
        "val_as_bytes%4#0"
      ]
    },
    "1591": {
      "op": "app_global_put",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1592": {
      "op": "intc_1 // 1",
      "defined_out": [
        "actionComplete#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "actionComplete#0"
      ]
    },
    "1593": {
      "op": "frame_bury 1",
      "defined_out": [
        "actionComplete#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1595": {
      "op": "b stake_after_if_else@31"
    },
    "1598": {
      "block": "stake_else_body@29",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0"
      ]
    },
    "1599": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1600": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%12#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "1601": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "maybe_value%12#0"
      ]
    },
    "1602": {
      "op": "btoi",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%67#0"
      ]
    },
    "1603": {
      "op": "pushint 500 // 500",
      "defined_out": [
        "500",
        "tmp%67#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%67#0",
        "500"
      ]
    },
    "1606": {
      "op": "<",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "tmp%68#0"
      ]
    },
    "1607": {
      "error": "Max stakers limit reached",
      "op": "assert // Max stakers limit reached",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1608": {
      "op": "b stake_after_if_else@31"
    },
    "1611": {
      "block": "stake_block@35",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "actionComplete#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "actionComplete#0"
      ]
    },
    "1613": {
      "error": "Stake  failed",
      "op": "assert // Stake  failed",
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ]
    },
    "1614": {
      "retsub": true,
      "op": "retsub"
    },
    "1615": {
      "block": "stake_bool_false@8",
      "stack_in": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "staker#0",
        "actionComplete#0",
        "i#0",
        "item_offset%0#0",
        "tmp%28#0",
        "tmp%40#0",
        "tmp%56#0",
        "and_result%0#0"
      ]
    },
    "1616": {
      "op": "b stake_bool_merge@9"
    },
    "1619": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.accrueRewards",
      "params": {},
      "block": "accrueRewards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1622": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0"
      ]
    },
    "1623": {
      "op": "dup",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0"
      ]
    },
    "1624": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0"
      ]
    },
    "1626": {
      "op": "dupn 6",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1628": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0"
      ]
    },
    "1629": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "defined_out": [
        "\"injected_asa_rewards\"",
        "0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0",
        "\"injected_asa_rewards\""
      ]
    },
    "1630": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1631": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%0#0"
      ]
    },
    "1632": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%0#0"
      ]
    },
    "1633": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%0#0",
        "2"
      ]
    },
    "1635": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%1#0"
      ]
    },
    "1636": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%1#0",
        "0"
      ]
    },
    "1637": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%1#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1638": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1639": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1640": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1641": {
      "op": ">",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%3#0"
      ]
    },
    "1642": {
      "op": "bz accrueRewards_after_if_else@24",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1645": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0"
      ]
    },
    "1646": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0",
        "\"injected_asa_rewards\""
      ]
    },
    "1647": {
      "op": "app_global_get_ex",
      "defined_out": [
        "additionalASARewards#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "additionalASARewards#0",
        "maybe_exists%2#0"
      ]
    },
    "1648": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_exists%2#0",
        "additionalASARewards#0"
      ]
    },
    "1649": {
      "op": "frame_bury 0",
      "defined_out": [
        "additionalASARewards#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_exists%2#0"
      ]
    },
    "1651": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1652": {
      "op": "intc_0 // 0",
      "defined_out": [
        "additionalASARewards#0",
        "i#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "i#0"
      ]
    },
    "1653": {
      "op": "frame_bury 4",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1655": {
      "block": "accrueRewards_while_top@2",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0"
      ]
    },
    "1656": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1657": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1658": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%3#0"
      ]
    },
    "1659": {
      "op": "btoi",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%4#0"
      ]
    },
    "1660": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1662": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%5#0"
      ]
    },
    "1663": {
      "op": "bz accrueRewards_after_while@23",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1666": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%6#0"
      ]
    },
    "1668": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%6#0",
        "300"
      ]
    },
    "1669": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%7#0"
      ]
    },
    "1670": {
      "op": "bz accrueRewards_after_if_else@5",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1673": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%8#0"
      ]
    },
    "1675": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%8#0",
        "700"
      ]
    },
    "1677": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%9#0"
      ]
    },
    "1678": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%9#0",
        "0"
      ]
    },
    "1679": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1682": {
      "block": "accrueRewards_after_if_else@5",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"stakers\""
      ]
    },
    "1683": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1684": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0"
      ]
    },
    "1685": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0",
        "i#0"
      ]
    },
    "1687": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "i#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0",
        "i#0",
        "48"
      ]
    },
    "1688": {
      "op": "*",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0",
        "item_offset%0#0"
      ]
    },
    "1689": {
      "op": "dup",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0",
        "item_offset%0#0",
        "item_offset%0#0"
      ]
    },
    "1690": {
      "op": "frame_bury 5",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0",
        "item_offset%0#0"
      ]
    },
    "1692": {
      "op": "intc_2 // 48",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%4#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "1693": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%10#0"
      ]
    },
    "1694": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "i#0",
        "item_offset%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%10#0",
        "32"
      ]
    },
    "1696": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%12#0"
      ]
    },
    "1697": {
      "op": "bz accrueRewards_after_if_else@22",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1700": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"stakers\""
      ]
    },
    "1701": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1702": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%5#0"
      ]
    },
    "1703": {
      "op": "frame_dig 5",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%5#0",
        "item_offset%0#0"
      ]
    },
    "1705": {
      "op": "intc_2 // 48",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%5#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "1706": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0"
      ]
    },
    "1707": {
      "op": "dup",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "staker#0"
      ]
    },
    "1708": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0"
      ]
    },
    "1710": {
      "op": "pushint 32 // 32",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "32"
      ]
    },
    "1712": {
      "op": "extract_uint64",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1"
      ]
    },
    "1713": {
      "op": "dup",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "a#1"
      ]
    },
    "1714": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1"
      ]
    },
    "1716": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "0"
      ]
    },
    "1717": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "0",
        "\"total_staked\""
      ]
    },
    "1718": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1719": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "maybe_value%6#0"
      ]
    },
    "1720": {
      "op": "btoi",
      "defined_out": [
        "a#1",
        "c#1",
        "i#0",
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "c#1"
      ]
    },
    "1721": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "c#1",
        "a#1"
      ]
    },
    "1722": {
      "op": "intc 10 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "a#1",
        "c#1",
        "i#0",
        "item_offset%0#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "c#1",
        "a#1",
        "1000000000000000"
      ]
    },
    "1724": {
      "op": "mulw",
      "defined_out": [
        "a#1",
        "c#1",
        "hi#0",
        "i#0",
        "item_offset%0#0",
        "lo#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "c#1",
        "hi#0",
        "lo#0"
      ]
    },
    "1725": {
      "op": "uncover 2",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "hi#0",
        "lo#0",
        "c#1"
      ]
    },
    "1727": {
      "op": "divw",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "stakerShare#0"
      ]
    },
    "1728": {
      "op": "frame_bury 8",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1730": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%18#0"
      ]
    },
    "1732": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%18#0",
        "300"
      ]
    },
    "1733": {
      "op": "<",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%19#0"
      ]
    },
    "1734": {
      "op": "bz accrueRewards_after_if_else@8",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1737": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%20#0"
      ]
    },
    "1739": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%20#0",
        "700"
      ]
    },
    "1741": {
      "op": "+",
      "defined_out": [
        "a#1",
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "stakerShare#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%21#0"
      ]
    },
    "1742": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%21#0",
        "0"
      ]
    },
    "1743": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1746": {
      "block": "accrueRewards_after_if_else@8",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "additionalASARewards#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "additionalASARewards#0"
      ]
    },
    "1748": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "additionalASARewards#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#0"
      ]
    },
    "1749": {
      "op": "dup",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#0",
        "a#0"
      ]
    },
    "1750": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "additionalASARewards#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#0"
      ]
    },
    "1752": {
      "op": "bz accrueRewards_after_if_else@22",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1755": {
      "op": "frame_dig 2",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#0"
      ]
    },
    "1757": {
      "op": "frame_dig 8",
      "defined_out": [
        "a#0",
        "additionalASARewards#0",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#0",
        "stakerShare#0"
      ]
    },
    "1759": {
      "op": "mulw",
      "defined_out": [
        "a#0",
        "additionalASARewards#0",
        "hi#0",
        "lo#0",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1760": {
      "op": "intc 10 // 1000000000000000",
      "defined_out": [
        "1000000000000000",
        "a#0",
        "additionalASARewards#0",
        "hi#0",
        "lo#0",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "hi#0",
        "lo#0",
        "1000000000000000"
      ]
    },
    "1762": {
      "op": "divw",
      "defined_out": [
        "a#0",
        "additionalASARewards#0",
        "rewardRate#0",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0"
      ]
    },
    "1763": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "additionalASARewards#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "rewardRate#5"
      ]
    },
    "1764": {
      "op": "frame_bury 7",
      "defined_out": [
        "a#0",
        "additionalASARewards#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0"
      ]
    },
    "1766": {
      "op": "bnz accrueRewards_after_if_else@11",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1769": {
      "op": "intc_1 // 1",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#5"
      ]
    },
    "1770": {
      "op": "frame_bury 7",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1772": {
      "block": "accrueRewards_after_if_else@11",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0"
      ]
    },
    "1774": {
      "op": "dup",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "rewardRate#0"
      ]
    },
    "1775": {
      "op": "frame_bury 6",
      "defined_out": [
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0"
      ]
    },
    "1777": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "0"
      ]
    },
    "1778": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "defined_out": [
        "\"injected_asa_rewards\"",
        "0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "0",
        "\"injected_asa_rewards\""
      ]
    },
    "1779": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1780": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "maybe_value%7#0"
      ]
    },
    "1781": {
      "op": "btoi",
      "defined_out": [
        "rewardRate#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%26#0"
      ]
    },
    "1782": {
      "op": "<=",
      "defined_out": [
        "rewardRate#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%27#0"
      ]
    },
    "1783": {
      "op": "bz accrueRewards_else_body@16",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1786": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0"
      ]
    },
    "1787": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0",
        "\"injected_asa_rewards\""
      ]
    },
    "1788": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1789": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%8#0"
      ]
    },
    "1790": {
      "op": "btoi",
      "defined_out": [
        "rewardRate#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%28#0"
      ]
    },
    "1791": {
      "op": "frame_dig 6",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%28#0",
        "rewardRate#0"
      ]
    },
    "1793": {
      "op": "-",
      "defined_out": [
        "rewardRate#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "to_encode%0#0"
      ]
    },
    "1794": {
      "op": "itob",
      "defined_out": [
        "rewardRate#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%0#0"
      ]
    },
    "1795": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%0#0",
        "\"injected_asa_rewards\""
      ]
    },
    "1796": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"injected_asa_rewards\"",
        "val_as_bytes%0#0"
      ]
    },
    "1797": {
      "op": "app_global_put",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1798": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0"
      ]
    },
    "1799": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1801": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1802": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%9#0"
      ]
    },
    "1803": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%9#0",
        "0"
      ]
    },
    "1804": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "maybe_value%9#0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%9#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1806": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "maybe_value%9#0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%9#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "1807": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%9#0",
        "maybe_value%10#0"
      ]
    },
    "1808": {
      "op": "==",
      "defined_out": [
        "rewardRate#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%29#0"
      ]
    },
    "1809": {
      "op": "bz accrueRewards_else_body@14",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1812": {
      "op": "frame_dig 3",
      "defined_out": [
        "a#1",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1"
      ]
    },
    "1814": {
      "op": "frame_dig 6",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "rewardRate#0"
      ]
    },
    "1816": {
      "op": "dup",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "rewardRate#0 (copy)"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "a#1",
        "rewardRate#0 (copy)",
        "rewardRate#0 (copy)"
      ]
    },
    "1817": {
      "op": "cover 2",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "a#1",
        "rewardRate#0 (copy)"
      ]
    },
    "1819": {
      "op": "+",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "to_encode%1#0"
      ]
    },
    "1820": {
      "op": "itob",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "val_as_bytes%1#0"
      ]
    },
    "1821": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "val_as_bytes%1#0",
        "staker#0"
      ]
    },
    "1823": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%1#0"
      ]
    },
    "1824": {
      "op": "replace2 32",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "staker#0"
      ]
    },
    "1826": {
      "op": "frame_bury 1",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0"
      ]
    },
    "1828": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "0"
      ]
    },
    "1829": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "a#1",
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1830": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#1",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "1831": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "maybe_value%11#0"
      ]
    },
    "1832": {
      "op": "btoi",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%32#0"
      ]
    },
    "1833": {
      "op": "+",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "to_encode%2#0"
      ]
    },
    "1834": {
      "op": "itob",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%2#0"
      ]
    },
    "1835": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%2#0",
        "\"total_staked\""
      ]
    },
    "1836": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"total_staked\"",
        "val_as_bytes%2#0"
      ]
    },
    "1837": {
      "op": "app_global_put",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1838": {
      "block": "accrueRewards_after_if_else@20",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"stakers\""
      ]
    },
    "1839": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%17#0",
        "maybe_value%17#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "1840": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0"
      ]
    },
    "1841": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "maybe_value%17#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0",
        "i#0"
      ]
    },
    "1843": {
      "op": "intc 6 // 650",
      "defined_out": [
        "650",
        "i#0",
        "maybe_value%17#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0",
        "i#0",
        "650"
      ]
    },
    "1845": {
      "op": "<",
      "defined_out": [
        "i#0",
        "index_is_in_bounds%0#0",
        "maybe_value%17#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "1846": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0"
      ]
    },
    "1847": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%17#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0",
        "item_offset%0#0"
      ]
    },
    "1849": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%17#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%17#0",
        "item_offset%0#0",
        "staker#0"
      ]
    },
    "1851": {
      "op": "replace3",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "staker#0",
        "updated_target%0#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "updated_target%0#0"
      ]
    },
    "1852": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "updated_target%0#0",
        "\"stakers\""
      ]
    },
    "1853": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"stakers\"",
        "updated_target%0#0"
      ]
    },
    "1854": {
      "op": "box_put",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1855": {
      "block": "accrueRewards_after_if_else@22",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "i#0"
      ]
    },
    "1857": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "i#0",
        "1"
      ]
    },
    "1858": {
      "op": "+",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "i#0"
      ]
    },
    "1859": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1861": {
      "op": "b accrueRewards_while_top@2"
    },
    "1864": {
      "block": "accrueRewards_else_body@14",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0"
      ]
    },
    "1866": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "1867": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "staker#0 (copy)",
        "40"
      ]
    },
    "1869": {
      "op": "extract_uint64",
      "defined_out": [
        "staker#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "tmp%34#0"
      ]
    },
    "1870": {
      "op": "frame_dig 6",
      "defined_out": [
        "rewardRate#0",
        "staker#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "tmp%34#0",
        "rewardRate#0"
      ]
    },
    "1872": {
      "op": "+",
      "defined_out": [
        "rewardRate#0",
        "staker#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "to_encode%3#0"
      ]
    },
    "1873": {
      "op": "itob",
      "defined_out": [
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "val_as_bytes%3#0"
      ]
    },
    "1874": {
      "op": "replace2 40",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0"
      ]
    },
    "1876": {
      "op": "frame_bury 1",
      "defined_out": [
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1878": {
      "op": "b accrueRewards_after_if_else@20"
    },
    "1881": {
      "block": "accrueRewards_else_body@16",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0"
      ]
    },
    "1882": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "1884": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%12#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "1885": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%12#0"
      ]
    },
    "1886": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%12#0",
        "0"
      ]
    },
    "1887": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "maybe_value%12#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%12#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "1889": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%13#0",
        "maybe_value%12#0",
        "maybe_value%13#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%12#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "1890": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%12#0",
        "maybe_value%13#0"
      ]
    },
    "1891": {
      "op": "==",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%35#0"
      ]
    },
    "1892": {
      "op": "bz accrueRewards_else_body@18",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1895": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0"
      ]
    },
    "1896": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "defined_out": [
        "\"injected_asa_rewards\"",
        "0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "0",
        "\"injected_asa_rewards\""
      ]
    },
    "1897": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%14#0",
        "maybe_value%14#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "1898": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "maybe_value%14#0"
      ]
    },
    "1899": {
      "op": "btoi",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%36#0"
      ]
    },
    "1900": {
      "op": "frame_dig 6",
      "defined_out": [
        "rewardRate#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%36#0",
        "rewardRate#0"
      ]
    },
    "1902": {
      "op": "dup"
    },
    "1903": {
      "op": "uncover 2",
      "defined_out": [
        "rewardRate#0",
        "rewardRate#0 (copy)",
        "tmp%36#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "rewardRate#0 (copy)",
        "tmp%36#0"
      ]
    },
    "1905": {
      "op": "-",
      "defined_out": [
        "diff#0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "diff#0"
      ]
    },
    "1906": {
      "op": "frame_dig 3",
      "defined_out": [
        "a#1",
        "diff#0",
        "rewardRate#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "diff#0",
        "a#1"
      ]
    },
    "1908": {
      "op": "+",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "to_encode%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "to_encode%4#0"
      ]
    },
    "1909": {
      "op": "itob",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "val_as_bytes%4#0"
      ]
    },
    "1910": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "val_as_bytes%4#0",
        "staker#0"
      ]
    },
    "1912": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%4#0"
      ]
    },
    "1913": {
      "op": "replace2 32",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "staker#0"
      ]
    },
    "1915": {
      "op": "frame_bury 1",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0"
      ]
    },
    "1917": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "0"
      ]
    },
    "1918": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "a#1",
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "0",
        "\"total_staked\""
      ]
    },
    "1919": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#1",
        "maybe_exists%15#0",
        "maybe_value%15#0",
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "1920": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "maybe_value%15#0"
      ]
    },
    "1921": {
      "op": "btoi",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%39#0"
      ]
    },
    "1922": {
      "op": "intc_0 // 0",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%39#0",
        "0"
      ]
    },
    "1923": {
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%39#0",
        "0",
        "\"injected_asa_rewards\""
      ]
    },
    "1924": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#1",
        "maybe_exists%16#0",
        "maybe_value%16#0",
        "rewardRate#0",
        "staker#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%39#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "1925": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%39#0",
        "maybe_value%16#0"
      ]
    },
    "1926": {
      "op": "btoi",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "rewardRate#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1927": {
      "op": "uncover 2",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%39#0",
        "tmp%40#0",
        "rewardRate#0"
      ]
    },
    "1929": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%39#0",
        "rewardRate#0",
        "tmp%40#0"
      ]
    },
    "1930": {
      "op": "-",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "tmp%39#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "tmp%39#0",
        "tmp%41#0"
      ]
    },
    "1931": {
      "op": "+",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "to_encode%5#0"
      ]
    },
    "1932": {
      "op": "itob",
      "defined_out": [
        "a#1",
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%5#0"
      ]
    },
    "1933": {
      "op": "bytec_2 // \"total_staked\"",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%5#0",
        "\"total_staked\""
      ]
    },
    "1934": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"total_staked\"",
        "val_as_bytes%5#0"
      ]
    },
    "1935": {
      "op": "app_global_put",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1936": {
      "block": "accrueRewards_after_if_else@19",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "bytec_3 // \"injected_asa_rewards\"",
      "defined_out": [
        "\"injected_asa_rewards\""
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"injected_asa_rewards\""
      ]
    },
    "1937": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "\"injected_asa_rewards\"",
        "0x0000000000000000"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"injected_asa_rewards\"",
        "0x0000000000000000"
      ]
    },
    "1939": {
      "op": "app_global_put",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1940": {
      "op": "b accrueRewards_after_if_else@20"
    },
    "1943": {
      "block": "accrueRewards_else_body@18",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0"
      ]
    },
    "1945": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "1946": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "staker#0 (copy)",
        "40"
      ]
    },
    "1948": {
      "op": "extract_uint64",
      "defined_out": [
        "staker#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "tmp%43#0"
      ]
    },
    "1949": {
      "op": "frame_dig 6",
      "defined_out": [
        "rewardRate#0",
        "staker#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "tmp%43#0",
        "rewardRate#0"
      ]
    },
    "1951": {
      "op": "+",
      "defined_out": [
        "rewardRate#0",
        "staker#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "to_encode%6#0"
      ]
    },
    "1952": {
      "op": "itob",
      "defined_out": [
        "rewardRate#0",
        "staker#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0",
        "val_as_bytes%6#0"
      ]
    },
    "1953": {
      "op": "replace2 40",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "staker#0"
      ]
    },
    "1955": {
      "op": "frame_bury 1",
      "defined_out": [
        "rewardRate#0",
        "staker#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1957": {
      "op": "b accrueRewards_after_if_else@19"
    },
    "1960": {
      "block": "accrueRewards_after_while@23",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%7#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "to_encode%7#0"
      ]
    },
    "1962": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%7#0"
      ]
    },
    "1963": {
      "op": "pushbytes \"last_accrual_time\"",
      "defined_out": [
        "\"last_accrual_time\"",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "val_as_bytes%7#0",
        "\"last_accrual_time\""
      ]
    },
    "1982": {
      "op": "swap",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0",
        "\"last_accrual_time\"",
        "val_as_bytes%7#0"
      ]
    },
    "1983": {
      "op": "app_global_put",
      "stack_out": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ]
    },
    "1984": {
      "block": "accrueRewards_after_if_else@24",
      "stack_in": [
        "additionalASARewards#0",
        "staker#0",
        "a#0",
        "a#1",
        "i#0",
        "item_offset%0#0",
        "rewardRate#0",
        "rewardRate#5",
        "stakerShare#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1985": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.getStaker",
      "params": {
        "address#0": "bytes"
      },
      "block": "getStaker",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1988": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "item_offset%0#0"
      ]
    },
    "1990": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "1991": {
      "block": "getStaker_while_top@1",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "0"
      ]
    },
    "1992": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "1993": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1994": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "1995": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1996": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1998": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1999": {
      "op": "bz getStaker_after_while@7",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2002": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2004": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%2#0",
        "300"
      ]
    },
    "2005": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2006": {
      "op": "bz getStaker_after_if_else@4",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2009": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2011": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%4#0",
        "700"
      ]
    },
    "2013": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2014": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%5#0",
        "0"
      ]
    },
    "2015": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2018": {
      "block": "getStaker_after_if_else@4",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2019": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2020": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "2021": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "i#0"
      ]
    },
    "2023": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "i#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "i#0",
        "48"
      ]
    },
    "2024": {
      "op": "*",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0"
      ]
    },
    "2025": {
      "op": "dup",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0",
        "item_offset%0#0"
      ]
    },
    "2026": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0"
      ]
    },
    "2028": {
      "op": "intc_2 // 48",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "2029": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2030": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "2033": {
      "op": "frame_dig -1",
      "defined_out": [
        "address#0 (copy)",
        "i#0",
        "item_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%7#0",
        "address#0 (copy)"
      ]
    },
    "2035": {
      "op": "==",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "2036": {
      "op": "bz getStaker_after_if_else@6",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2039": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2040": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2041": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0"
      ]
    },
    "2042": {
      "op": "frame_dig 0",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "item_offset%0#0"
      ]
    },
    "2044": {
      "op": "intc_2 // 48",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "2045": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2046": {
      "op": "frame_bury 0"
    },
    "2048": {
      "retsub": true,
      "op": "retsub"
    },
    "2049": {
      "block": "getStaker_after_if_else@6",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "i#0"
      ]
    },
    "2051": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2052": {
      "op": "+",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "i#0"
      ]
    },
    "2053": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2055": {
      "op": "b getStaker_while_top@1"
    },
    "2058": {
      "block": "getStaker_after_while@7",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "bytec 13 // base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "2060": {
      "op": "frame_bury 0"
    },
    "2062": {
      "retsub": true,
      "op": "retsub"
    },
    "2063": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.claimRewards",
      "params": {},
      "block": "claimRewards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2066": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2068": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.getStaker",
      "op": "callsub getStaker",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "staker#0"
      ]
    },
    "2071": {
      "op": "dupn 2",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "2073": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "staker#0",
        "staker#0 (copy)",
        "40"
      ]
    },
    "2075": {
      "op": "extract_uint64",
      "defined_out": [
        "staker#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "staker#0",
        "tmp%2#0"
      ]
    },
    "2076": {
      "op": "dup"
    },
    "2077": {
      "op": "uncover 2",
      "defined_out": [
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2079": {
      "op": "swap",
      "defined_out": [
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%2#0"
      ]
    },
    "2080": {
      "op": "bz claimRewards_after_if_else@3",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2083": {
      "op": "itxn_begin"
    },
    "2084": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "0"
      ]
    },
    "2085": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "2087": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2088": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "maybe_value%0#0"
      ]
    },
    "2089": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2090": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2092": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2094": {
      "op": "frame_dig 1",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%2#0"
      ]
    },
    "2096": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2098": {
      "op": "itxn_field Sender",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2100": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2102": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2104": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "4"
      ]
    },
    "2106": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2108": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "1000"
      ]
    },
    "2110": {
      "op": "itxn_field Fee",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2112": {
      "op": "itxn_submit"
    },
    "2113": {
      "op": "frame_dig 0",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#0"
      ]
    },
    "2115": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "staker#0",
        "staker#7",
        "tmp%2#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#0",
        "0x0000000000000000"
      ]
    },
    "2117": {
      "op": "replace2 40",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#7"
      ]
    },
    "2119": {
      "op": "frame_bury 2",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2121": {
      "block": "claimRewards_after_if_else@3",
      "stack_in": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#0"
      ]
    },
    "2123": {
      "op": "frame_bury 0",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2125": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "staker#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%5#0"
      ]
    },
    "2127": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "staker#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%5#0",
        "300"
      ]
    },
    "2128": {
      "op": "<",
      "defined_out": [
        "staker#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%6#0"
      ]
    },
    "2129": {
      "op": "bz claimRewards_after_if_else@5",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2132": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%7#0"
      ]
    },
    "2134": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%7#0",
        "700"
      ]
    },
    "2136": {
      "op": "+",
      "defined_out": [
        "staker#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%8#0"
      ]
    },
    "2137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%8#0",
        "0"
      ]
    },
    "2138": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2141": {
      "block": "claimRewards_after_if_else@5",
      "stack_in": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#0"
      ]
    },
    "2143": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "2144": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "staker#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#0",
        "tmp%9#0"
      ]
    },
    "2147": {
      "op": "swap",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "tmp%9#0",
        "staker#0"
      ]
    },
    "2148": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.setStaker",
      "op": "callsub setStaker",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7",
        "staker#0"
      ]
    },
    "2151": {
      "op": "pop",
      "stack_out": [
        "staker#0",
        "tmp%2#0",
        "staker#7"
      ]
    },
    "2152": {
      "retsub": true,
      "op": "retsub"
    },
    "2153": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.unstake",
      "params": {
        "quantity#0": "uint64"
      },
      "block": "unstake",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2156": {
      "op": "intc_0 // 0",
      "stack_out": [
        "address#0"
      ]
    },
    "2157": {
      "op": "dupn 6",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16"
      ]
    },
    "2159": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14"
      ]
    },
    "2161": {
      "op": "dupn 5",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0"
      ]
    },
    "2163": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2164": {
      "block": "unstake_while_top@1",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2165": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "2166": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2167": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "2168": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "2169": {
      "op": "frame_dig 13",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "2171": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2172": {
      "op": "bz unstake_after_while@33",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2175": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2177": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%2#0",
        "300"
      ]
    },
    "2178": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2179": {
      "op": "bz unstake_after_if_else@4",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2182": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2184": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%4#0",
        "700"
      ]
    },
    "2186": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2187": {
      "op": "intc_0 // 0",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%5#0",
        "0"
      ]
    },
    "2188": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2191": {
      "block": "unstake_after_if_else@4",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2192": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2193": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "2194": {
      "op": "frame_dig 13",
      "defined_out": [
        "i#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "i#0"
      ]
    },
    "2196": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "i#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "i#0",
        "48"
      ]
    },
    "2197": {
      "op": "*",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0"
      ]
    },
    "2198": {
      "op": "intc_2 // 48",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "2199": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2200": {
      "op": "dup",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "staker#0"
      ]
    },
    "2201": {
      "op": "frame_bury 5",
      "defined_out": [
        "i#0",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2203": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "staker#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "2206": {
      "op": "txn Sender",
      "defined_out": [
        "i#0",
        "staker#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2208": {
      "op": "==",
      "defined_out": [
        "i#0",
        "staker#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2209": {
      "op": "bz unstake_after_if_else@32",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2212": {
      "op": "frame_dig 5",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2214": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "i#0",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "32"
      ]
    },
    "2216": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "staker#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "2217": {
      "op": "dup",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2218": {
      "op": "frame_bury 10",
      "defined_out": [
        "i#0",
        "staker#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "2220": {
      "op": "bz unstake_after_if_else@18",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2223": {
      "op": "frame_dig 10",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "2225": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "quantity#0 (copy)",
        "staker#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%11#0",
        "quantity#0 (copy)"
      ]
    },
    "2227": {
      "op": ">=",
      "defined_out": [
        "i#0",
        "staker#0",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "2228": {
      "op": "assert",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2229": {
      "op": "intc_0 // 0",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2230": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0",
        "i#0",
        "staker#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "2232": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "staker#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2233": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%2#0"
      ]
    },
    "2234": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "staker#0",
        "tmp%11#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%16#0"
      ]
    },
    "2235": {
      "op": "bnz unstake_else_body@12",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2238": {
      "op": "itxn_begin"
    },
    "2239": {
      "op": "frame_dig -1",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "quantity#0 (copy)"
      ]
    },
    "2241": {
      "op": "bnz unstake_ternary_false@9",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2244": {
      "op": "frame_dig 10",
      "defined_out": [
        "i#0",
        "staker#0",
        "ternary_result%0#2",
        "tmp%11#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%0#2"
      ]
    },
    "2246": {
      "block": "unstake_ternary_merge@10",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%0#2"
      ],
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%0#2",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "2248": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%0#2",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2250": {
      "op": "itxn_field Sender",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%0#2",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "2252": {
      "op": "itxn_field Receiver",
      "defined_out": [
        "ternary_result%0#2"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%0#2"
      ]
    },
    "2254": {
      "op": "itxn_field Amount",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2256": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "1"
      ]
    },
    "2257": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2259": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2260": {
      "op": "itxn_field Fee",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2262": {
      "op": "itxn_submit"
    },
    "2263": {
      "block": "unstake_after_if_else@18",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2265": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "2266": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "staker#0 (copy)",
        "40"
      ]
    },
    "2268": {
      "op": "extract_uint64",
      "defined_out": [
        "staker#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "tmp%23#0"
      ]
    },
    "2269": {
      "op": "dup",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "tmp%23#0",
        "tmp%23#0"
      ]
    },
    "2270": {
      "op": "frame_bury 11",
      "defined_out": [
        "staker#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "tmp%23#0"
      ]
    },
    "2272": {
      "op": "swap",
      "defined_out": [
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%23#0",
        "staker#16"
      ]
    },
    "2273": {
      "op": "frame_bury 6",
      "defined_out": [
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%23#0"
      ]
    },
    "2275": {
      "op": "bz unstake_after_if_else@21",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2278": {
      "op": "itxn_begin"
    },
    "2279": {
      "op": "intc_0 // 0",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2280": {
      "op": "bytec 4 // \"reward_asset_id\"",
      "defined_out": [
        "\"reward_asset_id\"",
        "0",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"reward_asset_id\""
      ]
    },
    "2282": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2283": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%4#0"
      ]
    },
    "2284": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "2285": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2287": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ]
    },
    "2289": {
      "op": "frame_dig 11",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "tmp%23#0"
      ]
    },
    "2291": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ]
    },
    "2293": {
      "op": "itxn_field Sender",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2295": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "2297": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2299": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "4"
      ]
    },
    "2301": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2303": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "1000"
      ]
    },
    "2305": {
      "op": "itxn_field Fee",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2307": {
      "op": "itxn_submit"
    },
    "2308": {
      "op": "frame_dig 5",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2310": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "staker#0",
        "staker#16",
        "tmp%23#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "0x0000000000000000"
      ]
    },
    "2312": {
      "op": "replace2 40",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#16"
      ]
    },
    "2314": {
      "op": "frame_bury 6",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2316": {
      "block": "unstake_after_if_else@21",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2318": {
      "op": "frame_bury 5",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2320": {
      "op": "intc_0 // 0",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2321": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "0",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"total_staked\""
      ]
    },
    "2322": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2323": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%5#0"
      ]
    },
    "2324": {
      "op": "btoi",
      "defined_out": [
        "staker#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%26#0"
      ]
    },
    "2325": {
      "op": "frame_bury 12",
      "defined_out": [
        "staker#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2327": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "staker#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "quantity#0 (copy)"
      ]
    },
    "2329": {
      "op": "bnz unstake_ternary_false@23",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2332": {
      "op": "frame_dig 5",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2334": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "staker#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "32"
      ]
    },
    "2336": {
      "op": "extract_uint64",
      "defined_out": [
        "staker#0",
        "ternary_result%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%2#0"
      ]
    },
    "2337": {
      "block": "unstake_ternary_merge@24",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%2#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%2#0",
        "tmp%26#0"
      ]
    },
    "2339": {
      "op": "swap",
      "defined_out": [
        "ternary_result%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%26#0",
        "ternary_result%2#0"
      ]
    },
    "2340": {
      "op": "-",
      "defined_out": [
        "tmp%26#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "to_encode%0#0"
      ]
    },
    "2341": {
      "op": "itob",
      "defined_out": [
        "tmp%26#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "2342": {
      "op": "bytec_2 // \"total_staked\"",
      "defined_out": [
        "\"total_staked\"",
        "tmp%26#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "val_as_bytes%0#0",
        "\"total_staked\""
      ]
    },
    "2343": {
      "op": "swap",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "\"total_staked\"",
        "val_as_bytes%0#0"
      ]
    },
    "2344": {
      "op": "app_global_put",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2345": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%26#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%29#0"
      ]
    },
    "2347": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "tmp%26#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%29#0",
        "300"
      ]
    },
    "2348": {
      "op": "<",
      "defined_out": [
        "tmp%26#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%30#0"
      ]
    },
    "2349": {
      "op": "bz unstake_after_if_else@26",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2352": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%31#0"
      ]
    },
    "2354": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%31#0",
        "700"
      ]
    },
    "2356": {
      "op": "+",
      "defined_out": [
        "tmp%26#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%32#0"
      ]
    },
    "2357": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%32#0",
        "0"
      ]
    },
    "2358": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2361": {
      "block": "unstake_after_if_else@26",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "quantity#0 (copy)"
      ]
    },
    "2363": {
      "op": "bnz unstake_else_body@30",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2366": {
      "op": "frame_dig 5",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2368": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "staker#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%35#0"
      ]
    },
    "2371": {
      "op": "bytec 13 // base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "staker#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%35#0",
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "2373": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.setStaker",
      "op": "callsub setStaker",
      "defined_out": [
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "removedStaker#1"
      ]
    },
    "2376": {
      "op": "frame_bury 4",
      "defined_out": [
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2378": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2379": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "2380": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2381": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%6#0"
      ]
    },
    "2382": {
      "op": "btoi",
      "defined_out": [
        "removedStaker#1",
        "staker#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%36#0"
      ]
    },
    "2383": {
      "op": "intc_1 // 1",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%36#0",
        "1"
      ]
    },
    "2384": {
      "op": "-",
      "defined_out": [
        "removedStaker#1",
        "staker#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%37#0"
      ]
    },
    "2385": {
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\"",
        "removedStaker#1",
        "staker#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%37#0",
        "\"stakers\""
      ]
    },
    "2386": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "removedStaker#1",
        "staker#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%37#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2387": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%37#0",
        "maybe_value%7#0"
      ]
    },
    "2388": {
      "op": "swap",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%7#0",
        "tmp%37#0"
      ]
    },
    "2389": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "maybe_value%7#0",
        "removedStaker#1",
        "staker#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%7#0",
        "tmp%37#0",
        "48"
      ]
    },
    "2390": {
      "op": "*",
      "defined_out": [
        "item_offset%1#0",
        "maybe_value%7#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%7#0",
        "item_offset%1#0"
      ]
    },
    "2391": {
      "op": "intc_2 // 48",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%7#0",
        "item_offset%1#0",
        "48"
      ]
    },
    "2392": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "removedStaker#1",
        "staker#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%38#0"
      ]
    },
    "2393": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "removedStaker#1",
        "staker#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%39#0"
      ]
    },
    "2396": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.getStaker",
      "op": "callsub getStaker",
      "defined_out": [
        "lastStaker#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "lastStaker#0"
      ]
    },
    "2399": {
      "op": "frame_bury 3",
      "defined_out": [
        "lastStaker#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2401": {
      "op": "intc_0 // 0",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2402": {
      "op": "bytec_1 // \"num_stakers\"",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "2403": {
      "op": "app_global_get_ex",
      "defined_out": [
        "lastStaker#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2404": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%8#0"
      ]
    },
    "2405": {
      "op": "btoi",
      "defined_out": [
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%40#0"
      ]
    },
    "2406": {
      "op": "intc_1 // 1",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%40#0",
        "1"
      ]
    },
    "2407": {
      "op": "-",
      "defined_out": [
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%41#0"
      ]
    },
    "2408": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%41#0",
        "\"stakers\""
      ]
    },
    "2409": {
      "op": "box_get",
      "defined_out": [
        "lastStaker#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "removedStaker#1",
        "staker#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%41#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2410": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%41#0",
        "maybe_value%9#0"
      ]
    },
    "2411": {
      "op": "swap",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%9#0",
        "tmp%41#0"
      ]
    },
    "2412": {
      "op": "intc_2 // 48",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%9#0",
        "tmp%41#0",
        "48"
      ]
    },
    "2413": {
      "op": "*",
      "defined_out": [
        "item_offset%2#0",
        "lastStaker#0",
        "maybe_value%9#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%9#0",
        "item_offset%2#0"
      ]
    },
    "2414": {
      "op": "intc_2 // 48",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%9#0",
        "item_offset%2#0",
        "48"
      ]
    },
    "2415": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%42#0"
      ]
    },
    "2416": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "address#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "address#0"
      ]
    },
    "2419": {
      "op": "frame_bury 0",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2421": {
      "op": "intc_0 // 0",
      "defined_out": [
        "address#0",
        "i#14",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "i#14"
      ]
    },
    "2422": {
      "op": "frame_bury 7",
      "defined_out": [
        "address#0",
        "i#14",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2424": {
      "block": "unstake_while_top@35",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2425": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "2426": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2427": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "2428": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "2429": {
      "op": "frame_dig 7",
      "defined_out": [
        "i#14",
        "tmp%0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%0#0",
        "i#14"
      ]
    },
    "2431": {
      "op": ">",
      "defined_out": [
        "i#14",
        "tmp%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2432": {
      "op": "bz unstake_after_while@39",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2435": {
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\"",
        "i#14"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2436": {
      "op": "box_get",
      "defined_out": [
        "i#14",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2437": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "2438": {
      "op": "frame_dig 7",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "i#14"
      ]
    },
    "2440": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "i#14",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "i#14",
        "48"
      ]
    },
    "2441": {
      "op": "*",
      "defined_out": [
        "i#14",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0"
      ]
    },
    "2442": {
      "op": "intc_2 // 48",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "2443": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#14",
        "tmp%2#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%2#1"
      ]
    },
    "2444": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "i#14",
        "tmp%3#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%3#1"
      ]
    },
    "2447": {
      "op": "frame_dig 0",
      "defined_out": [
        "address#0",
        "i#14",
        "tmp%3#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%3#1",
        "address#0"
      ]
    },
    "2449": {
      "op": "==",
      "defined_out": [
        "address#0",
        "i#14",
        "tmp%4#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%4#1"
      ]
    },
    "2450": {
      "op": "bz unstake_after_if_else@38",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2453": {
      "op": "frame_dig 7",
      "defined_out": [
        "address#0",
        "i#14",
        "lastStakerIndex#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "lastStakerIndex#0"
      ]
    },
    "2455": {
      "op": "frame_bury 9",
      "defined_out": [
        "address#0",
        "i#14",
        "lastStakerIndex#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2457": {
      "block": "unstake_after_inlined_smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.getStakerIndex@40",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%44#0"
      ]
    },
    "2459": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "tmp%44#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%44#0",
        "300"
      ]
    },
    "2460": {
      "op": "<",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%45#0"
      ]
    },
    "2461": {
      "op": "bz unstake_after_if_else@29",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2464": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%46#0"
      ]
    },
    "2466": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "tmp%46#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%46#0",
        "700"
      ]
    },
    "2468": {
      "op": "+",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%47#0"
      ]
    },
    "2469": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%47#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%47#0",
        "0"
      ]
    },
    "2470": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2473": {
      "block": "unstake_after_if_else@29",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "lastStaker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "lastStaker#0"
      ]
    },
    "2475": {
      "op": "frame_dig 13",
      "defined_out": [
        "i#0",
        "lastStaker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "lastStaker#0",
        "i#0"
      ]
    },
    "2477": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.setStakerAtIndex",
      "op": "callsub setStakerAtIndex",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "lastStaker#0"
      ]
    },
    "2480": {
      "op": "pop",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2481": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "lastStaker#0",
        "removedStaker#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "removedStaker#1"
      ]
    },
    "2483": {
      "op": "frame_dig 9",
      "defined_out": [
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "removedStaker#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "removedStaker#1",
        "lastStakerIndex#0"
      ]
    },
    "2485": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.setStakerAtIndex",
      "op": "callsub setStakerAtIndex",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "removedStaker#1"
      ]
    },
    "2488": {
      "op": "pop",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2489": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "removedStaker#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2490": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0",
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "removedStaker#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "2491": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "removedStaker#1"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2492": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%10#0"
      ]
    },
    "2493": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "removedStaker#1",
        "tmp%48#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%48#0"
      ]
    },
    "2494": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "removedStaker#1",
        "tmp%48#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%48#0",
        "1"
      ]
    },
    "2495": {
      "op": "-",
      "defined_out": [
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "removedStaker#1",
        "to_encode%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "to_encode%1#0"
      ]
    },
    "2496": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "lastStaker#0",
        "lastStakerIndex#0",
        "removedStaker#1",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "val_as_bytes%1#0"
      ]
    },
    "2497": {
      "op": "bytec_1 // \"num_stakers\"",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "val_as_bytes%1#0",
        "\"num_stakers\""
      ]
    },
    "2498": {
      "op": "swap",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "\"num_stakers\"",
        "val_as_bytes%1#0"
      ]
    },
    "2499": {
      "op": "app_global_put",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2500": {
      "block": "unstake_after_if_else@31",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2502": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "2503": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "staker#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "tmp%51#0"
      ]
    },
    "2506": {
      "op": "swap",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "tmp%51#0",
        "staker#0"
      ]
    },
    "2507": {
      "callsub": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.setStaker",
      "op": "callsub setStaker",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2510": {
      "op": "pop",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2511": {
      "block": "unstake_after_if_else@32",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig 13",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "i#0"
      ]
    },
    "2513": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2514": {
      "op": "+",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "i#0"
      ]
    },
    "2515": {
      "op": "frame_bury 13",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2517": {
      "op": "b unstake_while_top@1"
    },
    "2520": {
      "block": "unstake_after_if_else@38",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "i#14"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "i#14"
      ]
    },
    "2522": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#14"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "i#14",
        "1"
      ]
    },
    "2523": {
      "op": "+",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "i#14"
      ]
    },
    "2524": {
      "op": "frame_bury 7",
      "defined_out": [
        "i#14"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2526": {
      "op": "b unstake_while_top@35"
    },
    "2529": {
      "block": "unstake_after_while@39",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "lastStakerIndex#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "lastStakerIndex#0"
      ]
    },
    "2530": {
      "op": "frame_bury 9",
      "defined_out": [
        "lastStakerIndex#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2532": {
      "op": "b unstake_after_inlined_smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.getStakerIndex@40"
    },
    "2535": {
      "block": "unstake_else_body@30",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2537": {
      "op": "dup",
      "defined_out": [
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "staker#0 (copy)"
      ]
    },
    "2538": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "staker#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "staker#0 (copy)",
        "32"
      ]
    },
    "2540": {
      "op": "extract_uint64",
      "defined_out": [
        "staker#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "tmp%50#0"
      ]
    },
    "2541": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "staker#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "tmp%50#0",
        "quantity#0 (copy)"
      ]
    },
    "2543": {
      "op": "-",
      "defined_out": [
        "staker#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "to_encode%2#0"
      ]
    },
    "2544": {
      "op": "itob",
      "defined_out": [
        "staker#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "val_as_bytes%2#0"
      ]
    },
    "2545": {
      "op": "replace2 32",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2547": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0",
        "0x0000000000000000"
      ]
    },
    "2549": {
      "op": "replace2 40",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "staker#0"
      ]
    },
    "2551": {
      "op": "frame_bury 5",
      "defined_out": [
        "staker#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2553": {
      "op": "b unstake_after_if_else@31"
    },
    "2556": {
      "block": "unstake_ternary_false@23",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "ternary_result%2#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%2#0"
      ]
    },
    "2558": {
      "op": "b unstake_ternary_merge@24"
    },
    "2561": {
      "block": "unstake_ternary_false@9",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "ternary_result%0#2"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%0#2"
      ]
    },
    "2563": {
      "op": "b unstake_ternary_merge@10"
    },
    "2566": {
      "block": "unstake_else_body@12",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "itxn_begin"
    },
    "2567": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0"
      ]
    },
    "2568": {
      "op": "bytec 7 // \"staked_asset_id\"",
      "defined_out": [
        "\"staked_asset_id\"",
        "0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "0",
        "\"staked_asset_id\""
      ]
    },
    "2570": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2571": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "maybe_value%3#0"
      ]
    },
    "2572": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "2573": {
      "op": "frame_bury 8",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2575": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2577": {
      "op": "frame_bury 1",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2579": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "2581": {
      "op": "frame_bury 2",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2583": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "quantity#0 (copy)"
      ]
    },
    "2585": {
      "op": "bnz unstake_ternary_false@14",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2588": {
      "op": "frame_dig 10",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "ternary_result%1#2"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%1#2"
      ]
    },
    "2590": {
      "block": "unstake_ternary_merge@15",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%1#2"
      ],
      "op": "itxn_field AssetAmount",
      "defined_out": [],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2592": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "2594": {
      "op": "itxn_field Sender",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2596": {
      "op": "frame_dig 1",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2598": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2600": {
      "op": "frame_dig 8",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "2602": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2604": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "4"
      ]
    },
    "2606": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2608": {
      "op": "intc 5 // 1000",
      "defined_out": [
        "1000",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "1000"
      ]
    },
    "2610": {
      "op": "itxn_field Fee",
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ]
    },
    "2612": {
      "op": "itxn_submit"
    },
    "2613": {
      "op": "b unstake_after_if_else@18"
    },
    "2616": {
      "block": "unstake_ternary_false@14",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "ternary_result%1#2"
      ],
      "stack_out": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0",
        "ternary_result%1#2"
      ]
    },
    "2618": {
      "op": "b unstake_ternary_merge@15"
    },
    "2621": {
      "block": "unstake_after_while@33",
      "stack_in": [
        "address#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "lastStaker#0",
        "removedStaker#1",
        "staker#0",
        "staker#16",
        "i#14",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "lastStakerIndex#0",
        "tmp%11#0",
        "tmp%23#0",
        "tmp%26#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2622": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.setStaker",
      "params": {
        "stakerAccount#0": "bytes",
        "staker#0": "bytes"
      },
      "block": "setStaker",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2625": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "item_offset%0#0"
      ]
    },
    "2627": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2628": {
      "block": "setStaker_while_top@1",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "0"
      ]
    },
    "2629": {
      "op": "bytec_1 // \"num_stakers\"",
      "defined_out": [
        "\"num_stakers\"",
        "0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "0",
        "\"num_stakers\""
      ]
    },
    "2630": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2631": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "2632": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "2633": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "2635": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2636": {
      "op": "bz setStaker_after_while@10",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2639": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2641": {
      "op": "intc_3 // 300",
      "defined_out": [
        "300",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%2#0",
        "300"
      ]
    },
    "2642": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2643": {
      "op": "bz setStaker_after_if_else@4",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2646": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2648": {
      "op": "intc 4 // 700",
      "defined_out": [
        "700",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%4#0",
        "700"
      ]
    },
    "2650": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "2651": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%5#0",
        "0"
      ]
    },
    "2652": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2655": {
      "block": "setStaker_after_if_else@4",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2656": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2657": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "2658": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "i#0"
      ]
    },
    "2660": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "i#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "i#0",
        "48"
      ]
    },
    "2661": {
      "op": "*",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0"
      ]
    },
    "2662": {
      "op": "dup",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0",
        "item_offset%0#0"
      ]
    },
    "2663": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0"
      ]
    },
    "2665": {
      "op": "intc_2 // 48",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%1#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "2666": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2667": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "2670": {
      "op": "frame_dig -2",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "stakerAccount#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%7#0",
        "stakerAccount#0 (copy)"
      ]
    },
    "2672": {
      "op": "==",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "2673": {
      "op": "bz setStaker_else_body@6",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2676": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2677": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2678": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0"
      ]
    },
    "2679": {
      "op": "frame_dig 1",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "i#0"
      ]
    },
    "2681": {
      "op": "intc 6 // 650",
      "defined_out": [
        "650",
        "i#0",
        "item_offset%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "i#0",
        "650"
      ]
    },
    "2683": {
      "op": "<",
      "defined_out": [
        "i#0",
        "index_is_in_bounds%0#0",
        "item_offset%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "2684": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0"
      ]
    },
    "2685": {
      "op": "frame_dig 0",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "item_offset%0#0"
      ]
    },
    "2687": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%2#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%2#0",
        "item_offset%0#0",
        "staker#0 (copy)"
      ]
    },
    "2689": {
      "op": "replace3",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "updated_target%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "updated_target%0#0"
      ]
    },
    "2690": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "updated_target%0#0",
        "\"stakers\""
      ]
    },
    "2691": {
      "op": "swap",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\"",
        "updated_target%0#0"
      ]
    },
    "2692": {
      "op": "box_put",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2693": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "staker#0 (copy)"
      ]
    },
    "2695": {
      "op": "frame_bury 0"
    },
    "2697": {
      "retsub": true,
      "op": "retsub"
    },
    "2698": {
      "block": "setStaker_else_body@6",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2699": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2700": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%3#0"
      ]
    },
    "2701": {
      "op": "frame_dig 0",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%3#0",
        "item_offset%0#0"
      ]
    },
    "2703": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "item_offset%0#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%3#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "2704": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2705": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "2708": {
      "op": "global ZeroAddress",
      "defined_out": [
        "item_offset%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2710": {
      "op": "==",
      "defined_out": [
        "item_offset%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "2711": {
      "op": "bz setStaker_after_if_else@8",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2714": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\""
      ]
    },
    "2715": {
      "op": "box_get",
      "defined_out": [
        "item_offset%0#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2716": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0"
      ]
    },
    "2717": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0",
        "i#0"
      ]
    },
    "2719": {
      "op": "intc 6 // 650",
      "defined_out": [
        "650",
        "i#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0",
        "i#0",
        "650"
      ]
    },
    "2721": {
      "op": "<",
      "defined_out": [
        "i#0",
        "index_is_in_bounds%1#0",
        "item_offset%0#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0",
        "index_is_in_bounds%1#0"
      ]
    },
    "2722": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0"
      ]
    },
    "2723": {
      "op": "frame_dig 0",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0",
        "item_offset%0#0"
      ]
    },
    "2725": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "maybe_value%4#0",
        "staker#0 (copy)"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "maybe_value%4#0",
        "item_offset%0#0",
        "staker#0 (copy)"
      ]
    },
    "2727": {
      "op": "replace3",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "updated_target%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "updated_target%1#0"
      ]
    },
    "2728": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "updated_target%1#0",
        "\"stakers\""
      ]
    },
    "2729": {
      "op": "swap",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "\"stakers\"",
        "updated_target%1#0"
      ]
    },
    "2730": {
      "op": "box_put",
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2731": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "staker#0 (copy)"
      ]
    },
    "2733": {
      "op": "frame_bury 0"
    },
    "2735": {
      "retsub": true,
      "op": "retsub"
    },
    "2736": {
      "block": "setStaker_after_if_else@8",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "i#0"
      ]
    },
    "2738": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2739": {
      "op": "+",
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "i#0"
      ]
    },
    "2740": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0"
      ]
    },
    "2742": {
      "op": "b setStaker_while_top@1"
    },
    "2745": {
      "block": "setStaker_after_while@10",
      "stack_in": [
        "item_offset%0#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "staker#0 (copy)"
      ],
      "stack_out": [
        "item_offset%0#0",
        "i#0",
        "staker#0 (copy)"
      ]
    },
    "2747": {
      "op": "frame_bury 0"
    },
    "2749": {
      "retsub": true,
      "op": "retsub"
    },
    "2750": {
      "subroutine": "smart_contracts/injected_rewards_pool_flux_gated/irpfg.algo.ts::InjectedRewardsPoolFluxGated.setStakerAtIndex",
      "params": {
        "staker#0": "bytes",
        "index#0": "uint64"
      },
      "block": "setStakerAtIndex",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2753": {
      "op": "bytec_0 // \"stakers\"",
      "defined_out": [
        "\"stakers\""
      ],
      "stack_out": [
        "\"stakers\""
      ]
    },
    "2754": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2755": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2756": {
      "op": "frame_dig -1",
      "defined_out": [
        "index#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "index#0 (copy)"
      ]
    },
    "2758": {
      "op": "intc 6 // 650",
      "defined_out": [
        "650",
        "index#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "index#0 (copy)",
        "650"
      ]
    },
    "2760": {
      "op": "<",
      "defined_out": [
        "index_is_in_bounds%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "2761": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2762": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "index#0 (copy)"
      ]
    },
    "2764": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "index#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "index#0 (copy)",
        "48"
      ]
    },
    "2765": {
      "op": "*",
      "defined_out": [
        "maybe_value%0#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "write_offset%0#0"
      ]
    },
    "2766": {
      "op": "frame_dig -2",
      "defined_out": [
        "maybe_value%0#0",
        "staker#0 (copy)",
        "write_offset%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "write_offset%0#0",
        "staker#0 (copy)"
      ]
    },
    "2768": {
      "op": "replace3",
      "defined_out": [
        "updated_target%0#0"
      ],
      "stack_out": [
        "updated_target%0#0"
      ]
    },
    "2769": {
      "op": "bytec_0 // \"stakers\"",
      "stack_out": [
        "updated_target%0#0",
        "\"stakers\""
      ]
    },
    "2770": {
      "op": "swap",
      "stack_out": [
        "\"stakers\"",
        "updated_target%0#0"
      ]
    },
    "2771": {
      "op": "box_put",
      "stack_out": []
    },
    "2772": {
      "op": "frame_dig -2",
      "stack_out": [
        "staker#0 (copy)"
      ]
    },
    "2774": {
      "retsub": true,
      "op": "retsub"
    }
  }
}